[dotenv@17.2.3] injecting env (21) from .env -- tip: ⚙️  override existing env vars with { override: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔑 add access controls to secrets: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T16:36:50.466Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T16:36:12.969Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (21) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T16:41:41.193Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T16:40:58.257Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (21) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T16:46:39.693Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
✅ Database pool closed
[dotenv@17.2.3] injecting env (21) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T16:47:34.677Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T16:53:56.920Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 125,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
✅ Database pool closed
[dotenv@17.2.3] injecting env (21) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔑 add access controls to secrets: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T16:56:22.474Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T17:01:18.709Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 134,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 140,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 139,
  rows: 1
}
2025-10-16T17:04:35.455Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 721,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
✅ Database pool closed
[dotenv@17.2.3] injecting env (20) from .env -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T17:07:31.507Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T17:18:06.962Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 125,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 115,
  rows: 1
}
2025-10-16T17:18:52.105Z - GET /api
2025-10-16T17:19:04.133Z - GET /auth
2025-10-16T17:19:04.152Z - GET /tasks
2025-10-16T17:19:04.157Z - GET /users
2025-10-16T17:19:04.259Z - GET /health
2025-10-16T17:19:44.016Z - GET /users
2025-10-16T17:19:44.141Z - GET /auth/test
2025-10-16T17:20:52.200Z - GET /users
2025-10-16T17:23:05.112Z - GET /users
2025-10-16T17:23:50.015Z - GET /users
2025-10-16T17:23:50.034Z - GET /auth/test
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T17:30:28.015Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T17:30:28.876Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-f4125593-da0c-4d7b-9336-0b31a425fe9e1760635855359',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-f4125593-da0c-4d7b-9336-0b31a425fe9e1760635855359',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 137,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 137,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 137,
  rows: 1
}
2025-10-16T17:32:40.268Z - GET /health
2025-10-16T17:39:23.725Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 778,
  rows: 2
}
🔍 Found 2 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
2025-10-16T17:41:52.824Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 611,
  rows: 1
}
2025-10-16T17:41:53.845Z - GET /auth/me
2025-10-16T17:41:53.911Z - GET /api-keys/usage
2025-10-16T17:41:53.913Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T17:41:54.230Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 623,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 639,
  rows: 9
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
2025-10-16T17:41:55.293Z - GET /api-keys/list
2025-10-16T17:41:55.294Z - GET /api-keys/usage
2025-10-16T17:41:55.313Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 610,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 679,
  rows: 9
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T17:41:56.450Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 627,
  rows: 2
}
2025-10-16T17:42:28.024Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:42:28.025Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 2
}
2025-10-16T17:42:28.995Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:42:29.218Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 145,
  rows: 2
}
2025-10-16T17:44:06.216Z - POST /auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 593,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 118,
  rows: 1
}
2025-10-16T17:44:07.486Z - GET /api-keys/list
2025-10-16T17:44:07.487Z - GET /auth/me
2025-10-16T17:44:07.487Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 122,
  rows: 0
}
2025-10-16T17:44:07.804Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T17:44:08.325Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 607,
  rows: 0
}
2025-10-16T17:44:08.514Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 600,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T17:44:27.746Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:44:27.751Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:44:27.752Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:44:27.752Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 699,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 711,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 756,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 753,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 132,
  rows: 3
}
2025-10-16T17:44:31.199Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
2025-10-16T17:44:32.886Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 627,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
2025-10-16T17:44:34.977Z - POST /api/admin/users/4/make-admin
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 622,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'UPDATE users SET is_admin = $1 WHERE id = $2',
  duration: 121,
  rows: 1
}
2025-10-16T17:44:36.056Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
2025-10-16T17:44:36.056Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 621,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 117,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 138,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 146,
  rows: 0
}
2025-10-16T17:44:48.463Z - GET /auth/me
2025-10-16T17:44:48.464Z - GET /api-keys/usage
2025-10-16T17:44:48.464Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 602,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-16T17:44:49.260Z - GET /api-keys/list
2025-10-16T17:44:49.447Z - GET /auth/me
2025-10-16T17:44:49.448Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 591,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 639,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T17:45:48.043Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 598,
  rows: 1
}
2025-10-16T17:45:49.059Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 602,
  rows: 1
}
2025-10-16T17:45:49.855Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 619,
  rows: 0
}
2025-10-16T17:46:11.940Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
2025-10-16T17:48:34.673Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-a2634acf-3905-432a-801d-93d8f97b21771760636863941',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-a2634acf-3905-432a-801d-93d8f97b21771760636863941',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_b5f7bb23248adf...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 601,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 20 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T17:48:36.413Z - GET /auth/verify
2025-10-16T17:48:42.916Z - GET /api-keys/usage
2025-10-16T17:48:42.916Z - GET /auth/me
2025-10-16T17:48:42.917Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-16T17:48:43.521Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 9
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 633,
  rows: 1
}
2025-10-16T17:48:43.715Z - GET /api-keys/list
2025-10-16T17:48:43.717Z - GET /api-keys/devices/all
2025-10-16T17:48:43.899Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 647,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 698,
  rows: 9
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 715,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 638,
  rows: 1
}
2025-10-16T17:48:44.735Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 646,
  rows: 2
}
2025-10-16T17:48:47.963Z - DELETE /api-keys/20
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 125,
  rows: 2
}
✅ API Key 20 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-16T17:48:48.967Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 615,
  rows: 1
}
2025-10-16T17:48:50.011Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 10
}
2025-10-16T17:48:50.870Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 0
}
2025-10-16T17:48:57.838Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-a2634acf-3905-432a-801d-93d8f97b21771760636863941',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-a2634acf-3905-432a-801d-93d8f97b21771760636863941',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 591,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 117,
  rows: 1
}
2025-10-16T17:49:07.985Z - GET /auth/me
2025-10-16T17:49:07.990Z - GET /api-keys/list
2025-10-16T17:49:07.991Z - GET /api-keys/list
2025-10-16T17:49:07.991Z - GET /auth/me
2025-10-16T17:49:07.993Z - GET /api-keys/usage
2025-10-16T17:49:07.993Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 615,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 10
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 611,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 610,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 616,
  rows: 10
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 650,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-16T17:49:08.796Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 1
}
2025-10-16T17:49:09.605Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 597,
  rows: 1
}
2025-10-16T17:49:19.803Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 599,
  rows: 1
}
2025-10-16T17:49:20.847Z - GET /api-keys/usage
2025-10-16T17:49:20.848Z - GET /api-keys/list
2025-10-16T17:49:20.848Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 145,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T17:49:21.303Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 670,
  rows: 1
}
2025-10-16T17:49:21.666Z - GET /api-keys/list
2025-10-16T17:49:21.671Z - GET /api-keys/devices/all
2025-10-16T17:49:21.856Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 609,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 609,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 607,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
2025-10-16T17:49:22.709Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 635,
  rows: 0
}
2025-10-16T17:50:06.191Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 689,
  rows: 1
}
2025-10-16T17:50:07.312Z - GET /auth/me
2025-10-16T17:50:07.313Z - GET /api-keys/list
2025-10-16T17:50:07.313Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T17:50:07.623Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 617,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 662,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-16T17:50:08.123Z - GET /api-keys/list
2025-10-16T17:50:08.126Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
2025-10-16T17:50:08.316Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 588,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 592,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-16T17:50:09.146Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 620,
  rows: 0
}
2025-10-16T17:52:43.684Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-5ff1b05c-fb16-4b63-bdfe-74a45f2faee81760637196061',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-72f54f7322c4f81e9d53751c5d1e644cb7bcda8381c48260cdae52b5a7ba486b-5ff1b05c-fb16-4b63-bdfe-74a45f2faee81760637196061',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 620,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-16T17:53:52.671Z - GET /auth/me
2025-10-16T17:53:52.672Z - GET /api-keys/list
2025-10-16T17:53:52.672Z - GET /api-keys/usage
2025-10-16T17:53:52.883Z - GET /auth/me
2025-10-16T17:53:53.090Z - GET /api-keys/usage
2025-10-16T17:53:53.091Z - GET /api-keys/list
2025-10-16T18:08:16.570Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-5f2be749-1f4d-4e63-a255-addffc6646af1760637894037',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-5f2be749-1f4d-4e63-a255-addffc6646af1760637894037',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 736,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 156,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 133,
  rows: 1
}
2025-10-16T18:08:18.318Z - GET /auth/verify
2025-10-16T18:13:14.319Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-33dcd65d-a160-4187-86d9-01751217666f1760638379346',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-33dcd65d-a160-4187-86d9-01751217666f1760638379346',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 120,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T18:13:15.373Z - GET /auth/verify
2025-10-16T18:13:51.934Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-99fd8e04-c4af-4db8-b228-703546b8ba6e1760638427370',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-99fd8e04-c4af-4db8-b228-703546b8ba6e1760638427370',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 139,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 139,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-16T18:13:53.194Z - GET /auth/verify
2025-10-16T18:17:48.999Z - GET /auth/me
2025-10-16T18:17:49.000Z - GET /api-keys/list
2025-10-16T18:17:49.003Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T18:17:49.372Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 785,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 802,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T18:17:49.995Z - GET /api-keys/list
2025-10-16T18:17:49.995Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 651,
  rows: 1
}
2025-10-16T18:17:50.186Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 619,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 619,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 607,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T18:17:51.034Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 0
}
2025-10-16T18:24:19.324Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f49354fb-aa9d-424e-89c5-4892aafff9201760638967826',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f49354fb-aa9d-424e-89c5-4892aafff9201760638967826',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T18:24:21.005Z - GET /auth/verify
2025-10-16T18:25:55.922Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-7911e29c-bad6-450e-b97a-4e816218e62b1760639152599',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-7911e29c-bad6-450e-b97a-4e816218e62b1760639152599',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 151,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-16T18:25:58.000Z - GET /auth/verify
2025-10-16T18:27:29.291Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f834e9b9-4e9c-4aae-bb21-bbf6d9d5dad41760639244322',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f834e9b9-4e9c-4aae-bb21-bbf6d9d5dad41760639244322',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 121,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 137,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-16T18:27:30.606Z - GET /auth/verify
2025-10-16T18:36:18.398Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-d64329a5-7d58-49dc-94cb-26f94078381d1760639751370',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-d64329a5-7d58-49dc-94cb-26f94078381d1760639751370',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 135,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 244,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 190,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-16T18:36:19.664Z - GET /auth/verify
2025-10-16T18:36:52.440Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-bd7b3eec-7fce-44f5-80ea-147b8418dcf51760639809159',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-bd7b3eec-7fce-44f5-80ea-147b8418dcf51760639809159',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 116,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-16T18:36:54.044Z - GET /auth/verify
2025-10-16T18:46:57.924Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-28c6f501-fb12-4475-9909-016a069009541760640400454',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-28c6f501-fb12-4475-9909-016a069009541760640400454',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 123,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
2025-10-16T18:46:58.982Z - GET /auth/verify
2025-10-16T18:50:57.229Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-abf4a8c8-8a79-4343-9694-14ccdda7cbb51760640644238',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-abf4a8c8-8a79-4343-9694-14ccdda7cbb51760640644238',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 121,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 114,
  rows: 1
}
2025-10-16T18:50:58.280Z - GET /auth/verify
2025-10-16T18:54:55.031Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-3f124c09-3c15-4659-90c6-764e84452a4f1760640852319',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-3f124c09-3c15-4659-90c6-764e84452a4f1760640852319',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 137,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T18:54:56.146Z - GET /auth/verify
2025-10-16T18:55:39.524Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-6be7d916-3d6b-477f-a858-7167ed0d1e1f1760640935570',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-6be7d916-3d6b-477f-a858-7167ed0d1e1f1760640935570',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 127,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 141,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-16T18:55:41.193Z - GET /auth/verify
2025-10-16T19:04:45.306Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 136,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T19:04:46.380Z - GET /auth/verify
2025-10-16T19:09:04.211Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 118,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 146,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T19:09:48.212Z - GET /health
2025-10-16T19:10:04.816Z - GET /api/tasks
2025-10-16T19:10:32.179Z - POST /api/auth/verify
2025-10-16T19:10:56.453Z - GET /auth/google
2025-10-16T19:11:03.100Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 115,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-16T19:11:06.804Z - GET /auth/github
2025-10-16T19:11:07.022Z - GET /auth/github
2025-10-16T19:13:50.321Z - GET /auth/me
2025-10-16T19:13:50.321Z - GET /api-keys/list
2025-10-16T19:13:50.323Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 114,
  rows: 1
}
2025-10-16T19:13:50.702Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 637,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 649,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-16T19:13:51.148Z - GET /api-keys/list
2025-10-16T19:13:51.167Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 625,
  rows: 1
}
2025-10-16T19:13:51.333Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 643,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 626,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 615,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-16T19:13:52.220Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 651,
  rows: 0
}
2025-10-16T19:14:00.882Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 620,
  rows: 1
}
2025-10-16T19:14:01.942Z - GET /auth/me
2025-10-16T19:14:01.943Z - GET /api-keys/usage
2025-10-16T19:14:01.943Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 137,
  rows: 1
}
2025-10-16T19:14:02.268Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 596,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 628,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-16T19:14:02.729Z - GET /api-keys/list
2025-10-16T19:14:02.735Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 592,
  rows: 1
}
2025-10-16T19:14:02.917Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 631,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 639,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-16T19:14:03.725Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 636,
  rows: 0
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-16T19:15:28.663Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-16T19:14:43.798Z - GET /auth/me
2025-10-16T19:14:43.804Z - GET /api-keys/list
2025-10-16T19:14:43.806Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T19:14:44.175Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 614,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T19:14:44.608Z - GET /api-keys/devices/all
2025-10-16T19:14:44.609Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
2025-10-16T19:14:44.799Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 611,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T19:14:45.638Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 628,
  rows: 0
}
2025-10-16T19:15:13.501Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_280a4d6d3c59ec...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 649,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 22 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-16T19:15:35.077Z - DELETE /api-keys/22
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 127,
  rows: 2
}
✅ API Key 22 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-16T19:15:35.711Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 628,
  rows: 1
}
2025-10-16T19:15:36.774Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 625,
  rows: 11
}
2025-10-16T19:15:37.593Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 595,
  rows: 0
}
2025-10-16T19:15:44.550Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 613,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 23 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 143,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-16T20:00:03.634Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-362bb519c957e94dde1cdc66ff55d904aff3dd43985ed347bce64f19370c3df2-f92ce906-00a1-414c-9c39-8d98584ef7f31760641463653',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 844,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 23 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 142,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T20:06:07.724Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 758,
  rows: 1
}
2025-10-16T20:06:08.753Z - GET /api-keys/usage
2025-10-16T20:06:08.754Z - GET /api-keys/list
2025-10-16T20:06:08.755Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-16T20:06:09.204Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 668,
  rows: 11
}
2025-10-16T20:06:09.563Z - GET /auth/me
2025-10-16T20:06:09.622Z - GET /api-keys/list
2025-10-16T20:06:09.623Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 644,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 634,
  rows: 11
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 637,
  rows: 1
}
2025-10-16T20:06:10.633Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 635,
  rows: 1
}
2025-10-16T20:31:11.585Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 762,
  rows: 1
}
2025-10-16T20:31:15.593Z - GET /auth/me
2025-10-16T20:31:15.593Z - GET /api-keys/list
2025-10-16T20:31:15.594Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 124,
  rows: 1
}
2025-10-16T20:31:16.194Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 621,
  rows: 11
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 645,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-16T20:31:16.416Z - GET /api-keys/list
2025-10-16T20:31:16.418Z - GET /api-keys/devices/all
2025-10-16T20:31:16.607Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 640,
  rows: 11
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 619,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-16T20:31:17.376Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 656,
  rows: 1
}
2025-10-16T20:31:44.798Z - DELETE /api-keys/23
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 127,
  rows: 1
}
✅ API Key 23 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-16T20:31:45.756Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 592,
  rows: 1
}
2025-10-16T20:31:46.784Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 606,
  rows: 12
}
2025-10-16T20:31:47.596Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 654,
  rows: 0
}
2025-10-16T20:48:05.602Z - DELETE /api-keys/24
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 615,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 120,
  rows: 0
}
✅ API Key 24 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-16T20:48:06.636Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 607,
  rows: 1
}
2025-10-16T20:48:07.705Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 609,
  rows: 13
}
2025-10-16T20:48:08.535Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 648,
  rows: 0
}
2025-10-16T20:52:25.968Z - GET /auth/me
2025-10-16T20:52:25.971Z - GET /api-keys/usage
2025-10-16T20:52:25.971Z - GET /auth/me
2025-10-16T20:52:25.972Z - GET /api-keys/usage
2025-10-16T20:52:25.972Z - GET /api-keys/list
2025-10-16T20:52:25.973Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 721,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 721,
  rows: 13
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 722,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 723,
  rows: 13
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 747,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 767,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
2025-10-16T20:52:26.892Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 653,
  rows: 0
}
2025-10-16T20:52:27.739Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 644,
  rows: 0
}
2025-10-16T23:20:38.326Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-5553fbfc-fd7b-4c27-a9f6-f8256f423dbe1760656859722',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-5553fbfc-fd7b-4c27-a9f6-f8256f423dbe1760656859722',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 691,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 25 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 116,
  rows: 0
}
2025-10-16T23:20:40.525Z - GET /auth/verify
2025-10-16T23:21:25.830Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 118,
  rows: 1
}
2025-10-16T23:21:26.344Z - GET /auth/me
2025-10-16T23:21:26.360Z - GET /api-keys/list
2025-10-16T23:21:26.361Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 114,
  rows: 1
}
2025-10-16T23:21:26.692Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 683,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 690,
  rows: 13
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T23:21:27.265Z - GET /api-keys/list
2025-10-16T23:21:27.283Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 661,
  rows: 1
}
2025-10-16T23:21:27.479Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 620,
  rows: 13
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 637,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-16T23:21:28.370Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 0
}
2025-10-16T23:21:40.465Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-5553fbfc-fd7b-4c27-a9f6-f8256f423dbe1760656859722',
  userAgent: 'axios/1.12.2',
  ipAddress: '::ffff:127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-5553fbfc-fd7b-4c27-a9f6-f8256f423dbe1760656859722',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '::ffff:127.0.0.1'
}
🔑 Validating API Key: auxly_ebf3bf8632fb1d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 25 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-16T23:47:59.961Z - GET /health
2025-10-16T23:48:01.493Z - GET /api-keys/list
2025-10-16T23:48:01.494Z - GET /api-keys/usage
2025-10-16T23:48:01.494Z - GET /auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 674,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 677,
  rows: 13
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 741,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-16T23:48:02.392Z - GET /auth/me
2025-10-16T23:48:02.397Z - GET /api-keys/list
2025-10-16T23:48:02.401Z - GET /api-keys/devices/all
2025-10-16T23:48:02.602Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 13
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 629,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 645,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 616,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-16T23:48:03.501Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 637,
  rows: 1
}
2025-10-16T23:48:19.425Z - GET /health
2025-10-16T23:56:42.931Z - GET /health
2025-10-16T23:57:18.152Z - GET /health
2025-10-16T23:57:30.165Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 712,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 25 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 122,
  rows: 0
}
2025-10-17T00:09:49.764Z - GET /health
2025-10-17T09:54:36.018Z - GET /auth/google
2025-10-17T09:55:11.438Z - POST /auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 124,
  rows: 1
}
2025-10-17T09:55:12.290Z - GET /api-keys/usage
2025-10-17T09:55:12.290Z - GET /api-keys/list
2025-10-17T09:55:12.290Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 126,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 682,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 685,
  rows: 0
}
2025-10-17T10:31:03.695Z - GET /health
2025-10-17T10:36:26.581Z - GET /api-keys/list
2025-10-17T10:36:26.581Z - GET /auth/me
2025-10-17T10:36:26.582Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 690,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 694,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 702,
  rows: 13
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T10:36:27.499Z - GET /auth/me
2025-10-17T10:36:27.767Z - GET /api-keys/list
2025-10-17T10:36:27.768Z - GET /api-keys/usage
2025-10-17T10:36:27.780Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 590,
  rows: 13
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 591,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 579,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T10:36:48.762Z - GET /-keys/verify
2025-10-17T10:36:51.590Z - GET /-keys/verify
2025-10-17T10:37:51.553Z - GET /auth/me
2025-10-17T10:37:51.562Z - GET /api-keys/usage
2025-10-17T10:37:51.564Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 600,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 629,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-17T10:44:02.789Z - POST /graphql
2025-10-17T10:44:03.244Z - POST /gql
2025-10-17T10:44:03.309Z - POST /graphql
2025-10-17T10:44:04.029Z - POST /gql
2025-10-17T10:44:05.522Z - GET /-docs/swagger.json
2025-10-17T10:44:05.756Z - GET /swagger.json
2025-10-17T10:44:07.317Z - GET /-docs/swagger.json
2025-10-17T10:44:07.666Z - GET /swagger.json
2025-10-17T10:44:22.123Z - GET /health
2025-10-17T10:45:01.789Z - GET /health
2025-10-17T10:45:02.467Z - GET /favicon.ico
2025-10-17T10:52:21.447Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 710,
  rows: 1
}
2025-10-17T10:52:22.474Z - GET /api-keys/list
2025-10-17T10:52:22.474Z - GET /auth/me
2025-10-17T10:52:22.475Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 121,
  rows: 13
}
2025-10-17T10:52:22.813Z - GET /api-keys/list
2025-10-17T10:52:22.813Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 589,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T10:52:23.295Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 589,
  rows: 13
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 595,
  rows: 1
}
2025-10-17T10:52:23.515Z - GET /api-keys/usage
2025-10-17T10:52:23.786Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 650,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 133,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 622,
  rows: 1
}
2025-10-17T11:15:58.608Z - GET /api/health
2025-10-17T11:25:15.251Z - DELETE /api-keys/25
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 737,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 125,
  rows: 1
}
✅ API Key 25 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T11:25:16.351Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 615,
  rows: 1
}
2025-10-17T11:25:17.435Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 14
}
2025-10-17T11:25:18.305Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 607,
  rows: 0
}
2025-10-17T12:10:13.641Z - GET /api/v1/api-keys/verify
2025-10-17T12:10:25.356Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: test...
❌ API Key format invalid
2025-10-17T12:14:40.312Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_bf499d0c7f3b25...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 703,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 26 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
2025-10-17T12:23:34.132Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'curl/8.14.1',
  ipAddress: '151.255.36.90',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_bf499d0c7f3b25...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 713,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 26 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
2025-10-17T12:23:44.453Z - GET /api-keys/list
2025-10-17T12:23:44.453Z - GET /auth/me
2025-10-17T12:23:44.453Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 586,
  rows: 14
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 636,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
2025-10-17T12:23:45.266Z - GET /api-keys/devices/all
2025-10-17T12:23:45.267Z - GET /api-keys/list
2025-10-17T12:23:45.480Z - GET /auth/me
2025-10-17T12:23:45.481Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 603,
  rows: 14
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 605,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T12:23:46.353Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 642,
  rows: 0
}
2025-10-17T12:23:51.652Z - GET /api-keys/list
2025-10-17T12:23:51.653Z - GET /auth/me
2025-10-17T12:23:51.653Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 590,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 591,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 603,
  rows: 14
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-17T12:23:52.463Z - GET /auth/me
2025-10-17T12:23:52.793Z - GET /api-keys/list
2025-10-17T12:23:52.800Z - GET /api-keys/devices/all
2025-10-17T12:23:52.800Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 637,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 583,
  rows: 14
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 585,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 601,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T12:23:53.852Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 0
}
2025-10-17T12:27:51.245Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'test-curl-device-001',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'Test Device - curl',
  customOsInfo: 'Windows Server 2019',
  customBrowserInfo: 'curl'
}
📱 Device Info: PRESENT {
  fingerprint: 'test-curl-device-001',
  name: 'Test Device - curl',
  osInfo: 'Windows Server 2019',
  browserInfo: 'curl',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_bf499d0c7f3b25...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 604,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 26 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-17T12:27:55.360Z - DELETE /api-keys/26
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 26 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T12:27:56.320Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 607,
  rows: 1
}
2025-10-17T12:27:57.471Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 638,
  rows: 15
}
2025-10-17T12:27:58.359Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 0
}
2025-10-17T12:29:41.084Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-1f079a55-1033-4e1b-b737-e9a2a5fa83be1760704123012',
  userAgent: 'curl/8.14.1',
  ipAddress: '151.255.36.90',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-1f079a55-1033-4e1b-b737-e9a2a5fa83be1760704123012',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '151.255.36.90'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 703,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 117,
  rows: 1
}
2025-10-17T12:29:49.092Z - GET /auth/me
2025-10-17T12:29:49.101Z - GET /api-keys/usage
2025-10-17T12:29:49.101Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 585,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 586,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 585,
  rows: 15
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T12:29:49.910Z - GET /api-keys/list
2025-10-17T12:29:49.911Z - GET /auth/me
2025-10-17T12:29:49.915Z - GET /api-keys/devices/all
2025-10-17T12:29:50.132Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 635,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 638,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 593,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T12:29:51.001Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 591,
  rows: 1
}
2025-10-17T12:32:57.999Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ebf3bf8632fb1d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 618,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 123,
  rows: 0
}
2025-10-17T12:32:59.488Z - GET /auth/verify
2025-10-17T12:33:22.547Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 120,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-17T12:33:33.142Z - GET /auth/me
2025-10-17T12:33:33.143Z - GET /api-keys/usage
2025-10-17T12:33:33.143Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 595,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 608,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 637,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T12:33:33.968Z - GET /api-keys/list
2025-10-17T12:33:33.969Z - GET /api-keys/devices/all
2025-10-17T12:33:34.168Z - GET /auth/me
2025-10-17T12:33:34.175Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 582,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-17T12:33:35.058Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 2
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  override existing env vars with { override: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-17T12:47:00.071Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-17T12:46:24.276Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 124,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T13:01:04.405Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 702,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
2025-10-17T13:19:19.458Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 712,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
2025-10-17T13:30:56.160Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 685,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T13:44:49.095Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 746,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
2025-10-17T13:50:10.751Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 732,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
2025-10-17T13:52:20.337Z - GET /health
2025-10-17T13:52:21.294Z - GET /favicon.ico
2025-10-17T13:54:02.449Z - GET /health
2025-10-17T13:55:09.658Z - GET /health
2025-10-17T13:56:39.587Z - GET /health
2025-10-17T13:58:09.564Z - GET /health
2025-10-17T13:59:39.532Z - GET /health
2025-10-17T14:01:09.645Z - GET /health
2025-10-17T14:02:39.541Z - GET /health
2025-10-17T14:03:41.324Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 693,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T14:04:09.560Z - GET /health
2025-10-17T14:05:39.549Z - GET /health
2025-10-17T14:07:09.547Z - GET /health
2025-10-17T14:08:39.547Z - GET /health
2025-10-17T14:10:09.539Z - GET /health
2025-10-17T14:11:39.633Z - GET /health
2025-10-17T14:12:11.663Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 710,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
2025-10-17T14:13:09.627Z - GET /health
2025-10-17T14:14:39.567Z - GET /health
2025-10-17T14:16:09.564Z - GET /health
2025-10-17T14:17:39.553Z - GET /health
2025-10-17T14:17:45.347Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 725,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-17T14:19:09.586Z - GET /health
2025-10-17T14:20:39.558Z - GET /health
2025-10-17T14:20:45.051Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
2025-10-17T14:22:09.642Z - GET /health
2025-10-17T14:23:39.564Z - GET /health
2025-10-17T14:25:09.550Z - GET /health
2025-10-17T14:25:19.448Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 766,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 135,
  rows: 1
}
2025-10-17T14:26:39.562Z - GET /health
2025-10-17T14:28:09.632Z - GET /health
2025-10-17T14:29:39.534Z - GET /health
2025-10-17T14:31:01.407Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
2025-10-17T14:31:09.533Z - GET /health
2025-10-17T14:32:39.533Z - GET /health
2025-10-17T14:34:09.636Z - GET /health
2025-10-17T14:35:39.548Z - GET /health
2025-10-17T14:37:09.625Z - GET /health
2025-10-17T14:38:29.180Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 738,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-17T14:38:39.554Z - GET /health
2025-10-17T14:40:09.536Z - GET /health
2025-10-17T14:41:39.536Z - GET /health
2025-10-17T14:41:44.453Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 592,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
2025-10-17T14:43:09.563Z - GET /health
2025-10-17T14:44:09.036Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 710,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
2025-10-17T14:44:39.563Z - GET /health
2025-10-17T14:46:09.661Z - GET /health
2025-10-17T14:47:39.534Z - GET /health
2025-10-17T14:48:23.424Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 628,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
2025-10-17T14:49:09.562Z - GET /health
2025-10-17T14:50:39.537Z - GET /health
2025-10-17T14:51:04.407Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 685,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
2025-10-17T14:52:09.531Z - GET /health
2025-10-17T14:53:30.633Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 600,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T14:53:39.543Z - GET /health
2025-10-17T14:55:09.543Z - GET /health
2025-10-17T14:56:39.564Z - GET /health
2025-10-17T14:58:09.572Z - GET /health
2025-10-17T14:59:39.566Z - GET /health
2025-10-17T15:01:10.539Z - GET /health
2025-10-17T15:02:39.626Z - GET /health
2025-10-17T15:02:57.844Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 139,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 136,
  rows: 1
}
2025-10-17T15:04:09.569Z - GET /health
2025-10-17T15:05:39.541Z - GET /health
2025-10-17T15:07:09.551Z - GET /health
2025-10-17T15:07:56.437Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 692,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-17T15:08:39.626Z - GET /health
2025-10-17T15:10:09.545Z - GET /health
2025-10-17T15:11:39.657Z - GET /health
2025-10-17T15:13:09.535Z - GET /health
2025-10-17T15:13:51.011Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
2025-10-17T15:14:39.657Z - GET /health
2025-10-17T15:16:09.537Z - GET /health
2025-10-17T15:16:17.966Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 647,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 137,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
2025-10-17T15:17:39.554Z - GET /health
2025-10-17T15:19:09.659Z - GET /health
2025-10-17T15:20:39.531Z - GET /health
2025-10-17T15:22:09.563Z - GET /health
2025-10-17T15:23:39.561Z - GET /health
2025-10-17T15:25:09.648Z - GET /health
2025-10-17T15:26:39.531Z - GET /health
2025-10-17T15:28:09.568Z - GET /health
2025-10-17T15:29:39.642Z - GET /health
2025-10-17T15:31:09.553Z - GET /health
2025-10-17T15:32:39.538Z - GET /health
2025-10-17T15:34:09.557Z - GET /health
2025-10-17T15:35:39.564Z - GET /health
2025-10-17T15:37:09.533Z - GET /health
2025-10-17T15:38:39.536Z - GET /health
2025-10-17T15:40:09.532Z - GET /health
2025-10-17T15:41:39.563Z - GET /health
2025-10-17T15:43:09.540Z - GET /health
2025-10-17T15:44:39.660Z - GET /health
2025-10-17T15:46:09.563Z - GET /health
2025-10-17T15:47:39.554Z - GET /health
2025-10-17T15:49:09.627Z - GET /health
2025-10-17T15:50:39.654Z - GET /health
2025-10-17T15:52:09.531Z - GET /health
2025-10-17T15:53:39.635Z - GET /health
2025-10-17T15:55:09.530Z - GET /health
2025-10-17T15:56:39.660Z - GET /health
2025-10-17T15:58:09.623Z - GET /health
2025-10-17T15:59:39.537Z - GET /health
2025-10-17T16:01:09.556Z - GET /health
2025-10-17T16:02:39.556Z - GET /health
2025-10-17T16:02:46.591Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 686,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
2025-10-17T16:04:09.543Z - GET /health
2025-10-17T16:05:39.551Z - GET /health
2025-10-17T16:07:09.529Z - GET /health
2025-10-17T16:08:39.632Z - GET /health
2025-10-17T16:09:26.685Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 710,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T16:09:55.714Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 609,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
2025-10-17T16:10:09.537Z - GET /health
2025-10-17T16:11:39.530Z - GET /health
2025-10-17T16:13:09.558Z - GET /health
2025-10-17T16:14:39.617Z - GET /health
2025-10-17T16:16:09.679Z - GET /health
2025-10-17T16:17:10.788Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 712,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
2025-10-17T16:17:13.631Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 642,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
2025-10-17T16:17:26.474Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 649,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
2025-10-17T16:17:39.565Z - GET /health
2025-10-17T16:17:43.532Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 590,
  rows: 1
}
2025-10-17T16:18:02.426Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 124,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T16:18:52.111Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 604,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-17T16:19:09.545Z - GET /health
2025-10-17T16:19:16.503Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 639,
  rows: 1
}
2025-10-17T16:19:17.468Z - GET /auth/me
2025-10-17T16:19:17.470Z - GET /api-keys/usage
2025-10-17T16:19:17.470Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T16:19:17.887Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 708,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 733,
  rows: 15
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T16:19:18.436Z - GET /api-keys/devices/all
2025-10-17T16:19:18.437Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 730,
  rows: 1
}
2025-10-17T16:19:18.657Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 635,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 636,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 649,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T16:19:19.568Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 2
}
2025-10-17T16:19:25.693Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-95f6afb8-5695-4493-b2d3-d0df478507271760700449871',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 610,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 235,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 246,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-17T16:19:33.284Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 770,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
2025-10-17T16:20:39.623Z - GET /health
2025-10-17T16:22:08.859Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 599,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
2025-10-17T16:22:09.629Z - GET /health
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
2025-10-17T16:23:39.522Z - GET /health
2025-10-17T16:25:09.534Z - GET /health
2025-10-17T16:26:39.571Z - GET /health
2025-10-17T16:28:09.526Z - GET /health
2025-10-17T16:29:39.525Z - GET /health
2025-10-17T16:31:09.666Z - GET /health
2025-10-17T16:31:14.512Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-e12efa3c-0817-46c4-a69b-f3a93f2ef7b51760718661102',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-e12efa3c-0817-46c4-a69b-f3a93f2ef7b51760718661102',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-17T16:31:16.091Z - GET /auth/verify
2025-10-17T16:32:39.557Z - GET /health
2025-10-17T16:32:49.095Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-edb9e6a1-6395-46d2-b57a-f3cb68747de81760718752152',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-edb9e6a1-6395-46d2-b57a-f3cb68747de81760718752152',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 122,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T16:32:50.386Z - GET /auth/verify
2025-10-17T16:34:09.579Z - GET /health
2025-10-17T16:35:39.545Z - GET /health
2025-10-17T16:37:09.533Z - GET /health
2025-10-17T16:38:01.883Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-1f079a55-1033-4e1b-b737-e9a2a5fa83be1760704123012',
  userAgent: 'curl/8.14.1',
  ipAddress: '151.255.36.90',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-1f079a55-1033-4e1b-b737-e9a2a5fa83be1760704123012',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '151.255.36.90'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 130,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-17T16:38:39.522Z - GET /health
2025-10-17T16:38:47.009Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 731,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-17T16:38:48.747Z - GET /auth/verify
2025-10-17T16:39:19.849Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 130,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
2025-10-17T16:40:00.850Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_badcfbe2cec3f8...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 613,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 27 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T16:40:09.528Z - GET /health
2025-10-17T16:40:38.370Z - GET /auth/me
2025-10-17T16:40:38.371Z - GET /api-keys/usage
2025-10-17T16:40:38.371Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T16:40:38.942Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 589,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 639,
  rows: 15
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T16:40:39.278Z - GET /api-keys/list
2025-10-17T16:40:39.278Z - GET /api-keys/devices/all
2025-10-17T16:40:39.491Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 589,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 629,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 591,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T16:40:40.369Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 2
}
2025-10-17T16:40:46.663Z - DELETE /api-keys/27
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 610,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 123,
  rows: 2
}
✅ API Key 27 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-17T16:40:47.638Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 601,
  rows: 1
}
2025-10-17T16:40:48.691Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 600,
  rows: 16
}
2025-10-17T16:40:49.515Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 0
}
2025-10-17T16:41:05.382Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-714fdab5-7249-40d7-b44e-1f01f449f3701760718866475',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 609,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 126,
  rows: 1
}
2025-10-17T16:41:30.498Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 588,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T16:41:39.615Z - GET /health
2025-10-17T16:41:54.929Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 632,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
2025-10-17T16:42:04.121Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 592,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
2025-10-17T16:42:09.154Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-17T16:42:18.174Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 610,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
2025-10-17T16:42:24.527Z - POST /trial/verify
🔍 Device Tracking Debug: {
  hasFingerprint: false,
  fingerprint: undefined,
  userAgent: 'node',
  ipAddress: '127.0.0.1',
  customDeviceName: undefined,
  customOsInfo: undefined,
  customBrowserInfo: undefined
}
📱 Device Info: MISSING undefined
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 599,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
2025-10-17T16:43:09.621Z - GET /health
2025-10-17T16:44:39.533Z - GET /health
2025-10-17T16:46:09.645Z - GET /health
2025-10-17T16:47:39.555Z - GET /health
2025-10-17T16:49:09.555Z - GET /health
2025-10-17T16:50:39.529Z - GET /health
2025-10-17T16:52:09.539Z - GET /health
2025-10-17T16:53:39.649Z - GET /health
2025-10-17T16:55:09.564Z - GET /health
2025-10-17T16:56:39.560Z - GET /health
2025-10-17T16:57:34.006Z - POST /auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 689,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 126,
  rows: 1
}
2025-10-17T16:57:35.402Z - GET /auth/me
2025-10-17T16:57:35.403Z - GET /api-keys/usage
2025-10-17T16:57:35.403Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T16:57:35.715Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 643,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 646,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 591,
  rows: 1
}
2025-10-17T16:57:36.923Z - GET /api-keys/usage
2025-10-17T16:57:36.924Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 609,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-17T16:58:01.373Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 638,
  rows: 1
}
2025-10-17T16:58:02.446Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 592,
  rows: 1
}
2025-10-17T16:58:03.250Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 0
}
2025-10-17T16:58:09.567Z - GET /health
2025-10-17T16:59:39.527Z - GET /health
2025-10-17T17:01:09.621Z - GET /health
2025-10-17T17:02:39.556Z - GET /health
2025-10-17T17:04:09.554Z - GET /health
2025-10-17T17:05:39.550Z - GET /health
2025-10-17T17:07:09.528Z - GET /health
2025-10-17T17:08:39.553Z - GET /health
2025-10-17T17:10:09.633Z - GET /health
2025-10-17T17:11:39.553Z - GET /health
2025-10-17T17:13:09.554Z - GET /health
2025-10-17T17:14:39.554Z - GET /health
2025-10-17T17:16:09.562Z - GET /health
2025-10-17T17:17:39.524Z - GET /health
2025-10-17T17:19:09.655Z - GET /health
2025-10-17T17:20:39.529Z - GET /health
2025-10-17T17:22:09.622Z - GET /health
2025-10-17T17:23:39.547Z - GET /health
2025-10-17T17:25:09.523Z - GET /health
2025-10-17T17:26:39.640Z - GET /health
2025-10-17T17:28:05.821Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-887b7fd0-df90-4b6e-8d37-b3b4d7f7272e1760722044443',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-887b7fd0-df90-4b6e-8d37-b3b4d7f7272e1760722044443',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 611,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 122,
  rows: 1
}
2025-10-17T17:28:09.619Z - GET /health
2025-10-17T17:29:11.935Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-887b7fd0-df90-4b6e-8d37-b3b4d7f7272e1760722044443',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-887b7fd0-df90-4b6e-8d37-b3b4d7f7272e1760722044443',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_e739d48e65ea6b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 645,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-17T17:29:39.552Z - GET /health
2025-10-17T17:31:09.635Z - GET /health
2025-10-17T17:32:39.639Z - GET /health
2025-10-17T17:34:09.630Z - GET /health
2025-10-17T17:35:39.647Z - GET /health
2025-10-17T17:37:09.607Z - GET /health
2025-10-17T17:38:39.613Z - GET /health
2025-10-17T17:40:09.648Z - GET /health
2025-10-17T17:41:39.552Z - GET /health
2025-10-17T17:43:10.540Z - GET /health
2025-10-17T17:44:39.644Z - GET /health
2025-10-17T17:46:09.623Z - GET /health
2025-10-17T17:47:39.539Z - GET /health
2025-10-17T17:49:09.642Z - GET /health
2025-10-17T17:50:39.618Z - GET /health
2025-10-17T17:52:09.629Z - GET /health
2025-10-17T17:53:39.541Z - GET /health
2025-10-17T17:55:09.648Z - GET /health
2025-10-17T17:56:39.549Z - GET /health
2025-10-17T17:58:09.615Z - GET /health
2025-10-17T17:59:39.528Z - GET /health
2025-10-17T18:01:09.564Z - GET /health
2025-10-17T18:02:39.540Z - GET /health
2025-10-17T18:04:09.532Z - GET /health
2025-10-17T18:05:39.522Z - GET /health
2025-10-17T18:07:09.611Z - GET /health
2025-10-17T18:08:39.534Z - GET /health
2025-10-17T18:10:09.520Z - GET /health
2025-10-17T18:11:39.552Z - GET /health
2025-10-17T18:13:09.673Z - GET /health
2025-10-17T18:14:39.535Z - GET /health
2025-10-17T18:16:09.547Z - GET /health
2025-10-17T18:17:39.662Z - GET /health
2025-10-17T18:19:09.609Z - GET /health
2025-10-17T18:20:39.529Z - GET /health
2025-10-17T18:22:09.638Z - GET /health
2025-10-17T18:23:39.528Z - GET /health
2025-10-17T18:25:09.647Z - GET /health
2025-10-17T18:26:39.618Z - GET /health
2025-10-17T18:28:09.529Z - GET /health
2025-10-17T18:29:39.628Z - GET /health
2025-10-17T18:31:09.619Z - GET /health
2025-10-17T18:32:39.616Z - GET /health
2025-10-17T18:34:09.563Z - GET /health
2025-10-17T18:35:39.520Z - GET /health
2025-10-17T18:37:09.647Z - GET /health
2025-10-17T18:38:39.523Z - GET /health
2025-10-17T18:40:09.526Z - GET /health
2025-10-17T18:41:39.516Z - GET /health
2025-10-17T18:43:09.535Z - GET /health
2025-10-17T18:44:10.299Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 787,
  rows: 1
}
2025-10-17T18:44:11.650Z - GET /auth/me
2025-10-17T18:44:11.651Z - GET /api-keys/list
2025-10-17T18:44:11.651Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 634,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 660,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-17T18:44:39.543Z - GET /health
2025-10-17T18:46:09.639Z - GET /health
2025-10-17T18:47:34.818Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 623,
  rows: 1
}
2025-10-17T18:47:35.976Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 614,
  rows: 1
}
2025-10-17T18:47:36.817Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 701,
  rows: 0
}
2025-10-17T18:47:39.560Z - GET /health
2025-10-17T18:47:46.081Z - DELETE /api-keys/30
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 0
}
✅ API Key 30 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-17T18:47:47.172Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 588,
  rows: 1
}
2025-10-17T18:47:47.967Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 582,
  rows: 0
}
2025-10-17T18:49:09.522Z - GET /health
2025-10-17T18:50:39.519Z - GET /health
2025-10-17T18:52:09.640Z - GET /health
2025-10-17T18:53:39.642Z - GET /health
2025-10-17T18:55:09.610Z - GET /health
2025-10-17T18:56:39.625Z - GET /health
2025-10-17T18:57:30.357Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-17T18:57:30.358Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 716,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 717,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 5
}
2025-10-17T18:57:31.426Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-17T18:57:31.655Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 5
}
2025-10-17T18:57:37.580Z - GET /api/admin/users/6
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 116,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 116,
  rows: 0
}
2025-10-17T18:57:38.821Z - GET /api/admin/users/6
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 599,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 117,
  rows: 0
}
2025-10-17T18:57:44.705Z - GET /api/admin/users/6
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 0
}
2025-10-17T18:58:09.519Z - GET /health
2025-10-17T18:59:39.526Z - GET /health
2025-10-17T19:01:09.618Z - GET /health
2025-10-17T19:02:39.514Z - GET /health
2025-10-17T19:04:09.646Z - GET /health
2025-10-17T19:05:39.536Z - GET /health
2025-10-17T19:07:09.638Z - GET /health
2025-10-17T19:08:39.615Z - GET /health
2025-10-17T19:10:09.525Z - GET /health
2025-10-17T19:11:39.615Z - GET /health
2025-10-17T19:13:09.629Z - GET /health
2025-10-17T19:14:39.528Z - GET /health
2025-10-17T19:16:09.626Z - GET /health
2025-10-17T19:17:39.648Z - GET /health
2025-10-17T19:18:59.242Z - GET /api-keys/list
2025-10-17T19:18:59.243Z - GET /auth/me
2025-10-17T19:18:59.244Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 730,
  rows: 16
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 750,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 754,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-17T19:19:00.201Z - GET /api-keys/list
2025-10-17T19:19:00.206Z - GET /api-keys/devices/all
2025-10-17T19:19:00.407Z - GET /api-keys/usage
2025-10-17T19:19:00.408Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 16
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 620,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 634,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 636,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 133,
  rows: 1
}
2025-10-17T19:19:01.289Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 2
}
2025-10-17T19:19:09.447Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_e739d48e65ea6b...
2025-10-17T19:19:09.530Z - GET /health
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 624,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 28 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 135,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T19:19:17.578Z - DELETE /api-keys/28
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 119,
  rows: 2
}
✅ API Key 28 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-17T19:19:18.068Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 654,
  rows: 1
}
2025-10-17T19:19:19.162Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 17
}
2025-10-17T19:19:19.997Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 651,
  rows: 0
}
2025-10-17T19:19:41.857Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 615,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 138,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-17T19:19:51.364Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-40aa1bfa-389d-4d67-ade5-e9ab23e9d10a1760728657378',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 611,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-17T19:20:39.534Z - GET /health
2025-10-17T19:22:09.609Z - GET /health
2025-10-17T19:23:39.528Z - GET /health
2025-10-17T19:25:09.623Z - GET /health
2025-10-17T19:26:39.550Z - GET /health
2025-10-17T19:28:09.554Z - GET /health
2025-10-17T19:29:39.513Z - GET /health
2025-10-17T19:31:09.519Z - GET /health
2025-10-17T19:32:39.522Z - GET /health
2025-10-17T19:34:09.537Z - GET /health
2025-10-17T19:35:39.645Z - GET /health
2025-10-17T19:37:09.616Z - GET /health
2025-10-17T19:37:30.251Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-17T19:38:39.615Z - GET /health
2025-10-17T19:38:55.510Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 595,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T19:39:16.696Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-babbb50c-1773-4798-bf07-85cb9b6ab5f41760729842760',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-17T19:40:01.443Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 628,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-17T19:40:03.050Z - GET /auth/verify
2025-10-17T19:40:09.616Z - GET /health
2025-10-17T19:40:21.313Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0037ff6a8747ef...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 122,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 31 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T19:40:29.938Z - DELETE /api-keys/31
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 124,
  rows: 2
}
✅ API Key 31 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-17T19:40:30.637Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 613,
  rows: 1
}
2025-10-17T19:40:31.705Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 588,
  rows: 18
}
2025-10-17T19:40:32.508Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 593,
  rows: 0
}
2025-10-17T19:40:48.859Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-9eee7d51-ac57-48f4-9960-999d2e6c76ee1760730020233',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_4883d4ee3449f5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 628,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 32 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 125,
  rows: 1
}
2025-10-17T19:41:39.521Z - GET /health
2025-10-17T19:43:09.607Z - GET /health
2025-10-17T19:44:39.552Z - GET /health
2025-10-17T19:46:09.519Z - GET /health
2025-10-17T19:47:39.541Z - GET /health
2025-10-17T19:49:09.551Z - GET /health
2025-10-17T19:50:39.520Z - GET /health
2025-10-17T19:52:09.613Z - GET /health
2025-10-17T19:53:39.539Z - GET /health
2025-10-17T19:55:09.617Z - GET /health
2025-10-17T19:56:39.516Z - GET /health
2025-10-17T19:58:09.635Z - GET /health
2025-10-17T19:59:39.610Z - GET /health
2025-10-17T20:01:09.608Z - GET /health
2025-10-17T20:02:39.636Z - GET /health
2025-10-17T20:04:09.608Z - GET /health
2025-10-17T20:05:39.536Z - GET /health
2025-10-17T20:07:09.628Z - GET /health
2025-10-17T20:08:39.631Z - GET /health
2025-10-17T20:10:09.516Z - GET /health
2025-10-17T20:11:39.513Z - GET /health
2025-10-17T20:13:09.653Z - GET /health
2025-10-17T20:14:39.601Z - GET /health
2025-10-17T20:15:39.527Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-6ac33744-b724-48b2-a8a5-cef155c897b61760732154738',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9-6ac33744-b724-48b2-a8a5-cef155c897b61760732154738',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_4883d4ee3449f5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 687,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 32 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 116,
  rows: 1
}
2025-10-17T20:16:09.537Z - GET /health
2025-10-17T20:17:07.008Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_4883d4ee3449f5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 651,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 32 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-17T20:17:08.651Z - GET /auth/verify
2025-10-17T20:17:24.697Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_4883d4ee3449f5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 128,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 32 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-17T20:17:34.234Z - DELETE /api-keys/32
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 129,
  rows: 2
}
✅ API Key 32 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-17T20:17:34.919Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 645,
  rows: 1
}
2025-10-17T20:17:36.003Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 19
}
2025-10-17T20:17:36.832Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 0
}
2025-10-17T20:17:39.521Z - GET /health
2025-10-17T20:17:42.404Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-92559ed104b820eb4c81caaf83c242aa11ff9ade37abadfaf0903eecac63d2a9',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_2d7e3c026f57f7...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 600,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 33 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 121,
  rows: 1
}
2025-10-17T20:18:50.070Z - GET /auth/me
2025-10-17T20:18:50.071Z - GET /api-keys/list
2025-10-17T20:18:50.071Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 594,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 602,
  rows: 19
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 603,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-17T20:18:50.889Z - GET /auth/me
2025-10-17T20:18:50.929Z - GET /api-keys/list
2025-10-17T20:18:50.937Z - GET /api-keys/devices/all
2025-10-17T20:18:51.123Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 593,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 633,
  rows: 19
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 608,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T20:18:51.977Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 1
}
2025-10-17T20:19:09.621Z - GET /health
2025-10-17T20:20:39.608Z - GET /health
2025-10-17T20:22:09.647Z - GET /health
2025-10-17T20:23:39.517Z - GET /health
2025-10-17T20:25:09.538Z - GET /health
2025-10-17T20:26:39.606Z - GET /health
2025-10-17T20:27:03.676Z - DELETE /api-keys/33
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 694,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 33 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T20:27:04.722Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 602,
  rows: 1
}
2025-10-17T20:27:05.776Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 20
}
2025-10-17T20:27:06.617Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 590,
  rows: 0
}
2025-10-17T20:28:09.520Z - GET /health
2025-10-17T20:29:39.514Z - GET /health
2025-10-17T20:31:09.616Z - GET /health
2025-10-17T20:32:39.619Z - GET /health
2025-10-17T20:34:09.532Z - GET /health
2025-10-17T20:35:39.625Z - GET /health
2025-10-17T20:37:09.516Z - GET /health
2025-10-17T20:38:39.508Z - GET /health
2025-10-17T20:39:13.629Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-00155d01fe1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-00155d01fe1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_2d7e3c026f57f7...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 746,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 34 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 119,
  rows: 0
}
2025-10-17T20:39:15.440Z - GET /auth/verify
2025-10-17T20:39:47.554Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'vscode-00155d01fe1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'vscode-00155d01fe1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ff8072471f6fe5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 121,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 34 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-17T20:40:09.608Z - GET /health
2025-10-17T20:41:39.606Z - GET /health
2025-10-17T20:43:09.541Z - GET /health
2025-10-17T20:44:39.544Z - GET /health
2025-10-17T20:46:09.650Z - GET /health
2025-10-17T20:47:39.634Z - GET /health
2025-10-17T20:49:09.538Z - GET /health
2025-10-17T20:50:39.607Z - GET /health
2025-10-17T20:52:09.646Z - GET /health
2025-10-17T20:53:39.513Z - GET /health
2025-10-17T20:55:09.508Z - GET /health
2025-10-17T20:56:39.517Z - GET /health
2025-10-17T20:58:09.513Z - GET /health
2025-10-17T20:59:39.643Z - GET /health
2025-10-17T21:01:09.508Z - GET /health
2025-10-17T21:02:39.510Z - GET /health
2025-10-17T21:04:09.625Z - GET /health
2025-10-17T21:05:39.642Z - GET /health
2025-10-17T21:07:02.885Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 706,
  rows: 1
}
2025-10-17T21:07:09.608Z - GET /health
2025-10-17T21:08:39.512Z - GET /health
2025-10-17T21:10:09.537Z - GET /health
2025-10-17T21:11:39.534Z - GET /health
2025-10-17T21:13:09.521Z - GET /health
2025-10-17T21:14:39.515Z - GET /health
2025-10-17T21:16:09.610Z - GET /health
2025-10-17T21:17:39.639Z - GET /health
2025-10-17T21:19:09.605Z - GET /health
2025-10-17T21:20:39.527Z - GET /health
2025-10-17T21:22:09.597Z - GET /health
2025-10-17T21:23:39.603Z - GET /health
2025-10-17T21:25:09.547Z - GET /health
2025-10-17T21:26:39.659Z - GET /health
2025-10-17T21:28:09.607Z - GET /health
2025-10-17T21:28:29.623Z - DELETE /api-keys/34
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 127,
  rows: 1
}
✅ API Key 34 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T21:28:30.313Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 639,
  rows: 1
}
2025-10-17T21:28:31.414Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 641,
  rows: 21
}
2025-10-17T21:28:32.296Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 615,
  rows: 0
}
2025-10-17T21:28:37.556Z - GET /auth/me
2025-10-17T21:28:37.557Z - GET /api-keys/list
2025-10-17T21:28:37.563Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 623,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T21:28:38.393Z - GET /auth/me
2025-10-17T21:28:38.617Z - GET /api-keys/list
2025-10-17T21:28:38.636Z - GET /api-keys/devices/all
2025-10-17T21:28:38.637Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 604,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 614,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T21:28:39.735Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 0
}
2025-10-17T21:28:46.574Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_e5b65b767e4f4d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 615,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 35 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 122,
  rows: 1
}
2025-10-17T21:28:53.554Z - GET /auth/me
2025-10-17T21:28:53.557Z - GET /api-keys/list
2025-10-17T21:28:53.560Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 716,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 756,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 802,
  rows: 21
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T21:28:54.485Z - GET /auth/me
2025-10-17T21:28:54.583Z - GET /api-keys/list
2025-10-17T21:28:54.587Z - GET /api-keys/devices/all
2025-10-17T21:28:54.705Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 652,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 643,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 640,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T21:28:55.606Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 600,
  rows: 1
}
2025-10-17T21:29:39.535Z - GET /health
2025-10-17T21:31:09.607Z - GET /health
2025-10-17T21:32:39.601Z - GET /health
2025-10-17T21:34:09.605Z - GET /health
2025-10-17T21:35:39.512Z - GET /health
2025-10-17T21:37:09.634Z - GET /health
2025-10-17T21:38:39.508Z - GET /health
2025-10-17T21:40:09.509Z - GET /health
2025-10-17T21:40:58.674Z - GET /api-keys/usage
2025-10-17T21:40:58.675Z - GET /api-keys/list
2025-10-17T21:40:58.676Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 741,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 752,
  rows: 21
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 758,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-17T21:40:59.652Z - GET /api-keys/list
2025-10-17T21:40:59.653Z - GET /api-keys/devices/all
2025-10-17T21:40:59.884Z - GET /auth/me
2025-10-17T21:40:59.885Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 634,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 656,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-17T21:41:00.723Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 1
}
2025-10-17T21:41:27.840Z - GET /api-keys/usage
2025-10-17T21:41:27.841Z - GET /auth/me
2025-10-17T21:41:27.841Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 609,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 620,
  rows: 21
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-17T21:41:28.672Z - GET /auth/me
2025-10-17T21:41:28.893Z - GET /api-keys/list
2025-10-17T21:41:28.900Z - GET /api-keys/usage
2025-10-17T21:41:28.900Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 633,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 699,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 699,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 706,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T21:41:30.071Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 626,
  rows: 1
}
2025-10-17T21:41:39.599Z - GET /health
2025-10-17T21:43:09.603Z - GET /health
2025-10-17T21:44:39.508Z - GET /health
2025-10-17T21:46:09.517Z - GET /health
2025-10-17T21:47:39.534Z - GET /health
2025-10-17T21:49:09.597Z - GET /health
2025-10-17T21:50:39.506Z - GET /health
2025-10-17T21:51:31.503Z - GET /api-keys/usage
2025-10-17T21:51:31.503Z - GET /api-keys/list
2025-10-17T21:51:31.504Z - GET /auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 680,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 682,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 716,
  rows: 21
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T21:51:32.441Z - GET /auth/me
2025-10-17T21:51:32.663Z - GET /api-keys/usage
2025-10-17T21:51:32.664Z - GET /api-keys/list
2025-10-17T21:51:32.702Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 590,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 572,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 21
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 588,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 114,
  rows: 1
}
2025-10-17T21:51:33.530Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
2025-10-17T21:51:57.630Z - DELETE /api-keys/35
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 587,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 118,
  rows: 1
}
✅ API Key 35 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T21:51:58.619Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '12 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 589,
  rows: 1
}
2025-10-17T21:51:59.673Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 597,
  rows: 22
}
2025-10-17T21:52:00.494Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 580,
  rows: 0
}
2025-10-17T21:52:09.539Z - GET /health
2025-10-17T21:52:12.524Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_6a8d002618e58d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 589,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 36 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 116,
  rows: 1
}
2025-10-17T21:52:21.681Z - GET /auth/me
2025-10-17T21:52:21.681Z - GET /api-keys/list
2025-10-17T21:52:21.681Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 589,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 590,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T21:52:22.489Z - GET /api-keys/list
2025-10-17T21:52:22.493Z - GET /api-keys/devices/all
2025-10-17T21:52:22.695Z - GET /auth/me
2025-10-17T21:52:22.703Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 597,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 593,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 574,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 620,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 112,
  rows: 1
}
2025-10-17T21:52:23.551Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 575,
  rows: 1
}
2025-10-17T21:53:39.593Z - GET /health
2025-10-17T21:55:09.523Z - GET /health
2025-10-17T21:56:39.628Z - GET /health
2025-10-17T21:58:09.597Z - GET /health
2025-10-17T21:59:39.534Z - GET /health
2025-10-17T22:01:02.203Z - GET /auth/me
2025-10-17T22:01:02.203Z - GET /api-keys/usage
2025-10-17T22:01:02.204Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 594,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 597,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 627,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T22:01:03.022Z - GET /api-keys/list
2025-10-17T22:01:03.029Z - GET /api-keys/devices/all
2025-10-17T22:01:03.241Z - GET /auth/me
2025-10-17T22:01:03.248Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 579,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 625,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 588,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-17T22:01:04.081Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 600,
  rows: 1
}
2025-10-17T22:01:09.681Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-17T22:03:05.994Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-17T22:02:34.787Z - GET /auth/me
2025-10-17T22:02:34.791Z - GET /api-keys/list
2025-10-17T22:02:34.792Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 120,
  rows: 1
}
2025-10-17T22:02:35.321Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 576,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 22
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 114,
  rows: 1
}
2025-10-17T22:02:35.642Z - GET /api-keys/list
2025-10-17T22:02:35.648Z - GET /api-keys/devices/all
2025-10-17T22:02:35.852Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 589,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 588,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 585,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 599,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T22:02:36.699Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 635,
  rows: 1
}
2025-10-17T22:02:39.503Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-17T22:04:33.885Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-17T22:04:09.304Z - GET /api-keys/list
2025-10-17T22:04:09.308Z - GET /auth/me
2025-10-17T22:04:09.309Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 121,
  rows: 22
}
2025-10-17T22:04:09.520Z - GET /health
2025-10-17T22:04:09.841Z - GET /api-keys/list
2025-10-17T22:04:09.849Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 689,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 697,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-17T22:04:10.220Z - GET /auth/me
2025-10-17T22:04:10.441Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 621,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 635,
  rows: 22
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 646,
  rows: 1
}
2025-10-17T22:04:10.932Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 616,
  rows: 1
}
2025-10-17T22:04:23.424Z - GET /auth/me
2025-10-17T22:04:23.441Z - GET /api-keys/list
2025-10-17T22:04:23.449Z - GET /auth/me
2025-10-17T22:04:23.449Z - GET /api-keys/list
2025-10-17T22:04:23.451Z - GET /api-keys/usage
2025-10-17T22:04:23.451Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 591,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 22
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 608,
  rows: 22
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 608,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 610,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 662,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T22:04:24.274Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 1
}
2025-10-17T22:04:25.091Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 590,
  rows: 1
}
2025-10-17T22:05:39.623Z - GET /health
2025-10-17T22:07:09.524Z - GET /health
2025-10-17T22:08:39.595Z - GET /health
2025-10-17T22:10:09.621Z - GET /health
2025-10-17T22:10:22.517Z - DELETE /api-keys/36
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 723,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 124,
  rows: 1
}
✅ API Key 36 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T22:10:23.617Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 586,
  rows: 1
}
2025-10-17T22:10:24.653Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 592,
  rows: 23
}
2025-10-17T22:10:25.602Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 0
}
2025-10-17T22:10:34.294Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 595,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-17T22:10:44.343Z - GET /api-keys/list
2025-10-17T22:10:44.344Z - GET /auth/me
2025-10-17T22:10:44.345Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 581,
  rows: 23
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 587,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 596,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 112,
  rows: 1
}
2025-10-17T22:10:45.162Z - GET /api-keys/list
2025-10-17T22:10:45.169Z - GET /api-keys/devices/all
2025-10-17T22:10:45.374Z - GET /auth/me
2025-10-17T22:10:45.382Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 582,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 630,
  rows: 23
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 580,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T22:10:46.210Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 1
}
2025-10-17T22:11:39.637Z - GET /health
2025-10-17T22:13:09.506Z - GET /health
2025-10-17T22:14:39.532Z - GET /health
2025-10-17T22:16:09.619Z - GET /health
2025-10-17T22:17:39.599Z - GET /health
2025-10-17T22:19:09.600Z - GET /health
2025-10-17T22:20:39.592Z - GET /health
2025-10-17T22:22:09.526Z - GET /health
2025-10-17T22:23:39.587Z - GET /health
2025-10-17T22:25:09.518Z - GET /health
2025-10-17T22:26:39.525Z - GET /health
2025-10-17T22:28:09.502Z - GET /health
2025-10-17T22:29:39.518Z - GET /health
2025-10-17T22:31:09.592Z - GET /health
2025-10-17T22:32:39.503Z - GET /health
2025-10-17T22:34:09.629Z - GET /health
2025-10-17T22:35:39.588Z - GET /health
2025-10-17T22:37:09.629Z - GET /health
2025-10-17T22:38:39.539Z - GET /health
2025-10-17T22:40:09.599Z - GET /health
2025-10-17T22:41:39.525Z - GET /health
2025-10-17T22:43:09.535Z - GET /health
2025-10-17T22:44:39.604Z - GET /health
2025-10-17T22:46:09.596Z - GET /health
2025-10-17T22:47:39.501Z - GET /health
2025-10-17T22:49:09.506Z - GET /health
2025-10-17T22:49:12.846Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 616,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-17T22:50:39.603Z - GET /health
2025-10-17T22:52:09.502Z - GET /health
2025-10-17T22:53:39.584Z - GET /health
2025-10-17T22:55:09.121Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
2025-10-17T22:55:09.624Z - GET /health
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 598,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T22:56:12.582Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 594,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T22:56:39.500Z - GET /health
2025-10-17T22:58:09.619Z - GET /health
2025-10-17T22:59:39.523Z - GET /health
2025-10-17T23:01:09.596Z - GET /health
2025-10-17T23:02:39.496Z - GET /health
2025-10-17T23:04:09.512Z - GET /health
2025-10-17T23:05:39.581Z - GET /health
2025-10-17T23:05:54.920Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 610,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T23:07:09.584Z - GET /health
2025-10-17T23:07:36.404Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 631,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-17T23:08:39.513Z - GET /health
2025-10-17T23:10:09.583Z - GET /health
2025-10-17T23:11:39.499Z - GET /health
2025-10-17T23:13:09.592Z - GET /health
2025-10-17T23:14:39.491Z - GET /health
2025-10-17T23:14:45.847Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_903dd735664477...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 37 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 150,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-17T23:16:09.492Z - GET /health
2025-10-17T23:17:39.517Z - GET /health
2025-10-17T23:19:09.626Z - GET /health
2025-10-17T23:19:27.673Z - GET /auth/google
2025-10-17T23:19:46.719Z - GET /auth/google
2025-10-17T23:20:39.487Z - GET /health
2025-10-17T23:21:07.832Z - GET /auth/google
2025-10-17T23:22:09.640Z - GET /health
2025-10-17T23:23:39.493Z - GET /health
2025-10-17T23:25:09.516Z - GET /health
2025-10-17T23:26:39.496Z - GET /health
2025-10-17T23:27:08.532Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 718,
  rows: 1
}
2025-10-17T23:27:09.596Z - GET /api-keys/list
2025-10-17T23:27:09.597Z - GET /api-keys/usage
2025-10-17T23:27:09.597Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 119,
  rows: 23
}
2025-10-17T23:27:09.950Z - GET /api-keys/list
2025-10-17T23:27:09.958Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 600,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-17T23:27:10.411Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 582,
  rows: 23
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 1
}
2025-10-17T23:27:10.637Z - GET /api-keys/usage
2025-10-17T23:27:10.896Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 635,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 596,
  rows: 1
}
2025-10-17T23:27:13.038Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-17T23:27:13.039Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 5
}
2025-10-17T23:27:14.005Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-17T23:27:14.238Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 590,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 5
}
2025-10-17T23:27:36.744Z - GET /auth/me
2025-10-17T23:27:36.759Z - GET /api-keys/list
2025-10-17T23:27:36.760Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 587,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 581,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 630,
  rows: 23
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T23:27:37.546Z - GET /auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
2025-10-17T23:27:38.635Z - GET /api-keys/devices/all
2025-10-17T23:27:38.636Z - GET /api-keys/usage
2025-10-17T23:27:38.636Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 583,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 611,
  rows: 23
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 636,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-17T23:27:39.689Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
2025-10-17T23:28:09.505Z - GET /health
2025-10-17T23:28:52.295Z - DELETE /api-keys/37
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 37 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T23:28:53.254Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 600,
  rows: 1
}
2025-10-17T23:28:54.307Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 24
}
2025-10-17T23:28:55.148Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 579,
  rows: 0
}
2025-10-17T23:28:59.520Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 604,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-17T23:29:20.522Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 639,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-17T23:29:39.523Z - GET /health
2025-10-17T23:29:56.620Z - GET /-docs
2025-10-17T23:30:09.544Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-17T23:30:38.299Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 582,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-17T23:30:47.701Z - GET /auth/me
2025-10-17T23:30:47.702Z - GET /api-keys/list
2025-10-17T23:30:47.702Z - GET /auth/me
2025-10-17T23:30:47.703Z - GET /api-keys/usage
2025-10-17T23:30:47.703Z - GET /api-keys/list
2025-10-17T23:30:47.704Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 594,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 597,
  rows: 24
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 24
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 607,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-17T23:30:48.557Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 596,
  rows: 1
}
2025-10-17T23:30:49.376Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 1
}
2025-10-17T23:31:09.609Z - GET /health
2025-10-17T23:31:45.541Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 599,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-17T23:32:39.606Z - GET /health
2025-10-17T23:32:52.778Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_5a74df7a81c51b...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 704,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 38 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-17T23:34:09.588Z - GET /health
2025-10-17T23:35:39.491Z - GET /health
2025-10-17T23:37:09.500Z - GET /health
2025-10-17T23:38:39.608Z - GET /health
2025-10-17T23:40:09.586Z - GET /health
2025-10-17T23:41:39.606Z - GET /health
2025-10-17T23:43:09.511Z - GET /health
2025-10-17T23:44:39.501Z - GET /health
2025-10-17T23:44:56.202Z - DELETE /api-keys/38
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 697,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 38 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-17T23:44:57.239Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 584,
  rows: 1
}
2025-10-17T23:44:58.283Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 590,
  rows: 25
}
2025-10-17T23:44:59.124Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 649,
  rows: 0
}
2025-10-17T23:45:07.105Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_8c7f988b7015e2...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 588,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 118,
  rows: 1
}
2025-10-17T23:46:09.434Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_8c7f988b7015e2...
2025-10-17T23:46:09.586Z - GET /health
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 633,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-17T23:47:39.609Z - GET /health
2025-10-17T23:49:09.583Z - GET /health
2025-10-17T23:50:39.528Z - GET /health
2025-10-17T23:52:09.526Z - GET /health
2025-10-17T23:53:39.497Z - GET /health
2025-10-17T23:55:09.497Z - GET /health
2025-10-17T23:56:39.597Z - GET /health
2025-10-17T23:58:10.183Z - GET /health
2025-10-17T23:59:39.587Z - GET /health
2025-10-18T00:01:09.500Z - GET /health
2025-10-18T00:02:39.490Z - GET /health
2025-10-18T00:04:09.611Z - GET /health
2025-10-18T00:05:39.517Z - GET /health
2025-10-18T00:07:09.580Z - GET /health
2025-10-18T00:08:39.493Z - GET /health
2025-10-18T00:10:09.587Z - GET /health
2025-10-18T00:11:39.495Z - GET /health
2025-10-18T00:13:09.610Z - GET /health
2025-10-18T00:14:39.490Z - GET /health
2025-10-18T00:16:09.604Z - GET /health
2025-10-18T00:17:39.607Z - GET /health
2025-10-18T00:19:09.494Z - GET /health
2025-10-18T00:20:39.580Z - GET /health
2025-10-18T00:22:09.586Z - GET /health
2025-10-18T00:23:39.582Z - GET /health
2025-10-18T00:25:09.619Z - GET /health
2025-10-18T00:26:39.493Z - GET /health
2025-10-18T00:28:09.490Z - GET /health
2025-10-18T00:29:39.611Z - GET /health
2025-10-18T00:31:09.529Z - GET /health
2025-10-18T00:32:39.487Z - GET /health
2025-10-18T00:34:09.586Z - GET /health
2025-10-18T00:35:39.507Z - GET /health
2025-10-18T00:37:09.580Z - GET /health
2025-10-18T00:38:39.494Z - GET /health
2025-10-18T00:40:09.647Z - GET /health
2025-10-18T00:41:39.491Z - GET /health
2025-10-18T00:43:09.583Z - GET /health
2025-10-18T00:44:39.576Z - GET /health
2025-10-18T00:46:09.491Z - GET /health
2025-10-18T00:47:39.639Z - GET /health
2025-10-18T00:49:09.580Z - GET /health
2025-10-18T00:50:39.521Z - GET /health
2025-10-18T00:52:09.500Z - GET /health
2025-10-18T00:53:39.584Z - GET /health
2025-10-18T00:55:09.615Z - GET /health
2025-10-18T00:56:39.518Z - GET /health
2025-10-18T00:58:09.581Z - GET /health
2025-10-18T00:59:39.581Z - GET /health
2025-10-18T01:01:09.609Z - GET /health
2025-10-18T01:02:39.495Z - GET /health
2025-10-18T01:04:09.592Z - GET /health
2025-10-18T01:05:39.622Z - GET /health
2025-10-18T01:06:49.867Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 708,
  rows: 1
}
2025-10-18T01:06:50.949Z - GET /auth/me
2025-10-18T01:06:50.957Z - GET /api-keys/list
2025-10-18T01:06:50.965Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T01:06:51.311Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 596,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 25
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T01:06:51.812Z - GET /api-keys/list
2025-10-18T01:06:51.823Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
2025-10-18T01:06:52.043Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 617,
  rows: 25
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 639,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T01:06:52.949Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 616,
  rows: 1
}
2025-10-18T01:07:09.595Z - GET /health
2025-10-18T01:08:39.505Z - GET /health
2025-10-18T01:10:10.511Z - GET /health
2025-10-18T01:11:39.609Z - GET /health
2025-10-18T01:13:09.597Z - GET /health
2025-10-18T01:14:39.535Z - GET /health
2025-10-18T01:16:09.628Z - GET /health
2025-10-18T01:17:39.495Z - GET /health
2025-10-18T01:19:09.497Z - GET /health
2025-10-18T01:20:39.606Z - GET /health
2025-10-18T01:22:09.631Z - GET /health
2025-10-18T01:23:39.527Z - GET /health
2025-10-18T01:25:09.604Z - GET /health
2025-10-18T01:26:39.599Z - GET /health
2025-10-18T01:28:09.516Z - GET /health
2025-10-18T01:29:39.540Z - GET /health
2025-10-18T01:31:09.633Z - GET /health
2025-10-18T01:32:39.511Z - GET /health
2025-10-18T01:34:09.531Z - GET /health
2025-10-18T01:35:39.604Z - GET /health
2025-10-18T01:37:09.605Z - GET /health
2025-10-18T01:38:39.600Z - GET /health
2025-10-18T01:40:09.587Z - GET /health
2025-10-18T01:41:39.502Z - GET /health
2025-10-18T01:43:09.520Z - GET /health
2025-10-18T01:44:39.495Z - GET /health
2025-10-18T01:46:09.530Z - GET /health
2025-10-18T01:47:39.592Z - GET /health
2025-10-18T01:49:09.541Z - GET /health
2025-10-18T01:50:39.522Z - GET /health
2025-10-18T01:52:09.503Z - GET /health
2025-10-18T01:53:39.596Z - GET /health
2025-10-18T01:54:46.306Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_8c7f988b7015e2...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 751,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-18T01:55:09.498Z - GET /health
2025-10-18T01:56:39.500Z - GET /health
2025-10-18T01:58:09.522Z - GET /health
2025-10-18T01:59:39.493Z - GET /health
2025-10-18T02:01:09.596Z - GET /health
2025-10-18T02:02:39.517Z - GET /health
2025-10-18T02:04:09.499Z - GET /health
2025-10-18T02:05:39.593Z - GET /health
2025-10-18T02:07:09.528Z - GET /health
2025-10-18T02:08:39.520Z - GET /health
2025-10-18T02:10:09.503Z - GET /health
2025-10-18T02:11:39.586Z - GET /health
2025-10-18T02:13:09.615Z - GET /health
2025-10-18T02:14:39.586Z - GET /health
2025-10-18T02:16:09.589Z - GET /health
2025-10-18T02:17:39.521Z - GET /health
2025-10-18T02:19:09.589Z - GET /health
2025-10-18T02:20:39.609Z - GET /health
2025-10-18T02:22:09.497Z - GET /health
2025-10-18T02:23:39.517Z - GET /health
2025-10-18T02:25:09.657Z - GET /health
2025-10-18T02:26:39.499Z - GET /health
2025-10-18T02:28:09.583Z - GET /health
2025-10-18T02:29:39.511Z - GET /health
2025-10-18T02:31:09.587Z - GET /health
2025-10-18T02:32:39.607Z - GET /health
2025-10-18T02:34:09.503Z - GET /health
2025-10-18T02:35:39.488Z - GET /health
2025-10-18T02:37:09.584Z - GET /health
2025-10-18T02:38:39.526Z - GET /health
2025-10-18T02:40:09.492Z - GET /health
2025-10-18T02:41:39.514Z - GET /health
2025-10-18T02:43:09.511Z - GET /health
2025-10-18T02:44:39.512Z - GET /health
2025-10-18T02:46:09.604Z - GET /health
2025-10-18T02:47:39.521Z - GET /health
2025-10-18T02:49:09.493Z - GET /health
2025-10-18T02:50:39.501Z - GET /health
2025-10-18T02:52:09.592Z - GET /health
2025-10-18T02:53:39.583Z - GET /health
2025-10-18T02:55:09.589Z - GET /health
2025-10-18T02:56:39.604Z - GET /health
2025-10-18T02:58:09.585Z - GET /health
2025-10-18T02:59:39.497Z - GET /health
2025-10-18T03:01:09.525Z - GET /health
2025-10-18T03:02:39.594Z - GET /health
2025-10-18T03:04:09.490Z - GET /health
2025-10-18T03:05:39.604Z - GET /health
2025-10-18T03:07:09.591Z - GET /health
2025-10-18T03:08:39.523Z - GET /health
2025-10-18T03:10:09.585Z - GET /health
2025-10-18T03:11:39.598Z - GET /health
2025-10-18T03:13:09.590Z - GET /health
2025-10-18T03:14:39.514Z - GET /health
2025-10-18T03:16:09.607Z - GET /health
2025-10-18T03:17:39.588Z - GET /health
2025-10-18T03:19:09.582Z - GET /health
2025-10-18T03:20:39.495Z - GET /health
2025-10-18T03:22:09.526Z - GET /health
2025-10-18T03:23:39.497Z - GET /health
2025-10-18T03:25:09.583Z - GET /health
2025-10-18T03:26:39.500Z - GET /health
2025-10-18T03:28:09.502Z - GET /health
2025-10-18T03:29:39.615Z - GET /health
2025-10-18T03:31:09.586Z - GET /health
2025-10-18T03:32:39.624Z - GET /health
2025-10-18T03:34:09.513Z - GET /health
2025-10-18T03:35:39.487Z - GET /health
2025-10-18T03:37:09.585Z - GET /health
2025-10-18T03:38:39.517Z - GET /health
2025-10-18T03:40:09.584Z - GET /health
2025-10-18T03:41:39.587Z - GET /health
2025-10-18T03:43:09.618Z - GET /health
2025-10-18T03:44:39.584Z - GET /health
2025-10-18T03:46:09.519Z - GET /health
2025-10-18T03:47:39.484Z - GET /health
2025-10-18T03:49:09.492Z - GET /health
2025-10-18T03:50:39.487Z - GET /health
2025-10-18T03:52:09.590Z - GET /health
2025-10-18T03:53:39.490Z - GET /health
2025-10-18T03:55:09.613Z - GET /health
2025-10-18T03:56:39.529Z - GET /health
2025-10-18T03:58:09.498Z - GET /health
2025-10-18T03:59:39.587Z - GET /health
2025-10-18T04:01:09.496Z - GET /health
2025-10-18T04:02:39.603Z - GET /health
2025-10-18T04:04:09.581Z - GET /health
2025-10-18T04:05:39.497Z - GET /health
2025-10-18T04:07:09.497Z - GET /health
2025-10-18T04:08:39.488Z - GET /health
2025-10-18T04:10:09.583Z - GET /health
2025-10-18T04:11:39.500Z - GET /health
2025-10-18T04:13:09.608Z - GET /health
2025-10-18T04:14:39.584Z - GET /health
2025-10-18T04:16:09.620Z - GET /health
2025-10-18T04:17:39.616Z - GET /health
2025-10-18T04:19:09.617Z - GET /health
2025-10-18T04:20:39.487Z - GET /health
2025-10-18T04:22:09.491Z - GET /health
2025-10-18T04:23:39.487Z - GET /health
2025-10-18T04:25:09.515Z - GET /health
2025-10-18T04:26:39.489Z - GET /health
2025-10-18T04:28:09.609Z - GET /health
2025-10-18T04:29:39.489Z - GET /health
2025-10-18T04:31:09.525Z - GET /health
2025-10-18T04:32:39.487Z - GET /health
2025-10-18T04:34:09.597Z - GET /health
2025-10-18T04:35:39.488Z - GET /health
2025-10-18T04:37:09.483Z - GET /health
2025-10-18T04:38:39.515Z - GET /health
2025-10-18T04:40:09.489Z - GET /health
2025-10-18T04:41:39.583Z - GET /health
2025-10-18T04:43:09.487Z - GET /health
2025-10-18T04:44:39.609Z - GET /health
2025-10-18T04:46:09.612Z - GET /health
2025-10-18T04:47:39.516Z - GET /health
2025-10-18T04:49:09.492Z - GET /health
2025-10-18T04:50:39.579Z - GET /health
2025-10-18T04:52:09.507Z - GET /health
2025-10-18T04:53:39.521Z - GET /health
2025-10-18T04:55:09.579Z - GET /health
2025-10-18T04:56:39.510Z - GET /health
2025-10-18T04:58:09.589Z - GET /health
2025-10-18T04:59:39.586Z - GET /health
2025-10-18T05:01:09.518Z - GET /health
2025-10-18T05:02:39.491Z - GET /health
2025-10-18T05:04:09.627Z - GET /health
2025-10-18T05:05:39.493Z - GET /health
2025-10-18T05:07:09.606Z - GET /health
2025-10-18T05:08:39.493Z - GET /health
2025-10-18T05:10:09.491Z - GET /health
2025-10-18T05:11:39.490Z - GET /health
2025-10-18T05:13:09.616Z - GET /health
2025-10-18T05:14:39.584Z - GET /health
2025-10-18T05:16:09.499Z - GET /health
2025-10-18T05:17:39.516Z - GET /health
2025-10-18T05:19:09.585Z - GET /health
2025-10-18T05:20:39.490Z - GET /health
2025-10-18T05:22:09.516Z - GET /health
2025-10-18T05:23:39.504Z - GET /health
2025-10-18T05:25:09.587Z - GET /health
2025-10-18T05:26:39.582Z - GET /health
2025-10-18T05:28:09.519Z - GET /health
2025-10-18T05:29:39.585Z - GET /health
2025-10-18T05:31:09.498Z - GET /health
2025-10-18T05:32:39.511Z - GET /health
2025-10-18T05:34:09.496Z - GET /health
2025-10-18T05:35:39.579Z - GET /health
2025-10-18T05:37:09.579Z - GET /health
2025-10-18T05:38:39.603Z - GET /health
2025-10-18T05:40:09.490Z - GET /health
2025-10-18T05:41:39.526Z - GET /health
2025-10-18T05:43:09.580Z - GET /health
2025-10-18T05:44:39.492Z - GET /health
2025-10-18T05:46:09.488Z - GET /health
2025-10-18T05:47:39.524Z - GET /health
2025-10-18T05:49:09.494Z - GET /health
2025-10-18T05:50:39.605Z - GET /health
2025-10-18T05:52:09.590Z - GET /health
2025-10-18T05:53:39.506Z - GET /health
2025-10-18T05:55:09.609Z - GET /health
2025-10-18T05:56:39.584Z - GET /health
2025-10-18T05:58:09.600Z - GET /health
2025-10-18T05:59:39.493Z - GET /health
2025-10-18T06:01:09.490Z - GET /health
2025-10-18T06:02:39.608Z - GET /health
2025-10-18T06:04:09.610Z - GET /health
2025-10-18T06:05:39.589Z - GET /health
2025-10-18T06:07:09.495Z - GET /health
2025-10-18T06:08:39.489Z - GET /health
2025-10-18T06:10:09.604Z - GET /health
2025-10-18T06:11:39.590Z - GET /health
2025-10-18T06:13:09.614Z - GET /health
2025-10-18T06:14:39.489Z - GET /health
2025-10-18T06:16:09.510Z - GET /health
2025-10-18T06:17:39.508Z - GET /health
2025-10-18T06:19:09.613Z - GET /health
2025-10-18T06:20:39.526Z - GET /health
2025-10-18T06:22:09.489Z - GET /health
2025-10-18T06:23:39.598Z - GET /health
2025-10-18T06:25:09.493Z - GET /health
2025-10-18T06:26:39.518Z - GET /health
2025-10-18T06:28:09.516Z - GET /health
2025-10-18T06:29:39.636Z - GET /health
2025-10-18T06:31:09.582Z - GET /health
2025-10-18T06:32:39.604Z - GET /health
2025-10-18T06:34:09.486Z - GET /health
2025-10-18T06:35:39.580Z - GET /health
2025-10-18T06:37:09.515Z - GET /health
2025-10-18T06:38:39.491Z - GET /health
2025-10-18T06:40:09.487Z - GET /health
2025-10-18T06:41:39.601Z - GET /health
2025-10-18T06:43:09.615Z - GET /health
2025-10-18T06:44:39.585Z - GET /health
2025-10-18T06:46:09.584Z - GET /health
2025-10-18T06:47:39.586Z - GET /health
2025-10-18T06:49:09.620Z - GET /health
2025-10-18T06:50:39.490Z - GET /health
2025-10-18T06:52:10.512Z - GET /health
2025-10-18T06:53:39.582Z - GET /health
2025-10-18T06:55:09.493Z - GET /health
2025-10-18T06:56:39.509Z - GET /health
2025-10-18T06:58:09.493Z - GET /health
2025-10-18T06:59:39.491Z - GET /health
2025-10-18T07:01:09.495Z - GET /health
2025-10-18T07:02:39.517Z - GET /health
2025-10-18T07:04:09.610Z - GET /health
2025-10-18T07:05:39.602Z - GET /health
2025-10-18T07:07:09.605Z - GET /health
2025-10-18T07:08:39.512Z - GET /health
2025-10-18T07:10:09.588Z - GET /health
2025-10-18T07:11:39.504Z - GET /health
2025-10-18T07:13:09.582Z - GET /health
2025-10-18T07:14:39.494Z - GET /health
2025-10-18T07:16:09.605Z - GET /health
2025-10-18T07:17:39.521Z - GET /health
2025-10-18T07:19:09.518Z - GET /health
2025-10-18T07:20:39.523Z - GET /health
2025-10-18T07:22:09.580Z - GET /health
2025-10-18T07:23:39.587Z - GET /health
2025-10-18T07:25:09.524Z - GET /health
2025-10-18T07:26:39.502Z - GET /health
2025-10-18T07:28:09.518Z - GET /health
2025-10-18T07:29:39.517Z - GET /health
2025-10-18T07:31:09.489Z - GET /health
2025-10-18T07:32:39.492Z - GET /health
2025-10-18T07:34:09.582Z - GET /health
2025-10-18T07:35:39.615Z - GET /health
2025-10-18T07:37:09.613Z - GET /health
2025-10-18T07:38:39.607Z - GET /health
2025-10-18T07:40:09.582Z - GET /health
2025-10-18T07:41:39.482Z - GET /health
2025-10-18T07:43:09.614Z - GET /health
2025-10-18T07:44:39.497Z - GET /health
2025-10-18T07:46:09.611Z - GET /health
2025-10-18T07:47:39.600Z - GET /health
2025-10-18T07:49:09.583Z - GET /health
2025-10-18T07:50:39.602Z - GET /health
2025-10-18T07:52:09.581Z - GET /health
2025-10-18T07:53:39.581Z - GET /health
2025-10-18T07:55:09.489Z - GET /health
2025-10-18T07:56:39.601Z - GET /health
2025-10-18T07:57:04.827Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_8c7f988b7015e2...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 622,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-18T07:58:09.522Z - GET /health
2025-10-18T07:59:39.595Z - GET /health
2025-10-18T08:01:09.585Z - GET /health
2025-10-18T08:02:39.498Z - GET /health
2025-10-18T08:04:09.625Z - GET /health
2025-10-18T08:05:39.492Z - GET /health
2025-10-18T08:07:09.510Z - GET /health
2025-10-18T08:08:31.407Z - GET /health
2025-10-18T08:23:39.520Z - GET /health
2025-10-18T08:27:53.774Z - GET /api/admin/users
2025-10-18T08:27:53.776Z - GET /api/admin/stats
2025-10-18T08:27:54.149Z - GET /api/admin/stats
2025-10-18T08:27:54.150Z - GET /api/admin/users
2025-10-18T08:27:57.477Z - GET /api-keys/list
2025-10-18T08:27:57.477Z - GET /auth/me
2025-10-18T08:27:57.486Z - GET /api-keys/usage
2025-10-18T08:27:57.671Z - GET /api-keys/list
2025-10-18T08:27:57.704Z - GET /auth/me
2025-10-18T08:27:57.879Z - GET /api-keys/usage
2025-10-18T08:27:59.831Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 705,
  rows: 1
}
2025-10-18T08:28:00.927Z - GET /auth/me
2025-10-18T08:28:00.928Z - GET /api-keys/list
2025-10-18T08:28:00.930Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T08:28:01.363Z - GET /auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 594,
  rows: 25
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 631,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T08:28:01.718Z - GET /api-keys/list
2025-10-18T08:28:01.726Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
2025-10-18T08:28:02.049Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 593,
  rows: 25
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 636,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 633,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-18T08:28:03.092Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
2025-10-18T08:28:10.944Z - GET /auth/me
2025-10-18T08:28:11.051Z - GET /api-keys/list
2025-10-18T08:28:11.052Z - GET /auth/me
2025-10-18T08:28:11.053Z - GET /api-keys/list
2025-10-18T08:28:11.054Z - GET /api-keys/usage
2025-10-18T08:28:11.079Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 645,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 600,
  rows: 25
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 604,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 606,
  rows: 25
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 600,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 640,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-18T08:28:12.046Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 584,
  rows: 1
}
2025-10-18T08:28:12.824Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 636,
  rows: 1
}
2025-10-18T08:28:26.003Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 599,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 117,
  rows: 0
}
2025-10-18T08:28:38.168Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 116,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 116,
  rows: 0
}
2025-10-18T08:28:48.509Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_062e6648c278d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 120,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 39 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 117,
  rows: 0
}
2025-10-18T08:29:02.435Z - DELETE /api-keys/39
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 39 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-18T08:29:02.869Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 604,
  rows: 1
}
2025-10-18T08:29:03.893Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 640,
  rows: 26
}
2025-10-18T08:29:04.748Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 600,
  rows: 0
}
2025-10-18T08:29:11.623Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_a7c6609431bf8f...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 630,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 40 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 126,
  rows: 1
}
2025-10-18T08:39:09.525Z - GET /health
2025-10-18T08:42:07.402Z - GET /auth/me
2025-10-18T08:42:07.404Z - GET /api-keys/list
2025-10-18T08:42:07.405Z - GET /api-keys/usage
2025-10-18T08:42:07.410Z - GET /auth/me
2025-10-18T08:42:07.410Z - GET /api-keys/list
2025-10-18T08:42:07.411Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 699,
  rows: 26
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 694,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 703,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 709,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 728,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 729,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T08:42:08.304Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 1
}
2025-10-18T08:42:09.109Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 583,
  rows: 1
}
2025-10-18T08:42:10.555Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:10.580Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 640,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 134,
  rows: 5
}
2025-10-18T08:42:11.505Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:11.695Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 155,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 5
}
2025-10-18T08:42:15.196Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
2025-10-18T08:42:32.153Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:32.154Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 648,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T08:42:33.074Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:33.261Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 5
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 583,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
2025-10-18T08:42:37.145Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:37.148Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 629,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 654,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 5
}
2025-10-18T08:42:38.089Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:38.274Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 629,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 5
}
2025-10-18T08:42:41.841Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 603,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
2025-10-18T08:42:49.649Z - GET /auth/me
2025-10-18T08:42:49.649Z - GET /api-keys/list
2025-10-18T08:42:49.650Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 610,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 615,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 619,
  rows: 26
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T08:42:50.678Z - GET /auth/me
2025-10-18T08:42:50.696Z - GET /api-keys/usage
2025-10-18T08:42:50.697Z - GET /api-keys/list
2025-10-18T08:42:50.711Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 591,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 593,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 589,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 26
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T08:42:51.704Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 609,
  rows: 1
}
2025-10-18T08:42:59.089Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:42:59.111Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 123,
  rows: 1
}
2025-10-18T08:43:00.277Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:43:00.277Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 586,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 630,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 131,
  rows: 1
}
2025-10-18T08:43:02.465Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 118,
  rows: 0
}
2025-10-18T08:44:09.954Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:09.954Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:09.954Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:09.955Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 627,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 648,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 133,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 147,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 133,
  rows: 1
}
2025-10-18T08:44:26.302Z - POST /api/admin/users/3/device-limit
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 587,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
2025-10-18T08:44:51.293Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:51.297Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:51.298Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:44:51.298Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 626,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T08:44:56.913Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 620,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
2025-10-18T08:44:57.851Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 1
}
2025-10-18T08:45:07.237Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 1
}
2025-10-18T08:45:28.709Z - POST /api/admin/users/3/device-limit
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 👥 sync secrets across teammates & machines: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T08:49:22.226Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T08:51:36.972Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:36.977Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:36.978Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:36.978Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 122,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 639,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
2025-10-18T08:51:44.097Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_a7c6609431bf8f...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 40 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
2025-10-18T08:51:45.769Z - GET /auth/verify
2025-10-18T08:51:46.372Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:46.373Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:46.392Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T08:51:46.393Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 603,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
2025-10-18T08:52:09.901Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_a7c6609431bf8f...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 602,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 40 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
2025-10-18T08:52:30.095Z - GET /auth/me
2025-10-18T08:52:30.097Z - GET /api-keys/list
2025-10-18T08:52:30.097Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 600,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 601,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T08:52:30.891Z - GET /api-keys/list
2025-10-18T08:52:30.894Z - GET /api-keys/devices/all
2025-10-18T08:52:31.081Z - GET /auth/me
2025-10-18T08:52:31.081Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 632,
  rows: 26
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 586,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 587,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T08:52:31.896Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 1
}
2025-10-18T08:52:33.797Z - DELETE /api-keys/40
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 609,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 123,
  rows: 1
}
✅ API Key 40 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-18T08:52:34.767Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 597,
  rows: 1
}
2025-10-18T08:52:35.787Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 607,
  rows: 27
}
2025-10-18T08:52:37.051Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 0
}
2025-10-18T08:52:42.172Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
2025-10-18T08:53:30.621Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 713,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
2025-10-18T08:54:22.800Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-18T08:54:35.730Z - GET /auth/me
2025-10-18T08:54:35.732Z - GET /auth/me
2025-10-18T08:54:35.733Z - GET /api-keys/usage
2025-10-18T08:54:35.735Z - GET /api-keys/list
2025-10-18T08:54:35.735Z - GET /api-keys/list
2025-10-18T08:54:35.735Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 585,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 583,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 586,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 599,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 636,
  rows: 27
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T08:54:36.514Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 620,
  rows: 0
}
2025-10-18T08:54:37.325Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 644,
  rows: 0
}
2025-10-18T08:54:39.518Z - GET /health
2025-10-18T08:59:21.201Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
2025-10-18T09:01:38.035Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 634,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 129,
  rows: 1
}
2025-10-18T09:01:58.315Z - GET /auth/me
2025-10-18T09:01:58.350Z - GET /api-keys/usage
2025-10-18T09:01:58.350Z - GET /api-keys/list
2025-10-18T09:01:58.352Z - GET /auth/me
2025-10-18T09:01:58.353Z - GET /api-keys/list
2025-10-18T09:01:58.354Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 596,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 595,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 596,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 27
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T09:01:59.261Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 605,
  rows: 1
}
2025-10-18T09:02:00.084Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 622,
  rows: 1
}
2025-10-18T09:02:01.399Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:02:01.400Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 637,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T09:02:02.581Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:02:02.642Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 586,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 119,
  rows: 1
}
2025-10-18T09:02:09.537Z - POST /api/admin/users/3/device-limit
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 639,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 131,
  rows: 1
}
2025-10-18T09:02:10.759Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 592,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 5
}
2025-10-18T09:02:16.179Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 585,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 117,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
2025-10-18T09:02:22.278Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
2025-10-18T09:07:42.667Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:07:42.668Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:07:42.669Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:07:42.670Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 699,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 705,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 723,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 747,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 128,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T09:07:50.402Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 632,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-18T09:10:09.533Z - GET /health
2025-10-18T09:10:53.403Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:10:53.403Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:10:53.404Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:10:53.404Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 586,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 587,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 590,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 5
}
2025-10-18T09:11:19.113Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 118,
  rows: 1
}
2025-10-18T09:23:57.024Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:23:57.025Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:23:57.026Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:23:57.026Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 690,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 698,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 702,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 712,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 140,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 128,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 140,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 5
}
2025-10-18T09:24:11.707Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 656,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
2025-10-18T09:25:39.520Z - GET /health
2025-10-18T09:26:46.341Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
2025-10-18T09:26:47.502Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T09:27:11.269Z - GET /api/admin/users/6
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 623,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 130,
  rows: 0
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔑 add access controls to secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T09:32:23.631Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T09:32:31.132Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9508d09a7e28e5...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 131,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 21 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 41 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-18T09:34:52.116Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:34:52.120Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:34:52.121Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T09:34:52.122Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 583,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 5
}
2025-10-18T09:35:02.012Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 118,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 138,
  rows: 1
}
2025-10-18T09:35:44.737Z - GET /auth/me
2025-10-18T09:35:44.758Z - GET /api-keys/list
2025-10-18T09:35:44.759Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 583,
  rows: 27
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 592,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-18T09:35:45.619Z - GET /api-keys/list
2025-10-18T09:35:45.652Z - GET /api-keys/devices/all
2025-10-18T09:35:45.731Z - GET /auth/me
2025-10-18T09:35:45.734Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 587,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 594,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 595,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T09:35:46.672Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 594,
  rows: 1
}
2025-10-18T09:41:09.510Z - GET /health
2025-10-18T09:56:39.509Z - GET /health
2025-10-18T10:01:16.550Z - GET /auth/me
2025-10-18T10:01:16.551Z - GET /api-keys/list
2025-10-18T10:01:16.553Z - GET /api-keys/usage
2025-10-18T10:01:16.553Z - GET /auth/me
2025-10-18T10:01:16.554Z - GET /api-keys/usage
2025-10-18T10:01:16.554Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 757,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 761,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 785,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 786,
  rows: 27
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 793,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 809,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T10:01:17.511Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 643,
  rows: 1
}
2025-10-18T10:01:18.341Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 631,
  rows: 1
}
2025-10-18T10:01:20.213Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T10:01:20.246Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 623,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T10:01:21.164Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T10:01:21.394Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 5
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T10:10:32.630Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 582,
  rows: 1
}
2025-10-18T10:10:33.712Z - GET /api-keys/list
2025-10-18T10:10:33.713Z - GET /auth/me
2025-10-18T10:10:33.714Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 119,
  rows: 1
}
2025-10-18T10:10:34.082Z - GET /api-keys/list
2025-10-18T10:10:34.092Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 591,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 592,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-18T10:10:34.492Z - GET /auth/me
2025-10-18T10:10:34.703Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 623,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 642,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
2025-10-18T10:10:35.139Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 603,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 0
}
2025-10-18T10:10:41.987Z - DELETE /api-keys/21
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 675,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 0
}
✅ API Key 21 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-18T10:10:42.983Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 640,
  rows: 1
}
2025-10-18T10:10:44.057Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 583,
  rows: 2
}
2025-10-18T10:10:44.834Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 635,
  rows: 0
}
2025-10-18T10:10:51.803Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 606,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 153,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 124,
  rows: 1
}
2025-10-18T10:11:06.156Z - GET /auth/me
2025-10-18T10:11:06.158Z - GET /api-keys/list
2025-10-18T10:11:06.158Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 592,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 594,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T10:11:06.940Z - GET /api-keys/list
2025-10-18T10:11:06.941Z - GET /api-keys/devices/all
2025-10-18T10:11:07.129Z - GET /auth/me
2025-10-18T10:11:07.129Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 586,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 637,
  rows: 2
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 634,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-18T10:11:07.925Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 599,
  rows: 1
}
2025-10-18T10:12:09.537Z - GET /health
2025-10-18T10:15:31.557Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 756,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 196,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T10:24:18.341Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T10:24:07.479Z - GET /auth/github
2025-10-18T10:24:18.651Z - GET /api/auth/github
2025-10-18T10:26:35.940Z - GET /api/auth/github
2025-10-18T10:27:34.003Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 142,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-18T10:27:39.507Z - GET /health
2025-10-18T10:27:45.480Z - GET /auth/login
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T10:31:56.926Z
✅ Database connection established
🚀 Auxly Backend API running on port 8000
📍 Health check: http://localhost:8000/health
🔐 Auth endpoints: http://localhost:8000/auth
💳 Stripe webhook: http://localhost:8000/stripe/webhook
📊 Subscription: http://localhost:8000/subscription
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T10:33:48.171Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T10:33:14.293Z - GET /auth/github
2025-10-18T10:33:25.137Z - GET /auth/github
2025-10-18T10:34:10.428Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 164,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T10:37:43.173Z - GET /auth/github
2025-10-18T10:38:23.657Z - GET /auth/github
2025-10-18T10:40:12.568Z - GET /auth/github
2025-10-18T10:40:22.439Z - GET /auth/github
2025-10-18T10:40:33.603Z - GET /api/auth/github
2025-10-18T10:40:44.272Z - GET /api/auth/github
2025-10-18T10:41:44.827Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 701,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T10:41:59.484Z - GET /auth/github
2025-10-18T10:42:09.517Z - GET /api/auth/github
2025-10-18T10:42:51.326Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 592,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
2025-10-18T10:43:09.529Z - GET /health
2025-10-18T10:45:22.408Z - GET /api/auth/github
2025-10-18T10:48:53.296Z - GET /api/auth/github
2025-10-18T10:49:07.857Z - GET /api/auth/github
2025-10-18T10:50:17.180Z - GET /api/auth/github
2025-10-18T10:50:29.666Z - GET /api/auth/github
2025-10-18T10:51:12.398Z - GET /api/auth/github
2025-10-18T10:51:48.424Z - GET /api/auth/github
2025-10-18T10:52:38.076Z - GET /.env
2025-10-18T10:52:38.452Z - GET /.env.local
2025-10-18T10:52:38.827Z - GET /.env.dev
2025-10-18T10:52:39.220Z - GET /.env.prod
2025-10-18T10:52:39.596Z - GET /.env.staging
2025-10-18T10:52:39.968Z - GET /.env.development
2025-10-18T10:52:40.344Z - GET /.env.production
2025-10-18T10:52:40.714Z - GET /.env.test
2025-10-18T10:52:41.089Z - GET /.env.backup
2025-10-18T10:52:41.502Z - GET /.env.example
2025-10-18T10:52:41.872Z - GET /.env.sample
2025-10-18T10:52:42.242Z - GET /.env.old
2025-10-18T10:52:42.618Z - GET /.env.bak
2025-10-18T10:52:42.996Z - GET /.env.save
2025-10-18T10:52:43.369Z - GET /.env.orig
2025-10-18T10:52:43.748Z - GET /.env.swp
2025-10-18T10:52:44.124Z - GET /.env~
2025-10-18T10:52:44.495Z - GET /.env.tmp
2025-10-18T10:52:44.904Z - GET /.env.dist
2025-10-18T10:52:45.285Z - GET /admin/.env
2025-10-18T10:52:45.673Z - GET /admin/.env.save
2025-10-18T10:52:46.044Z - GET /admin/.env.bak
2025-10-18T10:52:46.423Z - GET /admin/.env.old
2025-10-18T10:52:46.805Z - GET /api/.env
2025-10-18T10:52:47.173Z - GET /api/.env.save
2025-10-18T10:52:47.545Z - GET /api/.env.bak
2025-10-18T10:52:47.914Z - GET /api/.env.old
2025-10-18T10:52:48.293Z - GET /app/.env
2025-10-18T10:52:48.701Z - GET /app/.env.save
2025-10-18T10:52:49.083Z - GET /app/.env.bak
2025-10-18T10:52:49.456Z - GET /app/.env.old
2025-10-18T10:52:49.830Z - GET /config/.env
2025-10-18T10:52:50.234Z - GET /config/.env.save
2025-10-18T10:52:50.602Z - GET /config/.env.bak
2025-10-18T10:52:50.974Z - GET /config/.env.old
2025-10-18T10:52:51.360Z - GET /src/.env
2025-10-18T10:52:51.739Z - GET /src/.env.save
2025-10-18T10:52:52.118Z - GET /src/.env.bak
2025-10-18T10:52:52.497Z - GET /src/.env.old
2025-10-18T10:52:52.877Z - GET /public/.env
2025-10-18T10:52:53.249Z - GET /public/.env.save
2025-10-18T10:52:53.632Z - GET /public/.env.bak
2025-10-18T10:52:54.011Z - GET /public/.env.old
2025-10-18T10:52:54.380Z - GET /assets/.env
2025-10-18T10:52:54.760Z - GET /assets/.env.save
2025-10-18T10:52:55.226Z - GET /assets/.env.bak
2025-10-18T10:52:55.624Z - GET /assets/.env.old
2025-10-18T10:52:56.002Z - GET /includes/.env
2025-10-18T10:52:56.373Z - GET /includes/.env.save
2025-10-18T10:52:56.744Z - GET /includes/.env.bak
2025-10-18T10:52:57.116Z - GET /includes/.env.old
2025-10-18T10:52:57.487Z - GET /lib/.env
2025-10-18T10:52:57.867Z - GET /lib/.env.save
2025-10-18T10:52:58.245Z - GET /lib/.env.bak
2025-10-18T10:52:58.625Z - GET /lib/.env.old
2025-10-18T10:52:59.001Z - GET /application/.env
2025-10-18T10:52:59.375Z - GET /application/.env.save
2025-10-18T10:52:59.742Z - GET /application/.env.bak
2025-10-18T10:53:00.112Z - GET /application/.env.old
2025-10-18T10:53:00.492Z - GET /system/.env
2025-10-18T10:53:00.869Z - GET /system/.env.save
2025-10-18T10:53:01.247Z - GET /system/.env.bak
2025-10-18T10:53:01.617Z - GET /system/.env.old
2025-10-18T10:53:01.994Z - GET /core/.env
2025-10-18T10:53:02.367Z - GET /core/.env.save
2025-10-18T10:53:02.747Z - GET /core/.env.bak
2025-10-18T10:53:03.126Z - GET /core/.env.old
2025-10-18T10:53:03.502Z - GET /modules/.env
2025-10-18T10:53:03.884Z - GET /modules/.env.save
2025-10-18T10:53:04.273Z - GET /modules/.env.bak
2025-10-18T10:53:04.645Z - GET /modules/.env.old
2025-10-18T10:53:05.016Z - GET /plugins/.env
2025-10-18T10:53:05.383Z - GET /plugins/.env.save
2025-10-18T10:53:05.764Z - GET /plugins/.env.bak
2025-10-18T10:53:06.357Z - GET /plugins/.env.old
2025-10-18T10:53:06.739Z - GET /themes/.env
2025-10-18T10:53:07.124Z - GET /themes/.env.save
2025-10-18T10:53:07.497Z - GET /themes/.env.bak
2025-10-18T10:53:07.871Z - GET /themes/.env.old
2025-10-18T10:53:08.252Z - GET /vendor/.env
2025-10-18T10:53:08.656Z - GET /vendor/.env.save
2025-10-18T10:53:09.028Z - GET /vendor/.env.bak
2025-10-18T10:53:09.401Z - GET /vendor/.env.old
2025-10-18T10:53:09.773Z - GET /storage/.env
2025-10-18T10:53:10.154Z - GET /storage/.env.save
2025-10-18T10:53:10.524Z - GET /storage/.env.bak
2025-10-18T10:53:10.904Z - GET /storage/.env.old
2025-10-18T10:53:11.286Z - GET /phpinfo.php
2025-10-18T10:53:11.661Z - GET /info.php
2025-10-18T10:53:12.031Z - GET /php_info.php
2025-10-18T10:53:12.410Z - GET /phpinfo
2025-10-18T10:53:12.791Z - GET /test.php
2025-10-18T10:53:13.165Z - GET /info1.php
2025-10-18T10:53:13.534Z - GET /info2.php
2025-10-18T10:53:13.906Z - GET /php.php
2025-10-18T10:53:14.285Z - GET /pi.php
2025-10-18T10:53:14.665Z - GET /i.php
2025-10-18T10:53:15.044Z - GET /phpversion.php
2025-10-18T10:53:15.420Z - GET /php_version.php
2025-10-18T10:53:15.792Z - GET /serverinfo.php
2025-10-18T10:53:16.162Z - GET /server.php
2025-10-18T10:53:16.535Z - GET /debug.php
2025-10-18T10:53:16.917Z - GET /diagnostic.php
2025-10-18T10:53:17.290Z - GET /phptest.php
2025-10-18T10:53:17.668Z - GET /check.php
2025-10-18T10:53:18.040Z - GET /phpinfo.php.save
2025-10-18T10:53:18.428Z - GET /info.php.save
2025-10-18T10:53:18.810Z - GET /php_info.php.save
2025-10-18T10:53:19.236Z - GET /test.php.save
2025-10-18T10:53:19.616Z - GET /phpinfo.php.bak
2025-10-18T10:53:19.997Z - GET /info.php.bak
2025-10-18T10:53:20.373Z - GET /php_info.php.bak
2025-10-18T10:53:20.744Z - GET /test.php.bak
2025-10-18T10:53:21.116Z - GET /phpinfo.php.old
2025-10-18T10:53:21.486Z - GET /info.php.old
2025-10-18T10:53:21.865Z - GET /php_info.php.old
2025-10-18T10:53:22.240Z - GET /test.php.old
2025-10-18T10:53:22.619Z - GET /phpinfo.php.orig
2025-10-18T10:53:22.990Z - GET /info.php.orig
2025-10-18T10:53:23.366Z - GET /php_info.php.orig
2025-10-18T10:53:23.735Z - GET /test.php.orig
2025-10-18T10:53:24.116Z - GET /phpinfo.php.backup
2025-10-18T10:53:24.486Z - GET /info.php.backup
2025-10-18T10:53:24.862Z - GET /php_info.php.backup
2025-10-18T10:53:25.242Z - GET /test.php.backup
2025-10-18T10:53:25.615Z - GET /phpinfo.php~
2025-10-18T10:53:26.355Z - GET /info.php~
2025-10-18T10:53:26.729Z - GET /php_info.php~
2025-10-18T10:53:27.102Z - GET /test.php~
2025-10-18T10:53:27.474Z - GET /phpinfo.php.swp
2025-10-18T10:53:27.854Z - GET /info.php.swp
2025-10-18T10:53:28.221Z - GET /php_info.php.swp
2025-10-18T10:53:28.590Z - GET /test.php.swp
2025-10-18T10:53:28.971Z - GET /phpinfo.php.tmp
2025-10-18T10:53:29.344Z - GET /info.php.tmp
2025-10-18T10:53:29.726Z - GET /php_info.php.tmp
2025-10-18T10:53:30.096Z - GET /test.php.tmp
2025-10-18T10:53:30.473Z - GET /admin/phpinfo.php
2025-10-18T10:53:30.851Z - GET /admin/info.php
2025-10-18T10:53:31.222Z - GET /admin/phpinfo.php.save
2025-10-18T10:53:31.595Z - GET /admin/info.php.save
2025-10-18T10:53:31.963Z - GET /test/phpinfo.php
2025-10-18T10:53:32.344Z - GET /test/info.php
2025-10-18T10:53:32.718Z - GET /test/phpinfo.php.save
2025-10-18T10:53:33.097Z - GET /test/info.php.save
2025-10-18T10:53:33.511Z - GET /dev/phpinfo.php
2025-10-18T10:53:33.882Z - GET /dev/info.php
2025-10-18T10:53:34.250Z - GET /dev/phpinfo.php.save
2025-10-18T10:53:34.627Z - GET /dev/info.php.save
2025-10-18T10:53:35.060Z - GET /tmp/phpinfo.php
2025-10-18T10:53:35.434Z - GET /tmp/info.php
2025-10-18T10:53:35.802Z - GET /tmp/phpinfo.php.save
2025-10-18T10:53:36.177Z - GET /tmp/info.php.save
2025-10-18T10:53:36.556Z - GET /includes/phpinfo.php
2025-10-18T10:53:36.938Z - GET /includes/info.php
2025-10-18T10:53:37.311Z - GET /includes/phpinfo.php.save
2025-10-18T10:53:37.683Z - GET /includes/info.php.save
2025-10-18T10:53:38.114Z - GET /scripts/phpinfo.php
2025-10-18T10:53:38.495Z - GET /scripts/info.php
2025-10-18T10:53:38.867Z - GET /scripts/phpinfo.php.save
2025-10-18T10:53:39.239Z - GET /scripts/info.php.save
2025-10-18T10:53:39.608Z - GET /cgi-bin/phpinfo.php
2025-10-18T10:53:39.983Z - GET /cgi-bin/info.php
2025-10-18T10:53:40.358Z - GET /cgi-bin/phpinfo.php.save
2025-10-18T10:53:40.725Z - GET /cgi-bin/info.php.save
2025-10-18T10:53:41.175Z - GET /public/phpinfo.php
2025-10-18T10:53:41.557Z - GET /public/info.php
2025-10-18T10:53:41.938Z - GET /public/phpinfo.php.save
2025-10-18T10:53:42.311Z - GET /public/info.php.save
2025-10-18T10:53:42.695Z - GET /web/phpinfo.php
2025-10-18T10:53:43.075Z - GET /web/info.php
2025-10-18T10:53:43.456Z - GET /web/phpinfo.php.save
2025-10-18T10:53:43.830Z - GET /web/info.php.save
2025-10-18T10:53:44.199Z - GET /www/phpinfo.php
2025-10-18T10:53:44.578Z - GET /www/info.php
2025-10-18T10:53:44.951Z - GET /www/phpinfo.php.save
2025-10-18T10:53:45.325Z - GET /www/info.php.save
2025-10-18T10:53:45.705Z - GET /site/phpinfo.php
2025-10-18T10:53:46.079Z - GET /site/info.php
2025-10-18T10:53:46.448Z - GET /site/phpinfo.php.save
2025-10-18T10:53:46.829Z - GET /site/info.php.save
2025-10-18T10:53:47.201Z - GET /.git/config
2025-10-18T10:55:08.039Z - GET /api/auth/github
2025-10-18T10:56:18.579Z - GET /api/auth/github
2025-10-18T10:56:55.697Z - GET /api/auth/github
2025-10-18T10:58:39.570Z - GET /health
2025-10-18T11:05:35.593Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 699,
  rows: 1
}
2025-10-18T11:05:36.745Z - GET /auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T11:05:36.931Z - GET /api-keys/list
2025-10-18T11:05:36.935Z - GET /api-keys/usage
2025-10-18T11:05:37.053Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 657,
  rows: 27
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
2025-10-18T11:05:37.781Z - GET /api-keys/list
2025-10-18T11:05:37.845Z - GET /api-keys/usage
2025-10-18T11:05:37.971Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 27
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 592,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 590,
  rows: 1
}
2025-10-18T11:05:38.753Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 629,
  rows: 1
}
2025-10-18T11:05:44.167Z - DELETE /api-keys/41
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 635,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 130,
  rows: 1
}
✅ API Key 41 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-18T11:05:45.333Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 615,
  rows: 1
}
2025-10-18T11:05:46.687Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 611,
  rows: 28
}
2025-10-18T11:05:47.719Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 0
}
2025-10-18T11:05:54.338Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 601,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-18T11:07:03.937Z - GET /api/auth/github
2025-10-18T11:07:09.729Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 593,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-18T11:07:28.166Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 644,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T11:07:36.572Z - GET /login
2025-10-18T11:07:39.310Z - GET /login
2025-10-18T11:07:43.203Z - GET /api/api/auth/github
2025-10-18T11:07:44.543Z - GET /favicon.ico
2025-10-18T11:08:03.130Z - POST /api/auth/login
2025-10-18T11:08:08.439Z - POST /api/auth/login
2025-10-18T11:08:17.460Z - POST /api/auth/login
2025-10-18T11:08:27.380Z - GET /api/auth/github
2025-10-18T11:08:34.410Z - POST /api/auth/login
2025-10-18T11:08:37.394Z - POST /api/auth/login
2025-10-18T11:09:59.175Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 608,
  rows: 0
}
2025-10-18T11:10:03.233Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_2f9d32e1f3ff2a...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 119,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 42 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T11:10:21.528Z - POST /api/auth/login
2025-10-18T11:11:34.066Z - POST /api/auth/login
2025-10-18T11:12:14.177Z - GET /login
2025-10-18T11:12:16.541Z - POST /api/auth/login
2025-10-18T11:12:39.049Z - POST /api/auth/login
2025-10-18T11:13:14.906Z - POST /api/auth/login
2025-10-18T11:13:44.058Z - GET /api/auth/github
2025-10-18T11:13:44.105Z - GET /login
2025-10-18T11:13:56.719Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 720,
  rows: 0
}
2025-10-18T11:14:09.586Z - GET /health
2025-10-18T11:14:32.766Z - GET /login
2025-10-18T11:14:33.328Z - POST /api/auth/login
2025-10-18T11:14:35.882Z - POST /api/auth/login
2025-10-18T11:14:36.135Z - GET /login
2025-10-18T11:14:37.026Z - POST /api/auth/login
2025-10-18T11:14:38.301Z - POST /api/auth/login
2025-10-18T11:18:18.070Z - POST /api/auth/login
2025-10-18T11:18:18.478Z - GET /login
2025-10-18T11:18:20.833Z - POST /api/auth/login
2025-10-18T11:18:22.110Z - POST /api/auth/login
2025-10-18T11:18:32.446Z - GET /login
2025-10-18T11:18:34.826Z - POST /api/auth/login
2025-10-18T11:18:35.904Z - POST /api/auth/login
2025-10-18T11:18:57.181Z - POST /api/auth/login
2025-10-18T11:19:51.279Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 123,
  rows: 0
}
2025-10-18T11:20:33.255Z - GET /login
2025-10-18T11:20:35.954Z - POST /api/auth/login
2025-10-18T11:20:55.133Z - POST /api/auth/login
2025-10-18T11:21:14.287Z - GET /health
2025-10-18T11:21:27.219Z - GET /health
2025-10-18T11:22:37.006Z - POST /api/auth/login
2025-10-18T11:25:05.252Z - GET /login
2025-10-18T11:25:08.729Z - POST /api/auth/login
2025-10-18T11:25:26.745Z - GET /login
2025-10-18T11:25:29.516Z - POST /api/auth/login
2025-10-18T11:25:35.524Z - GET /login
2025-10-18T11:25:39.395Z - POST /api/auth/login
2025-10-18T11:25:55.127Z - POST /api/auth/login
2025-10-18T11:26:31.901Z - POST /api/auth/login
2025-10-18T11:29:40.579Z - GET /health
2025-10-18T11:32:40.927Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 120,
  rows: 0
}
2025-10-18T11:33:47.114Z - GET /login
2025-10-18T11:33:49.787Z - POST /api/auth/login
2025-10-18T11:34:24.432Z - GET /api/api/auth/github
2025-10-18T11:34:24.938Z - GET /favicon.ico
2025-10-18T11:35:23.911Z - GET /login
2025-10-18T11:36:42.195Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 118,
  rows: 0
}
2025-10-18T11:37:43.390Z - POST /api/auth/login
2025-10-18T11:40:16.022Z - GET /favicon.ico
2025-10-18T11:40:28.870Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 118,
  rows: 0
}
2025-10-18T11:40:29.011Z - GET /api/auth/github
2025-10-18T11:40:29.069Z - GET /health
2025-10-18T11:42:01.156Z - GET /login
2025-10-18T11:42:03.907Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 119,
  rows: 1
}
2025-10-18T11:42:04.360Z - GET /auth/me
2025-10-18T11:42:04.364Z - GET /api-keys/list
2025-10-18T11:42:04.367Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 721,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 729,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T11:42:05.320Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 1
}
2025-10-18T11:42:14.777Z - GET /api/auth/github
2025-10-18T11:42:21.871Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 639,
  rows: 1
}
2025-10-18T11:42:23.115Z - GET /api-keys/list
2025-10-18T11:42:23.116Z - GET /auth/me
2025-10-18T11:42:23.117Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 128,
  rows: 2
}
2025-10-18T11:42:23.517Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 597,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 599,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 1
}
2025-10-18T11:43:40.673Z - GET /api/auth/github
2025-10-18T11:43:50.808Z - HEAD /api/auth/github
2025-10-18T11:44:10.546Z - HEAD /api/auth/github/callback
2025-10-18T11:44:13.642Z - DELETE /api-keys/42
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 611,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 119,
  rows: 1
}
✅ API Key 42 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-18T11:44:14.572Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 616,
  rows: 1
}
2025-10-18T11:44:15.614Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 614,
  rows: 3
}
2025-10-18T11:44:16.431Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 639,
  rows: 0
}
2025-10-18T11:44:24.900Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 629,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 121,
  rows: 1
}
2025-10-18T11:44:56.507Z - GET /dashboard
2025-10-18T11:44:57.229Z - GET /api-keys/list
2025-10-18T11:44:57.230Z - GET /auth/me
2025-10-18T11:44:57.233Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 584,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 602,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T11:44:58.014Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 1
}
2025-10-18T11:45:09.524Z - GET /health
2025-10-18T11:46:41.044Z - GET /login
2025-10-18T11:46:44.676Z - GET /login
2025-10-18T11:46:48.032Z - GET /api/auth/github
2025-10-18T11:50:03.504Z - GET /login
2025-10-18T11:50:05.366Z - GET /login
2025-10-18T11:50:06.905Z - GET /api/auth/github
2025-10-18T11:54:27.256Z - GET /health
2025-10-18T11:54:27.359Z - HEAD /api/auth/github
2025-10-18T11:54:37.056Z - HEAD /api/auth/github
2025-10-18T11:55:39.484Z - GET /health
2025-10-18T11:55:39.559Z - HEAD /api/auth/github
2025-10-18T11:55:39.603Z - HEAD /api/auth/github
2025-10-18T11:57:39.833Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 612,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T11:58:22.759Z - GET /health
2025-10-18T11:58:22.937Z - HEAD /api/auth/github
2025-10-18T11:58:22.983Z - HEAD /api/auth/github
2025-10-18T11:58:33.721Z - HEAD /api/auth/github
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 encrypt with Dotenvx: https://dotenvx.com
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  override existing env vars with { override: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T11:59:38.463Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T11:58:52.029Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 128,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-18T12:00:39.519Z - GET /health
2025-10-18T12:02:33.007Z - GET /health
2025-10-18T12:03:38.807Z - GET /login
2025-10-18T12:03:40.695Z - GET /login
2025-10-18T12:03:43.192Z - GET /api/auth/github
2025-10-18T12:03:49.514Z - GET /api/auth/github/callback
2025-10-18T12:03:49.742Z - GET /login
2025-10-18T12:03:54.022Z - GET /login
2025-10-18T12:03:56.467Z - GET /api/auth/github
2025-10-18T12:04:42.059Z - GET /api/auth/github/callback
2025-10-18T12:04:45.279Z - GET /favicon.ico
2025-10-18T12:05:02.734Z - GET /login
2025-10-18T12:05:04.649Z - POST /auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 599,
  rows: 1
}
2025-10-18T12:05:05.516Z - GET /auth/me
2025-10-18T12:05:05.518Z - GET /api-keys/list
2025-10-18T12:05:05.522Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 606,
  rows: 28
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 630,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T12:05:06.344Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 640,
  rows: 1
}
2025-10-18T12:05:25.235Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T12:05:25.243Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 599,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 125,
  rows: 1
}
2025-10-18T12:05:32.508Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 124,
  rows: 1
}
2025-10-18T12:05:46.772Z - GET /api/admin/users/5
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 124,
  rows: 1
}
2025-10-18T12:06:24.552Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 131,
  rows: 1
}
2025-10-18T12:06:38.967Z - GET /api/admin/users/3
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 28
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 128,
  rows: 1
}
2025-10-18T12:06:47.518Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 645,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T12:08:33.169Z - GET /api/auth/github
2025-10-18T12:08:37.706Z - GET /api/auth/github/callback
2025-10-18T12:08:40.286Z - GET /favicon.ico
2025-10-18T12:09:06.107Z - GET /login
2025-10-18T12:09:09.712Z - GET /api/auth/github
2025-10-18T12:09:10.341Z - GET /api/auth/github/callback
2025-10-18T12:09:12.577Z - GET /favicon.ico
2025-10-18T12:09:15.262Z - GET /api/auth/github/callback
2025-10-18T12:09:15.929Z - GET /favicon.ico
2025-10-18T12:09:20.116Z - GET /login
2025-10-18T12:09:22.151Z - GET /api/auth/github
2025-10-18T12:09:22.638Z - GET /api/auth/github/callback
2025-10-18T12:09:25.237Z - GET /favicon.ico
2025-10-18T12:10:00.337Z - GET /login
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  suppress all logs with { quiet: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T12:12:34.195Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T12:13:38.476Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 129,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T12:16:09.510Z - GET /health
2025-10-18T12:24:45.799Z - GET /login
2025-10-18T12:24:51.707Z - GET /api/auth/github
2025-10-18T12:24:52.331Z - GET /api/auth/github/callback
2025-10-18T12:24:55.063Z - GET /favicon.ico
2025-10-18T12:25:06.348Z - GET /login
2025-10-18T12:31:28.881Z - GET /api/auth/github
2025-10-18T12:31:29.510Z - GET /api/auth/github/callback
2025-10-18T12:31:32.095Z - GET /favicon.ico
2025-10-18T12:31:32.365Z - GET /api/auth/github/callback
2025-10-18T12:31:32.956Z - GET /favicon.ico
2025-10-18T12:31:39.509Z - GET /health
2025-10-18T12:32:00.118Z - GET /api/auth/github
2025-10-18T12:32:05.105Z - GET /api/auth/github/callback
2025-10-18T12:32:07.181Z - GET /favicon.ico
2025-10-18T12:44:00.214Z - GET /api/auth/github/callback
2025-10-18T12:44:01.057Z - GET /favicon.ico
2025-10-18T12:44:02.672Z - GET /login
2025-10-18T12:44:05.025Z - GET /api/auth/github
2025-10-18T12:44:05.645Z - GET /api/auth/github/callback
2025-10-18T12:44:07.632Z - GET /favicon.ico
2025-10-18T12:47:09.512Z - GET /health
2025-10-18T12:49:53.432Z - GET /api/auth/github/callback
2025-10-18T12:49:54.284Z - GET /favicon.ico
2025-10-18T13:00:24.798Z - GET /api/auth/github
2025-10-18T13:00:25.688Z - GET /api/auth/github/callback
2025-10-18T13:00:28.378Z - GET /favicon.ico
2025-10-18T13:01:58.109Z - GET /health
2025-10-18T13:02:07.690Z - GET /api/auth/github/callback
2025-10-18T13:02:39.598Z - GET /health
2025-10-18T13:03:40.258Z - GET /login
2025-10-18T13:03:42.899Z - GET /api/auth/github
2025-10-18T13:03:43.593Z - GET /api/auth/github/callback
2025-10-18T13:03:46.134Z - GET /favicon.ico
2025-10-18T13:04:10.517Z - GET /api/auth/github
2025-10-18T13:04:25.094Z - GET /api/auth/github/callback
2025-10-18T13:04:27.352Z - GET /favicon.ico
2025-10-18T13:06:29.712Z - GET /api/health
2025-10-18T13:06:45.045Z - GET /health
2025-10-18T13:06:53.962Z - GET /health
2025-10-18T13:07:02.969Z - GET /api/auth/github/callback
2025-10-18T13:07:13.793Z - GET /api/auth/github/callback
2025-10-18T13:18:09.579Z - GET /health
2025-10-18T13:23:52.853Z - GET /health
2025-10-18T13:24:01.513Z - GET /health
2025-10-18T13:24:28.057Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 719,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T13:33:39.507Z - GET /health
2025-10-18T13:45:37.563Z - GET /api/auth/github
2025-10-18T13:45:38.643Z - GET /api/auth/github/callback
2025-10-18T13:49:09.523Z - GET /health
2025-10-18T13:59:22.508Z - POST /api/auth/login
2025-10-18T14:01:17.989Z - POST /api/auth/login
2025-10-18T14:01:19.495Z - POST /api/auth/login
2025-10-18T14:03:03.519Z - POST /api/auth/login
2025-10-18T14:03:45.344Z - POST /api/auth/login
2025-10-18T14:04:39.512Z - GET /health
2025-10-18T14:20:09.518Z - GET /health
2025-10-18T14:25:06.954Z - POST /api/auth/login
2025-10-18T14:25:19.766Z - POST /api/auth/login
2025-10-18T14:25:38.346Z - POST /api/auth/login
2025-10-18T14:25:55.877Z - GET /api/auth/github
2025-10-18T14:25:56.970Z - GET /api/auth/github/callback
2025-10-18T14:28:47.406Z - POST /api/auth/login
2025-10-18T14:33:14.108Z - POST /api/auth/login
2025-10-18T14:33:15.671Z - POST /api/auth/login
2025-10-18T14:33:57.387Z - POST /api/auth/login
2025-10-18T14:35:39.560Z - GET /health
2025-10-18T14:45:49.063Z - GET /login
2025-10-18T14:45:54.383Z - POST /api/auth/login
2025-10-18T14:46:02.308Z - GET /login
2025-10-18T14:46:05.879Z - POST /api/auth/login
2025-10-18T14:46:29.320Z - POST /api/auth/login
2025-10-18T14:47:51.458Z - POST /api/auth/login
2025-10-18T14:48:01.460Z - POST /api/auth/login
2025-10-18T14:48:42.253Z - POST /api/auth/login
2025-10-18T14:50:02.874Z - POST /api/auth/login
2025-10-18T14:51:09.567Z - GET /health
2025-10-18T14:52:23.689Z - POST /api/auth/login
2025-10-18T14:53:03.842Z - GET /@fs/etc/passwd
2025-10-18T14:53:25.728Z - POST /api/auth/login
2025-10-18T14:53:45.911Z - POST /api/auth/login
2025-10-18T14:54:12.548Z - GET /@fs/etc/passwd
2025-10-18T14:54:12.968Z - GET /@fs/etc/passwd
2025-10-18T14:55:24.780Z - GET /login
2025-10-18T14:55:29.137Z - POST /api/auth/login
2025-10-18T14:55:43.410Z - POST /api/auth/login
2025-10-18T14:56:03.501Z - POST /api/auth/login
2025-10-18T14:57:01.325Z - POST /api/auth/login
2025-10-18T14:57:16.258Z - POST /api/auth/login
2025-10-18T14:59:23.797Z - GET /login
2025-10-18T14:59:27.245Z - POST /api/auth/login
2025-10-18T14:59:29.461Z - POST /api/auth/login
2025-10-18T15:00:44.482Z - POST /api/auth/login
[dotenv@17.2.3] injecting env (20) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T15:02:20.405Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T15:02:21.246Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 129,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-18T15:02:55.375Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 610,
  rows: 0
}
2025-10-18T15:02:59.384Z - GET /login
2025-10-18T15:03:01.545Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 120,
  rows: 1
}
2025-10-18T15:03:01.930Z - GET /auth/me
2025-10-18T15:03:01.933Z - GET /api-keys/list
2025-10-18T15:03:01.935Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 120,
  rows: 28
}
2025-10-18T15:03:02.254Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 634,
  rows: 1
}
2025-10-18T15:03:03.287Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 613,
  rows: 1
}
2025-10-18T15:03:04.164Z - GET /api-keys/usage
2025-10-18T15:03:04.165Z - GET /api-keys/list
2025-10-18T15:03:04.165Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 126,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 601,
  rows: 28
}
2025-10-18T15:03:04.978Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 614,
  rows: 1
}
2025-10-18T15:03:14.493Z - GET /login
2025-10-18T15:03:17.702Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 676,
  rows: 1
}
2025-10-18T15:03:19.065Z - GET /api-keys/usage
2025-10-18T15:03:19.065Z - GET /api-keys/list
2025-10-18T15:03:19.066Z - GET /auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 129,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 610,
  rows: 28
}
2025-10-18T15:03:20.510Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 654,
  rows: 1
}
2025-10-18T15:03:29.431Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 619,
  rows: 1
}
2025-10-18T15:03:30.304Z - GET /auth/me
2025-10-18T15:03:30.305Z - GET /api-keys/list
2025-10-18T15:03:30.308Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 122,
  rows: 28
}
2025-10-18T15:03:30.628Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 617,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 600,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  override existing env vars with { override: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T15:05:04.050Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T15:04:58.508Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 132,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-18T15:05:23.373Z - GET /health
2025-10-18T15:05:33.536Z - GET /api/user
2025-10-18T15:05:43.895Z - GET /login
2025-10-18T15:06:39.516Z - GET /health
2025-10-18T15:18:08.866Z - GET /login
2025-10-18T15:18:11.192Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 748,
  rows: 1
}
2025-10-18T15:18:12.211Z - GET /api/auth/me
2025-10-18T15:18:12.213Z - GET /api-keys/usage
2025-10-18T15:18:12.214Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 619,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 619,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T15:18:13.036Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 618,
  rows: 1
}
2025-10-18T15:18:16.385Z - GET /login
2025-10-18T15:18:19.012Z - GET /api/auth/github
2025-10-18T15:18:19.823Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '120fe0359162fda8edbb' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=120fe0359162fda8edbb',
  'x-forwarded-for': '176.224.149.182:9085',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'f24535b7-bec9-472a-a97d-93fa16a6d3af'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
📧 Using email: wsamoum@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'wsamoum@github.com',
  oauth_provider: 'github',
  oauth_id: '238846628',
  trial_start: 2025-10-18T15:18:21.778Z,
  trial_end: 2025-10-25T15:18:21.778Z,
  trial_status: 'active'
}
✅ New user created: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDA3MDEsImV4cCI6MTc2MzM5MjcwMX0.Ik16euI5TSDT6kDNpFH7OgziStd1epOlvHtDE5_Gxf4&email=wsamoum%40github.com
2025-10-18T15:18:22.221Z - GET /auth/callback
2025-10-18T15:18:22.623Z - GET /favicon.ico
2025-10-18T15:19:30.068Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'test' }
Headers: {
  'user-agent': 'Mozilla/5.0 (Windows NT; Windows NT 10.0; en-US) WindowsPowerShell/5.1.20348.3932',
  host: 'localhost:7000',
  connection: 'Keep-Alive'
}
2025-10-18T15:20:33.802Z - GET /login
2025-10-18T15:20:54.488Z - GET /health
2025-10-18T15:21:04.655Z - GET /login
2025-10-18T15:21:07.273Z - GET /api/auth/github
2025-10-18T15:21:08.225Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '6d7fe16c2aa9b91551f3' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=6d7fe16c2aa9b91551f3',
  'x-forwarded-for': '176.224.149.182:19775',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'f38a362a-b3c7-49b2-a809-394cc393a3c2'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
📧 Using email: wsamoum@github.com
👤 Existing users found: 1
✅ User exists, logging in: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDA4NjksImV4cCI6MTc2MzM5Mjg2OX0.YwmKN0PgJezIToWWGlgq6_TjBu1aufO8CedNL1Znh6g&email=wsamoum%40github.com
2025-10-18T15:21:09.884Z - GET /auth/callback
2025-10-18T15:21:10.489Z - GET /favicon.ico
2025-10-18T15:21:31.971Z - GET /login
2025-10-18T15:22:09.577Z - GET /health
2025-10-18T15:23:51.844Z - GET /api/auth/github
2025-10-18T15:24:03.301Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'b812bbe3faa30c3e461d' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en;q=0.9',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  referer: 'https://github.com/',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-dest': 'document',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=b812bbe3faa30c3e461d',
  'x-forwarded-for': '176.224.149.182:21161',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '4cae9e3e-4303-48a0-9054-938724fa5b9d'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
📧 Using email: wsamoum@github.com
👤 Existing users found: 1
✅ User exists, logging in: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDEwNDQsImV4cCI6MTc2MzM5MzA0NH0.G8xHNDCYJV6LZ9Ng0dLN6-9XCBBJcBNfHZOcinLau4Y&email=wsamoum%40github.com
2025-10-18T15:24:04.903Z - GET /auth/callback
2025-10-18T15:24:05.138Z - GET /favicon.ico
2025-10-18T15:27:14.766Z - GET /api/auth/github
2025-10-18T15:27:34.200Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'dc9d5f564ae0a9d51556' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en;q=0.9',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  referer: 'https://github.com/',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-dest': 'document',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=dc9d5f564ae0a9d51556',
  'x-forwarded-for': '176.224.149.182:28633',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '8f23e9ea-fb47-41e8-b5b9-44f585236f28'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
📧 Using email: wsamoum@github.com
👤 Existing users found: 1
✅ User exists, logging in: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDEyNTUsImV4cCI6MTc2MzM5MzI1NX0.TVe9BAtSBU1FmVp8S02bB7F6FfaqvRtyti4tV3UubeI&email=wsamoum%40github.com
2025-10-18T15:27:35.910Z - GET /auth/callback
2025-10-18T15:27:36.259Z - GET /favicon.ico
2025-10-18T15:37:10.110Z - GET /api/auth/github
2025-10-18T15:37:10.960Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '6690fa5dd88996bd6070' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=6690fa5dd88996bd6070',
  'x-forwarded-for': '176.224.149.182:30225',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '96f0c838-3fc6-4c34-b2b3-27f841357012'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
📧 Using email: wsamoum@github.com
👤 Existing users found: 1
✅ User exists, logging in: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDE4MzIsImV4cCI6MTc2MzM5MzgzMn0.Pq2ou8bmPFBImeVAv5n_bAQveoBbTggrZ5SAnqQ9VOs&email=wsamoum%40github.com
2025-10-18T15:37:13.382Z - GET /api/auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T15:37:18.415Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 730,
  rows: 1
}
2025-10-18T15:37:19.582Z - GET /api/auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T15:37:39.571Z - GET /health
2025-10-18T15:39:36.936Z - GET /api/auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 623,
  rows: 1
}
2025-10-18T15:40:48.084Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 615,
  rows: 0
}
2025-10-18T15:43:35.895Z - GET /api/auth/me
2025-10-18T15:43:35.896Z - GET /api-keys/list
2025-10-18T15:43:35.897Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 721,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 725,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 725,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T15:43:36.811Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 597,
  rows: 1
}
2025-10-18T15:47:30.800Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 618,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 127,
  rows: 1
}
2025-10-18T15:49:49.777Z - GET /api/auth/me
2025-10-18T15:49:49.925Z - GET /api-keys/usage
2025-10-18T15:49:49.926Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 701,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 627,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 671,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 0
}
2025-10-18T15:50:45.975Z - GET /api/auth/me
2025-10-18T15:50:45.984Z - GET /api-keys/list
2025-10-18T15:50:45.984Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 610,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 611,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 0
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T15:52:09.298Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T15:52:14.382Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 129,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-18T15:53:02.007Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 602,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-18T15:53:09.515Z - GET /health
2025-10-18T15:59:26.732Z - GET /api/auth/github
2025-10-18T15:59:27.404Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '644732e5e3cd4167b1af' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=644732e5e3cd4167b1af',
  'x-forwarded-for': '176.224.149.182:37272',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'c7aa437a-246f-42e5-8858-194dd6bfbc29'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
⚠️ Using fallback email: wsamoum@github.com
✅ Final email: wsamoum@github.com
👤 Existing users found: 1
✅ User exists, logging in: 7
✅ OAuth success, returning user: 7
🟢 Passport authentication successful!
👤 User authenticated: 7 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDMxNjksImV4cCI6MTc2MzM5NTE2OX0.eZl70_WHqN6y_sZlGswua1_kFy_eGb4tIhb2C-8Npg8&email=wsamoum%40github.com
2025-10-18T15:59:31.301Z - GET /api-keys/list
2025-10-18T15:59:31.303Z - GET /api/auth/me
2025-10-18T15:59:31.304Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 138,
  rows: 0
}
2025-10-18T16:00:41.729Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 664,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 134,
  rows: 1
}
2025-10-18T16:01:10.740Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 663,
  rows: 0
}
2025-10-18T16:05:30.128Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 130,
  rows: 1
}
2025-10-18T16:05:30.877Z - GET /api-keys/usage
2025-10-18T16:05:30.878Z - GET /api-keys/list
2025-10-18T16:05:30.878Z - GET /api/auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 133,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 700,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 710,
  rows: 28
}
2025-10-18T16:05:31.915Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 624,
  rows: 1
}
2025-10-18T16:05:35.328Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:05:35.366Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 642,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 611,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-18T16:05:48.175Z - POST /api/admin/users/4/device-limit
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 125,
  rows: 1
}
2025-10-18T16:05:49.355Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 614,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 6
}
2025-10-18T16:05:58.966Z - GET /api-keys/usage
2025-10-18T16:05:58.967Z - GET /api/auth/me
2025-10-18T16:05:58.967Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 620,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 623,
  rows: 28
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 652,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-18T16:06:00.179Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 1
}
2025-10-18T16:06:12.691Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:06:12.692Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 600,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 6
}
2025-10-18T16:06:50.385Z - GET /api/auth/me
2025-10-18T16:06:50.388Z - GET /api-keys/usage
2025-10-18T16:06:50.388Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 600,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T16:06:51.194Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 1
}
2025-10-18T16:08:39.516Z - GET /health
2025-10-18T16:09:07.990Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-18T16:11:14.244Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 729,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T16:14:53.941Z - GET /api/auth/me
2025-10-18T16:14:53.944Z - GET /api-keys/list
2025-10-18T16:14:53.944Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 605,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 615,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T16:14:54.760Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 642,
  rows: 1
}
2025-10-18T16:14:57.027Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:14:57.028Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 615,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 6
}
2025-10-18T16:15:00.672Z - GET /api/admin/users/7
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 652,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 132,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 128,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 129,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T16:15:12.293Z - GET /api/admin/users/7
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 634,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 127,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T16:15:53.792Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:15:53.799Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 123,
  rows: 1
}
2025-10-18T16:16:03.163Z - GET /api/admin/users/7
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 125,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 123,
  rows: 1
}
2025-10-18T16:18:22.811Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 732,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T16:23:10.285Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:23:10.287Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-18T16:23:14.127Z - GET /api/admin/users/7
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 625,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 121,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T16:23:16.090Z - GET /api/admin/users/7
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 610,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T16:24:09.512Z - GET /health
2025-10-18T16:24:34.262Z - GET /api/auth/me
2025-10-18T16:24:34.262Z - GET /api-keys/list
2025-10-18T16:24:34.284Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 702,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 752,
  rows: 28
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 754,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T16:24:35.225Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 608,
  rows: 1
}
2025-10-18T16:25:23.689Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:25:23.691Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 611,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 647,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 5
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T16:25:34.236Z - GET /api/auth/github
2025-10-18T16:25:40.251Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'b2bedafebd73caea383a' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  referer: 'https://github.com/',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-dest': 'document',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=b2bedafebd73caea383a',
  'x-forwarded-for': '176.224.149.182:1713',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'fa780259-0ff6-486c-9565-62b455a2d39d'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
⚠️ Using fallback email: wsamoum@github.com
✅ Final email: wsamoum@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'wsamoum@github.com',
  oauth_provider: 'github',
  oauth_id: '238846628',
  trial_start: 2025-10-18T16:25:42.369Z,
  trial_end: 2025-10-25T16:25:42.369Z,
  trial_status: 'active'
}
✅ New user created: 8
✅ OAuth success, returning user: 8
🟢 Passport authentication successful!
👤 User authenticated: 8 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiZW1haWwiOiJ3c2Ftb3VtQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDQ3NDIsImV4cCI6MTc2MzM5Njc0Mn0.sG0i0vrz7huocV7aDfISX17JNguxSSMBlBpYLxj5_bM&email=wsamoum%40github.com
2025-10-18T16:25:43.228Z - GET /api-keys/list
2025-10-18T16:25:43.229Z - GET /api-keys/usage
2025-10-18T16:25:43.229Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 128,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 643,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 0
}
2025-10-18T16:26:10.347Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 622,
  rows: 1
}
2025-10-18T16:26:11.509Z - GET /api/auth/me
2025-10-18T16:26:11.510Z - GET /api-keys/list
2025-10-18T16:26:11.510Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 600,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 669,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T16:26:12.425Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 1
}
2025-10-18T16:26:18.579Z - GET /api/auth/me
2025-10-18T16:26:18.626Z - GET /api-keys/list
2025-10-18T16:26:18.629Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 610,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 620,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-18T16:26:19.463Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 618,
  rows: 1
}
2025-10-18T16:26:27.904Z - GET /api/auth/me
2025-10-18T16:26:27.912Z - GET /api-keys/list
2025-10-18T16:26:27.912Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 598,
  rows: 28
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 607,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 637,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-18T16:26:28.729Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 620,
  rows: 1
}
2025-10-18T16:28:55.489Z - GET /api-keys/usage
2025-10-18T16:28:55.489Z - GET /api/auth/me
2025-10-18T16:28:55.490Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 639,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 641,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 654,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T16:28:56.343Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 619,
  rows: 1
}
2025-10-18T16:28:58.705Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:28:58.705Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 660,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 694,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 134,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T16:29:01.064Z - GET /api/admin/users/8
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 125,
  rows: 1
}
2025-10-18T16:32:23.904Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:32:23.904Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 615,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 6
}
2025-10-18T16:32:26.127Z - GET /api/auth/me
2025-10-18T16:32:26.138Z - GET /api-keys/list
2025-10-18T16:32:26.142Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 28
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 624,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 659,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-18T16:32:27.116Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 658,
  rows: 1
}
2025-10-18T16:32:44.259Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:32:44.261Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 611,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T16:32:56.251Z - GET /api/admin/users/8
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 118,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T16:36:48.283Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:36:48.283Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 653,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T16:37:08.997Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T16:37:26.913Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:37:26.913Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 706,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 757,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 132,
  rows: 1
}
2025-10-18T16:38:12.780Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:38:12.780Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 635,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 635,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 128,
  rows: 6
}
2025-10-18T16:38:15.466Z - GET /api/admin/users/8
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 593,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 118,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 123,
  rows: 1
}
2025-10-18T16:38:49.870Z - GET /api/admin/users/4
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 625,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 124,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T16:39:24.773Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'Ahmed_Fouad - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-5e:ff:2e:7f:86:f4',
  name: 'Ahmed_Fouad - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 601,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 44 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T16:39:39.509Z - GET /health
2025-10-18T16:39:45.614Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 625,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  suppress all logs with { quiet: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T16:41:59.214Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T16:41:12.440Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 126,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T16:44:08.664Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T16:44:01.366Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_740af97d6ab453...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 133,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 43 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T16:46:17.177Z - GET /api-keys/list
2025-10-18T16:46:17.181Z - GET /api/auth/me
2025-10-18T16:46:17.182Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 603,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 614,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 618,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-18T16:46:17.996Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 1
}
2025-10-18T16:46:21.112Z - GET /api/auth/me
2025-10-18T16:46:21.117Z - GET /api-keys/list
2025-10-18T16:46:21.287Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 639,
  rows: 28
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 656,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 659,
  rows: 3
}
2025-10-18T16:46:22.001Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 629,
  rows: 1
}
2025-10-18T16:46:37.525Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:46:37.529Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 614,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 646,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 6
}
2025-10-18T16:46:40.086Z - GET /api/admin/users/8
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 669,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 128,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 132,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 140,
  rows: 1
}
2025-10-18T16:46:41.583Z - GET /api/admin/users/8
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 120,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 131,
  rows: 1
}
2025-10-18T16:47:10.941Z - GET /api/auth/me
2025-10-18T16:47:10.948Z - GET /api-keys/list
2025-10-18T16:47:10.948Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 599,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 597,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 631,
  rows: 28
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T16:47:11.778Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 604,
  rows: 1
}
2025-10-18T16:47:20.539Z - DELETE /api-keys/43
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 598,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 126,
  rows: 1
}
✅ API Key 43 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-18T16:47:21.469Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 634,
  rows: 1
}
2025-10-18T16:47:22.530Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 677,
  rows: 29
}
2025-10-18T16:47:23.409Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 635,
  rows: 0
}
2025-10-18T16:47:36.060Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_0cbb4f12a33843...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 45 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 122,
  rows: 1
}
2025-10-18T16:47:40.932Z - GET /api/auth/me
2025-10-18T16:47:40.933Z - GET /api-keys/list
2025-10-18T16:47:40.934Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 3
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 627,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 628,
  rows: 29
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T16:47:41.764Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 1
}
2025-10-18T16:48:17.739Z - GET /api/auth/me
2025-10-18T16:48:17.739Z - GET /api-keys/list
2025-10-18T16:48:17.741Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 729,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 730,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 758,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T16:48:18.663Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 632,
  rows: 2
}
2025-10-18T16:48:25.756Z - GET /api/auth/github
2025-10-18T16:48:26.494Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'fd6b13b610623464ab6d' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,ar;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36 Edg/141.0.0.0',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Microsoft Edge";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=fd6b13b610623464ab6d',
  'x-forwarded-for': '176.224.149.182:16157',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'd6c7d730-767e-41c9-a668-43216e5cc2bd'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "222093330",
  "nodeId": "U_kgDODTzgEg",
  "displayName": null,
  "username": "SamyMoussa",
  "profileUrl": "https://github.com/SamyMoussa",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/222093330?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"SamyMoussa\",\"id\":222093330,\"node_id\":\"U_kgDODTzgEg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/222093330?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/SamyMoussa\",\"html_url\":\"https://github.com/SamyMoussa\",\"followers_url\":\"https://api.github.com/users/SamyMoussa/followers\",\"following_url\":\"https://api.github.com/users/SamyMoussa/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/SamyMoussa/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/SamyMoussa/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/SamyMoussa/subscriptions\",\"organizations_url\":\"https://api.github.com/users/SamyMoussa/orgs\",\"repos_url\":\"https://api.github.com/users/SamyMoussa/repos\",\"events_url\":\"https://api.github.com/users/SamyMoussa/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/SamyMoussa/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":1,\"created_at\":\"2025-07-21T19:17:12Z\",\"updated_at\":\"2025-10-09T09:29:49Z\"}",
  "_json": {
    "login": "SamyMoussa",
    "id": 222093330,
    "node_id": "U_kgDODTzgEg",
    "avatar_url": "https://avatars.githubusercontent.com/u/222093330?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamyMoussa",
    "html_url": "https://github.com/SamyMoussa",
    "followers_url": "https://api.github.com/users/SamyMoussa/followers",
    "following_url": "https://api.github.com/users/SamyMoussa/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamyMoussa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamyMoussa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamyMoussa/subscriptions",
    "organizations_url": "https://api.github.com/users/SamyMoussa/orgs",
    "repos_url": "https://api.github.com/users/SamyMoussa/repos",
    "events_url": "https://api.github.com/users/SamyMoussa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamyMoussa/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 1,
    "created_at": "2025-07-21T19:17:12Z",
    "updated_at": "2025-10-09T09:29:49Z"
  }
}
⚠️ Using fallback email: SamyMoussa@github.com
✅ Final email: SamyMoussa@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'SamyMoussa@github.com',
  oauth_provider: 'github',
  oauth_id: '222093330',
  trial_start: 2025-10-18T16:48:28.493Z,
  trial_end: 2025-10-25T16:48:28.493Z,
  trial_status: 'active'
}
✅ New user created: 9
✅ OAuth success, returning user: 9
🟢 Passport authentication successful!
👤 User authenticated: 9 SamyMoussa@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwiZW1haWwiOiJTYW15TW91c3NhQGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDYxMDgsImV4cCI6MTc2MzM5ODEwOH0.SCDquHrvfqbn52GIOteicugTdhtHsqTAuEX4-tN0r40&email=SamyMoussa%40github.com
2025-10-18T16:48:29.453Z - GET /api-keys/list
2025-10-18T16:48:29.454Z - GET /api/auth/me
2025-10-18T16:48:29.454Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 124,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 607,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 0
}
2025-10-18T16:48:51.471Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 652,
  rows: 1
}
2025-10-18T16:48:52.796Z - GET /api-keys/usage
2025-10-18T16:48:52.797Z - GET /api/auth/me
2025-10-18T16:48:52.797Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 621,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 661,
  rows: 3
}
2025-10-18T16:48:53.847Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 2
}
2025-10-18T16:48:56.684Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 4
2025-10-18T16:48:56.685Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 4
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 4,
  email: 's.moussa@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 4,
  email: 's.moussa@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 128,
  rows: 7
}
2025-10-18T16:49:55.026Z - GET /api/auth/github
2025-10-18T16:49:55.838Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'cf93a5420a0751f8b371' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,ar;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36 Edg/141.0.0.0',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Microsoft Edge";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=cf93a5420a0751f8b371',
  'x-forwarded-for': '176.224.149.182:16157',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '3e57f93a-7164-4892-808e-0f911f77b897'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "222093330",
  "nodeId": "U_kgDODTzgEg",
  "displayName": null,
  "username": "SamyMoussa",
  "profileUrl": "https://github.com/SamyMoussa",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/222093330?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"SamyMoussa\",\"id\":222093330,\"node_id\":\"U_kgDODTzgEg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/222093330?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/SamyMoussa\",\"html_url\":\"https://github.com/SamyMoussa\",\"followers_url\":\"https://api.github.com/users/SamyMoussa/followers\",\"following_url\":\"https://api.github.com/users/SamyMoussa/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/SamyMoussa/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/SamyMoussa/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/SamyMoussa/subscriptions\",\"organizations_url\":\"https://api.github.com/users/SamyMoussa/orgs\",\"repos_url\":\"https://api.github.com/users/SamyMoussa/repos\",\"events_url\":\"https://api.github.com/users/SamyMoussa/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/SamyMoussa/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":1,\"created_at\":\"2025-07-21T19:17:12Z\",\"updated_at\":\"2025-10-09T09:29:49Z\"}",
  "_json": {
    "login": "SamyMoussa",
    "id": 222093330,
    "node_id": "U_kgDODTzgEg",
    "avatar_url": "https://avatars.githubusercontent.com/u/222093330?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamyMoussa",
    "html_url": "https://github.com/SamyMoussa",
    "followers_url": "https://api.github.com/users/SamyMoussa/followers",
    "following_url": "https://api.github.com/users/SamyMoussa/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamyMoussa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamyMoussa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamyMoussa/subscriptions",
    "organizations_url": "https://api.github.com/users/SamyMoussa/orgs",
    "repos_url": "https://api.github.com/users/SamyMoussa/repos",
    "events_url": "https://api.github.com/users/SamyMoussa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamyMoussa/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 1,
    "created_at": "2025-07-21T19:17:12Z",
    "updated_at": "2025-10-09T09:29:49Z"
  }
}
⚠️ Using fallback email: SamyMoussa@github.com
✅ Final email: SamyMoussa@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'SamyMoussa@github.com',
  oauth_provider: 'github',
  oauth_id: '222093330',
  trial_start: 2025-10-18T16:49:57.738Z,
  trial_end: 2025-10-25T16:49:57.738Z,
  trial_status: 'active'
}
✅ New user created: 10
✅ OAuth success, returning user: 10
🟢 Passport authentication successful!
👤 User authenticated: 10 SamyMoussa@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsImVtYWlsIjoiU2FteU1vdXNzYUBnaXRodWIuY29tIiwiaWF0IjoxNzYwODA2MTk3LCJleHAiOjE3NjMzOTgxOTd9.04GU2cXbjibOtMwYXXQt9PfgdBjfsyRaazqrISIblTA&email=SamyMoussa%40github.com
2025-10-18T16:49:58.502Z - GET /api/auth/me
2025-10-18T16:49:58.502Z - GET /api-keys/list
2025-10-18T16:49:58.505Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 625,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 623,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 0
}
2025-10-18T16:51:04.015Z - GET /api/auth/github
2025-10-18T16:51:30.217Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] {
  error: 'access_denied',
  error_description: 'The user has denied your application access.',
  error_uri: 'https://docs.github.com/apps/managing-oauth-apps/troubleshooting-authorization-request-errors/#access-denied'
}
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,ar;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  referer: 'https://github.com/',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36 Edg/141.0.0.0',
  'sec-ch-ua': '"Microsoft Edge";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-dest': 'document',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?error=access_denied&error_description=The+user+has+denied+your+application+access.&error_uri=https%3A%2F%2Fdocs.github.com%2Fapps%2Fmanaging-oauth-apps%2Ftroubleshooting-authorization-request-errors%2F%23access-denied',
  'x-forwarded-for': '176.224.149.182:16157',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'cdf7a59c-e3d9-4e3d-a63d-9c6526408e14'
}
2025-10-18T16:51:35.059Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'eeacea69294a5061482e' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-US,en;q=0.9,ar;q=0.8',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  referer: 'https://github.com/',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36 Edg/141.0.0.0',
  'sec-ch-ua': '"Microsoft Edge";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-dest': 'document',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=eeacea69294a5061482e',
  'x-forwarded-for': '176.224.149.182:16157',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '4a977ca3-3c36-46a6-ab2c-9442bbb5ebbe'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "63238629",
  "nodeId": "MDQ6VXNlcjYzMjM4NjI5",
  "displayName": null,
  "username": "samymoussa87",
  "profileUrl": "https://github.com/samymoussa87",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/63238629?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"samymoussa87\",\"id\":63238629,\"node_id\":\"MDQ6VXNlcjYzMjM4NjI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/63238629?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/samymoussa87\",\"html_url\":\"https://github.com/samymoussa87\",\"followers_url\":\"https://api.github.com/users/samymoussa87/followers\",\"following_url\":\"https://api.github.com/users/samymoussa87/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/samymoussa87/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/samymoussa87/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/samymoussa87/subscriptions\",\"organizations_url\":\"https://api.github.com/users/samymoussa87/orgs\",\"repos_url\":\"https://api.github.com/users/samymoussa87/repos\",\"events_url\":\"https://api.github.com/users/samymoussa87/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/samymoussa87/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2020-04-06T11:45:51Z\",\"updated_at\":\"2024-10-26T12:02:43Z\"}",
  "_json": {
    "login": "samymoussa87",
    "id": 63238629,
    "node_id": "MDQ6VXNlcjYzMjM4NjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/63238629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/samymoussa87",
    "html_url": "https://github.com/samymoussa87",
    "followers_url": "https://api.github.com/users/samymoussa87/followers",
    "following_url": "https://api.github.com/users/samymoussa87/following{/other_user}",
    "gists_url": "https://api.github.com/users/samymoussa87/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/samymoussa87/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/samymoussa87/subscriptions",
    "organizations_url": "https://api.github.com/users/samymoussa87/orgs",
    "repos_url": "https://api.github.com/users/samymoussa87/repos",
    "events_url": "https://api.github.com/users/samymoussa87/events{/privacy}",
    "received_events_url": "https://api.github.com/users/samymoussa87/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2020-04-06T11:45:51Z",
    "updated_at": "2024-10-26T12:02:43Z"
  }
}
⚠️ Using fallback email: samymoussa87@github.com
✅ Final email: samymoussa87@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'samymoussa87@github.com',
  oauth_provider: 'github',
  oauth_id: '63238629',
  trial_start: 2025-10-18T16:51:36.981Z,
  trial_end: 2025-10-25T16:51:36.981Z,
  trial_status: 'active'
}
✅ New user created: 11
✅ OAuth success, returning user: 11
🟢 Passport authentication successful!
👤 User authenticated: 11 samymoussa87@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTEsImVtYWlsIjoic2FteW1vdXNzYTg3QGdpdGh1Yi5jb20iLCJpYXQiOjE3NjA4MDYyOTcsImV4cCI6MTc2MzM5ODI5N30.EhEI-J1mdBqbmX1B5d4f654JfzgP28lZs-nWl2gGPKE&email=samymoussa87%40github.com
2025-10-18T16:51:37.781Z - GET /api/auth/me
2025-10-18T16:51:37.782Z - GET /api-keys/list
2025-10-18T16:51:37.782Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 623,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 0
}
2025-10-18T16:51:46.602Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 629,
  rows: 0
}
2025-10-18T16:52:07.527Z - GET /api-keys/usage
2025-10-18T16:52:07.527Z - GET /api-keys/list
2025-10-18T16:52:07.528Z - GET /api/auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 123,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 599,
  rows: 29
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 599,
  rows: 1
}
2025-10-18T16:52:08.325Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 1
}
2025-10-18T16:52:17.357Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 3
2025-10-18T16:52:17.358Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 6
}
2025-10-18T16:52:21.978Z - GET /api/admin/users/11
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-18T16:52:23.412Z - GET /api/admin/users/11
🔍 Admin middleware - userId from JWT: 3
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 630,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 3,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 125,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T16:52:26.075Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 604,
  rows: 0
}
2025-10-18T16:52:42.574Z - POST /api/auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 127,
  rows: 1
}
2025-10-18T16:52:43.375Z - GET /api-keys/list
2025-10-18T16:52:43.375Z - GET /api/auth/me
2025-10-18T16:52:43.376Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 638,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
2025-10-18T16:52:54.389Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 602,
  rows: 1
}
2025-10-18T16:52:56.895Z - GET /api/auth/me
2025-10-18T16:52:56.903Z - GET /api-keys/usage
2025-10-18T16:52:56.904Z - GET /api-keys/list
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 608,
  rows: 3
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 611,
  rows: 29
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T16:52:57.723Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 1
}
2025-10-18T16:53:13.048Z - POST /api/auth/login
2025-10-18T16:53:28.560Z - POST /api/auth/login
2025-10-18T16:53:36.381Z - POST /api/auth/login
2025-10-18T16:53:37.224Z - POST /api/auth/login
2025-10-18T16:53:37.905Z - POST /api/auth/login
2025-10-18T16:54:34.321Z - POST /api/auth/login
2025-10-18T16:54:41.420Z - POST /api/auth/login
2025-10-18T16:55:00.300Z - GET /api/auth/github
2025-10-18T16:55:01.965Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'ee1a5acab3e68132e4b6' }
Headers: {
  connection: 'Keep-Alive',
  accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
  'accept-encoding': 'gzip, deflate, br, zstd',
  'accept-language': 'en-GB,en;q=0.9',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
  'upgrade-insecure-requests': '1',
  'sec-fetch-site': 'cross-site',
  'sec-fetch-mode': 'navigate',
  'sec-fetch-user': '?1',
  'sec-fetch-dest': 'document',
  'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
  'sec-ch-ua-mobile': '?0',
  'sec-ch-ua-platform': '"Windows"',
  priority: 'u=0, i',
  'x-original-url': '/api/auth/github/callback?code=ee1a5acab3e68132e4b6',
  'x-forwarded-for': '176.224.149.182:1170',
  'x-arr-ssl': "3072|256|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '3336d168-e0cd-4cd1-994a-def1dd4567b8'
}
🔐 GitHub OAuth callback received
📧 Profile: {
  "id": "238846628",
  "nodeId": "U_kgDODjyCpA",
  "displayName": null,
  "username": "wsamoum",
  "profileUrl": "https://github.com/wsamoum",
  "photos": [
    {
      "value": "https://avatars.githubusercontent.com/u/238846628?v=4"
    }
  ],
  "provider": "github",
  "_raw": "{\"login\":\"wsamoum\",\"id\":238846628,\"node_id\":\"U_kgDODjyCpA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/238846628?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/wsamoum\",\"html_url\":\"https://github.com/wsamoum\",\"followers_url\":\"https://api.github.com/users/wsamoum/followers\",\"following_url\":\"https://api.github.com/users/wsamoum/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/wsamoum/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/wsamoum/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/wsamoum/subscriptions\",\"organizations_url\":\"https://api.github.com/users/wsamoum/orgs\",\"repos_url\":\"https://api.github.com/users/wsamoum/repos\",\"events_url\":\"https://api.github.com/users/wsamoum/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/wsamoum/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false,\"name\":null,\"company\":null,\"blog\":\"\",\"location\":null,\"email\":null,\"hireable\":null,\"bio\":null,\"twitter_username\":null,\"notification_email\":null,\"public_repos\":0,\"public_gists\":0,\"followers\":0,\"following\":0,\"created_at\":\"2025-10-18T12:09:08Z\",\"updated_at\":\"2025-10-18T12:09:17Z\"}",
  "_json": {
    "login": "wsamoum",
    "id": 238846628,
    "node_id": "U_kgDODjyCpA",
    "avatar_url": "https://avatars.githubusercontent.com/u/238846628?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wsamoum",
    "html_url": "https://github.com/wsamoum",
    "followers_url": "https://api.github.com/users/wsamoum/followers",
    "following_url": "https://api.github.com/users/wsamoum/following{/other_user}",
    "gists_url": "https://api.github.com/users/wsamoum/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wsamoum/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wsamoum/subscriptions",
    "organizations_url": "https://api.github.com/users/wsamoum/orgs",
    "repos_url": "https://api.github.com/users/wsamoum/repos",
    "events_url": "https://api.github.com/users/wsamoum/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wsamoum/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false,
    "name": null,
    "company": null,
    "blog": "",
    "location": null,
    "email": null,
    "hireable": null,
    "bio": null,
    "twitter_username": null,
    "notification_email": null,
    "public_repos": 0,
    "public_gists": 0,
    "followers": 0,
    "following": 0,
    "created_at": "2025-10-18T12:09:08Z",
    "updated_at": "2025-10-18T12:09:17Z"
  }
}
⚠️ Using fallback email: wsamoum@github.com
✅ Final email: wsamoum@github.com
👤 Existing users found: 0
🆕 Creating new user...
📝 INSERT params: {
  email: 'wsamoum@github.com',
  oauth_provider: 'github',
  oauth_id: '238846628',
  trial_start: 2025-10-18T16:55:03.988Z,
  trial_end: 2025-10-25T16:55:03.988Z,
  trial_status: 'active'
}
✅ New user created: 13
✅ OAuth success, returning user: 13
🟢 Passport authentication successful!
👤 User authenticated: 13 wsamoum@github.com
🔑 JWT token generated
↪️  Redirecting to: https://auxly.tzamun.com/auth/callback?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImVtYWlsIjoid3NhbW91bUBnaXRodWIuY29tIiwiaWF0IjoxNzYwODA2NTA0LCJleHAiOjE3NjMzOTg1MDR9.698UB_JPL2fxebdi0Hv_n41iPLIyIjEsAHVxqG-MkdU&email=wsamoum%40github.com
2025-10-18T16:55:05.280Z - GET /api-keys/list
2025-10-18T16:55:05.281Z - GET /api/auth/me
2025-10-18T16:55:05.281Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 122,
  rows: 0
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 606,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 0
}
2025-10-18T16:55:09.507Z - GET /health
2025-10-18T16:56:25.233Z - POST /api/auth/login
2025-10-18T17:10:16.667Z - GET /api-keys/list
2025-10-18T17:10:16.668Z - GET /api-keys/usage
2025-10-18T17:10:16.668Z - GET /api/auth/me
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 736,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 745,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 777,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 0
}
2025-10-18T17:10:20.516Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 604,
  rows: 1
}
2025-10-18T17:10:21.579Z - GET /api/auth/me
2025-10-18T17:10:21.580Z - GET /api-keys/list
2025-10-18T17:10:21.629Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 617,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 0
}
2025-10-18T17:10:26.974Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 613,
  rows: 1
}
2025-10-18T17:10:28.028Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 646,
  rows: 1
}
2025-10-18T17:10:28.903Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 633,
  rows: 0
}
2025-10-18T17:10:35.508Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 619,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count \n' +
    '       FROM usage_logs \n' +
    '       WHERE user_id = $1 \n' +
    "       AND timestamp > NOW() - INTERVAL '30 days'",
  duration: 122,
  rows: 1
}
2025-10-18T17:10:39.540Z - GET /health
2025-10-18T17:10:41.412Z - GET /api/auth/me
2025-10-18T17:10:41.413Z - GET /api-keys/list
2025-10-18T17:10:41.414Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 599,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 0
}
2025-10-18T17:10:42.207Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 1
}
2025-10-18T17:10:45.910Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:10:45.925Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 624,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 608,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 8
}
2025-10-18T17:10:49.790Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 135,
  rows: 1
}
2025-10-18T17:11:07.656Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:11:07.663Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 620,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 653,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 133,
  rows: 8
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 136,
  rows: 1
}
2025-10-18T17:11:16.493Z - POST /api/admin/users/14/device-limit
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 120,
  rows: 1
}
2025-10-18T17:11:17.670Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 8
}
2025-10-18T17:11:43.996Z - GET /api/auth/me
2025-10-18T17:11:43.998Z - GET /api-keys/list
2025-10-18T17:11:43.999Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 609,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 648,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 0
}
2025-10-18T17:11:44.805Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
2025-10-18T17:16:10.572Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:16:10.573Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 792,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 793,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 142,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 148,
  rows: 8
}
2025-10-18T17:16:17.951Z - GET /api/admin/users/12
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T17:16:22.540Z - POST /api/admin/users/12/make-admin
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 652,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'UPDATE users SET is_admin = $1 WHERE id = $2',
  duration: 130,
  rows: 1
}
2025-10-18T17:16:23.664Z - GET /api/admin/users/12
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:16:23.665Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 642,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 8
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 130,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 134,
  rows: 1
}
2025-10-18T17:20:14.948Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:20:14.967Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 647,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 143,
  rows: 8
}
2025-10-18T17:20:17.547Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 662,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 134,
  rows: 1
}
2025-10-18T17:20:24.308Z - GET /api/admin/users/13
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 124,
  rows: 1
}
2025-10-18T17:20:38.120Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:20:38.120Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 612,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 8
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-18T17:20:59.258Z - GET /api/auth/me
2025-10-18T17:20:59.259Z - GET /api-keys/list
2025-10-18T17:20:59.259Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 735,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 736,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 776,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-18T17:21:00.191Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 1
}
2025-10-18T17:21:10.415Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:21:10.415Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 619,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 127,
  rows: 8
}
2025-10-18T17:21:19.757Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 128,
  rows: 1
}
2025-10-18T17:25:43.659Z - GET /api-keys/usage
2025-10-18T17:25:43.660Z - GET /api/auth/me
2025-10-18T17:25:43.660Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 628,
  rows: 1
}
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 628,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 652,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T17:25:44.726Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 1
}
2025-10-18T17:25:47.381Z - GET /api-keys/list
2025-10-18T17:25:47.382Z - GET /api/auth/me
2025-10-18T17:25:47.385Z - GET /api-keys/usage
Executed query {
  text: 'SELECT id, email, created_at, is_admin, is_blocked, max_devices FROM users WHERE id = $1',
  duration: 617,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 645,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 656,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-18T17:25:48.647Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T17:26:51.036Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T17:26:09.522Z - GET /health
2025-10-18T17:26:49.062Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 133,
  rows: 3
}
🔍 Found 3 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 128,
  rows: 1
}
2025-10-18T17:26:51.367Z - GET /api/auth/me
2025-10-18T17:26:51.376Z - GET /api-keys/list
2025-10-18T17:26:51.377Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 615,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 628,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 644,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-18T17:26:52.211Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 615,
  rows: 1
}
2025-10-18T17:27:13.534Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 600,
  rows: 1
}
2025-10-18T17:27:14.558Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 588,
  rows: 1
}
2025-10-18T17:27:15.345Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 0
}
2025-10-18T17:27:26.023Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_dae334d6192b53...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 619,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 122,
  rows: 0
}
2025-10-18T17:27:28.275Z - GET /auth/verify
2025-10-18T17:27:39.936Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_028e20ae877bab...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 125,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 122,
  rows: 1
}
2025-10-18T17:29:44.161Z - GET /api/auth/me
2025-10-18T17:29:44.162Z - GET /api-keys/list
2025-10-18T17:29:44.164Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 610,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T17:29:45.216Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 609,
  rows: 1
}
2025-10-18T17:30:56.864Z - GET /api/auth/me
2025-10-18T17:30:56.864Z - GET /api-keys/usage
2025-10-18T17:30:56.864Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 596,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 643,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-18T17:30:57.905Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 1
}
2025-10-18T17:40:46.237Z - GET /api-keys/list
2025-10-18T17:40:46.238Z - GET /api-keys/usage
2025-10-18T17:40:46.238Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 727,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 727,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 729,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T17:40:47.251Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 1
}
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: 🔄 add secrets lifecycle management: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T17:41:59.431Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T17:41:39.565Z - GET /health
2025-10-18T17:41:58.531Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 127,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-18T17:42:36.679Z - GET /api-keys/list
2025-10-18T17:42:36.682Z - GET /api-keys/usage
2025-10-18T17:42:36.684Z - GET /api/auth/me
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 618,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-18T17:42:37.731Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 1
}
2025-10-18T17:42:42.221Z - GET /api/auth/me
2025-10-18T17:42:42.229Z - GET /api-keys/list
2025-10-18T17:42:42.238Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 612,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 615,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-18T17:42:43.291Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 1
}
2025-10-18T17:42:52.192Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T17:42:52.203Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 618,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 633,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 131,
  rows: 8
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-18T17:42:54.973Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 590,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 125,
  rows: 1
}
2025-10-18T17:42:58.719Z - GET /api-keys/list
2025-10-18T17:42:58.720Z - GET /api/auth/me
2025-10-18T17:42:58.721Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 601,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 602,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 605,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T17:42:59.707Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 620,
  rows: 1
}
2025-10-18T17:44:03.776Z - GET /health
2025-10-18T17:48:20.777Z - GET /api/auth/me
2025-10-18T17:48:20.778Z - GET /api-keys/list
2025-10-18T17:48:20.778Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 746,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 748,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 747,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T17:48:21.726Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 1
}
2025-10-18T17:57:09.574Z - GET /health
2025-10-18T17:57:34.692Z - GET /api/auth/google/callback
2025-10-18T17:58:40.350Z - GET /api/auth/google/
2025-10-18T17:58:40.357Z - GET /api/auth/
2025-10-18T17:58:40.530Z - GET /api/auth
2025-10-18T17:58:41.215Z - GET /api/
2025-10-18T17:58:41.970Z - GET /api/auth/google
[dotenv@17.2.3] injecting env (20) from .env -- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T18:02:41.408Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T18:02:45.741Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 135,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T18:03:32.645Z - GET /health
2025-10-18T18:11:58.994Z - GET /api/auth/google
2025-10-18T18:12:03.697Z - GET /api/auth/google
2025-10-18T18:12:08.310Z - GET /api/auth/google/callback
2025-10-18T18:12:11.481Z - GET /api/auth/me
2025-10-18T18:12:11.486Z - GET /api-keys/list
2025-10-18T18:12:11.500Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 601,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 662,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 133,
  rows: 1
}
2025-10-18T18:12:20.062Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 608,
  rows: 1
}
2025-10-18T18:12:22.449Z - GET /api/auth/me
2025-10-18T18:12:22.451Z - GET /api-keys/list
2025-10-18T18:12:22.452Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 612,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 630,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T18:12:23.320Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 1
}
2025-10-18T18:12:29.723Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-18T18:12:29.724Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 649,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 663,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 144,
  rows: 9
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-18T18:12:39.509Z - GET /health
2025-10-18T18:15:51.476Z - GET /api/auth/google
2025-10-18T18:15:59.365Z - GET /api/auth/google/callback
2025-10-18T18:16:01.858Z - GET /api-keys/list
2025-10-18T18:16:01.858Z - GET /api-keys/usage
2025-10-18T18:16:01.859Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 645,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
[dotenv@17.2.3] injecting env (23) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T18:28:19.574Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T18:28:09.516Z - GET /health
2025-10-18T18:28:21.520Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 136,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-18T18:29:19.938Z - GET /api/auth/microsoft
2025-10-18T18:43:42.684Z - GET /health
2025-10-18T18:55:00.405Z - GET /api/auth/microsoft
2025-10-18T18:55:24.190Z - GET /api/auth/microsoft
[dotenv@17.2.3] injecting env (23) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T18:57:11.201Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T18:57:16.021Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 131,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T18:59:09.515Z - GET /health
2025-10-18T19:01:35.985Z - GET /api/auth/microsoft
2025-10-18T19:11:35.345Z - GET /api/auth/microsoft
2025-10-18T19:12:06.826Z - GET /api/auth/microsoft
2025-10-18T19:12:30.510Z - GET /api/auth/microsoft
2025-10-18T19:14:39.511Z - GET /health
2025-10-18T19:14:51.667Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 709,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
[dotenv@17.2.3] injecting env (23) from .env -- tip: ⚙️  override existing env vars with { override: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-18T19:20:00.436Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-18T19:19:59.280Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 137,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-18T19:30:09.503Z - GET /health
2025-10-18T19:35:53.416Z - GET /api/auth/microsoft
2025-10-18T19:36:21.143Z - GET /api/auth/microsoft
2025-10-18T19:45:39.520Z - GET /health
2025-10-18T20:01:09.532Z - GET /health
2025-10-18T20:03:17.594Z - GET /api/auth/microsoft
2025-10-18T20:05:26.910Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 753,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 140,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-18T20:09:22.545Z - GET /api/auth/microsoft
2025-10-18T20:14:11.246Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 757,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 143,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 145,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-18T20:16:20.763Z - GET /health
2025-10-18T20:17:04.345Z - GET /api/auth/microsoft
2025-10-18T20:20:24.634Z - GET /api/auth/microsoft
2025-10-18T20:31:39.511Z - GET /health
2025-10-18T20:33:43.528Z - GET /api/config/tsconfig.json
2025-10-18T20:47:09.500Z - GET /health
2025-10-18T21:02:39.535Z - GET /health
2025-10-18T21:18:09.497Z - GET /health
2025-10-18T21:33:39.502Z - GET /health
2025-10-18T21:49:09.515Z - GET /health
2025-10-18T22:04:39.493Z - GET /health
2025-10-18T22:20:09.497Z - GET /health
2025-10-18T22:35:39.491Z - GET /health
2025-10-18T22:51:09.519Z - GET /health
2025-10-18T23:06:39.497Z - GET /health
2025-10-18T23:22:09.505Z - GET /health
2025-10-18T23:37:39.492Z - GET /health
2025-10-18T23:53:09.476Z - GET /health
2025-10-19T00:08:39.486Z - GET /health
2025-10-19T00:24:10.107Z - GET /health
2025-10-19T00:39:39.490Z - GET /health
2025-10-19T00:55:09.483Z - GET /health
2025-10-19T01:10:39.489Z - GET /health
2025-10-19T01:26:09.490Z - GET /health
2025-10-19T01:41:39.487Z - GET /health
2025-10-19T01:57:09.494Z - GET /health
2025-10-19T02:12:39.499Z - GET /health
2025-10-19T02:28:10.070Z - GET /health
2025-10-19T02:43:39.483Z - GET /health
2025-10-19T02:59:10.092Z - GET /health
2025-10-19T03:14:39.485Z - GET /health
2025-10-19T03:30:09.509Z - GET /health
2025-10-19T03:45:39.486Z - GET /health
2025-10-19T04:01:09.484Z - GET /health
2025-10-19T04:16:39.524Z - GET /health
2025-10-19T04:32:09.508Z - GET /health
2025-10-19T04:47:39.496Z - GET /health
2025-10-19T05:03:09.495Z - GET /health
2025-10-19T05:18:39.491Z - GET /health
2025-10-19T05:34:10.073Z - GET /health
2025-10-19T05:49:39.490Z - GET /health
2025-10-19T06:05:09.496Z - GET /health
2025-10-19T06:20:39.490Z - GET /health
2025-10-19T06:36:09.491Z - GET /health
2025-10-19T06:51:39.505Z - GET /health
2025-10-19T07:07:09.490Z - GET /health
2025-10-19T07:22:39.486Z - GET /health
2025-10-19T07:38:09.494Z - GET /health
2025-10-19T07:53:39.489Z - GET /health
2025-10-19T08:09:10.173Z - GET /health
2025-10-19T08:24:39.522Z - GET /health
2025-10-19T08:40:09.496Z - GET /health
2025-10-19T08:55:39.495Z - GET /health
2025-10-19T09:11:09.494Z - GET /health
2025-10-19T09:19:19.561Z - GET /health
2025-10-19T09:20:02.416Z - GET /health
2025-10-19T09:35:09.503Z - GET /health
2025-10-19T09:46:45.573Z - GET /health
2025-10-19T09:50:39.499Z - GET /health
2025-10-19T10:06:09.523Z - GET /health
2025-10-19T10:09:16.778Z - GET /api/auth/microsoft
2025-10-19T10:09:26.068Z - GET /api/auth/microsoft
2025-10-19T10:21:39.503Z - GET /health
2025-10-19T10:37:09.550Z - GET /health
2025-10-19T10:52:39.505Z - GET /health
2025-10-19T11:08:09.504Z - GET /health
2025-10-19T11:23:39.481Z - GET /health
2025-10-19T11:26:11.754Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8e:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8e:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_028e20ae877bab...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 728,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 152,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 122,
  rows: 1
}
2025-10-19T11:37:49.367Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 754,
  rows: 0
}
2025-10-19T11:37:53.468Z - GET /api/auth/google
2025-10-19T11:38:23.945Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 128,
  rows: 1
}
2025-10-19T11:38:24.517Z - GET /api-keys/usage
2025-10-19T11:38:24.518Z - GET /api/auth/me
2025-10-19T11:38:24.519Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 133,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 618,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 621,
  rows: 1
}
2025-10-19T11:38:25.573Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 618,
  rows: 2
}
2025-10-19T11:39:10.154Z - GET /health
2025-10-19T11:54:39.477Z - GET /health
2025-10-19T12:10:09.475Z - GET /health
2025-10-19T12:25:39.480Z - GET /health
2025-10-19T12:41:09.488Z - GET /health
2025-10-19T12:56:39.485Z - GET /health
2025-10-19T13:01:36.290Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 718,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-19T13:12:09.494Z - GET /health
2025-10-19T13:14:58.873Z - POST /api/auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 729,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 147,
  rows: 1
}
2025-10-19T13:15:00.370Z - GET /api-keys/list
2025-10-19T13:15:00.371Z - GET /api/auth/me
2025-10-19T13:15:00.372Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 654,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 655,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 131,
  rows: 1
}
2025-10-19T13:15:48.124Z - GET /api/auth/
2025-10-19T13:15:48.789Z - GET /api/
2025-10-19T13:15:50.188Z - GET /api/auth
2025-10-19T13:15:50.643Z - GET /api/auth/google
2025-10-19T13:19:38.055Z - GET /api-keys/list
2025-10-19T13:19:38.055Z - GET /api-keys/usage
2025-10-19T13:19:38.056Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 618,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-19T13:19:38.873Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 609,
  rows: 2
}
2025-10-19T13:27:39.484Z - GET /health
2025-10-19T13:43:09.515Z - GET /health
2025-10-19T13:58:39.481Z - GET /health
2025-10-19T14:14:10.104Z - GET /health
2025-10-19T14:29:39.489Z - GET /health
2025-10-19T14:45:09.475Z - GET /health
2025-10-19T15:00:39.521Z - GET /health
2025-10-19T15:16:09.458Z - GET /health
2025-10-19T15:31:39.488Z - GET /health
2025-10-19T15:47:09.468Z - GET /health
2025-10-19T16:02:39.466Z - GET /health
2025-10-19T16:18:09.474Z - GET /health
2025-10-19T16:24:29.298Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 805,
  rows: 1
}
2025-10-19T16:24:30.364Z - GET /api-keys/list
2025-10-19T16:24:30.365Z - GET /api-keys/usage
2025-10-19T16:24:30.365Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 126,
  rows: 1
}
2025-10-19T16:24:30.933Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 655,
  rows: 2
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 671,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 690,
  rows: 1
}
2025-10-19T16:25:04.977Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:25:04.978Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:25:04.979Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 619,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 125,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 131,
  rows: 11
}
2025-10-19T16:29:21.571Z - GET /api-keys/list
2025-10-19T16:29:21.572Z - GET /api/auth/me
2025-10-19T16:29:21.572Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 604,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 624,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 631,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 127,
  rows: 1
}
2025-10-19T16:29:22.528Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 624,
  rows: 1
}
2025-10-19T16:29:26.063Z - GET /api/auth/me
2025-10-19T16:29:26.063Z - GET /api-keys/list
2025-10-19T16:29:26.064Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 606,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 620,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 626,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 130,
  rows: 1
}
2025-10-19T16:29:27.057Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 1
}
2025-10-19T16:29:30.079Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:29:30.080Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:29:30.080Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 725,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 730,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 778,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 127,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 141,
  rows: 11
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 147,
  rows: 1
}
2025-10-19T16:29:35.626Z - POST /api/admin/users/14/device-limit
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 619,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT akd.id, akd.last_used_at\n' +
    '       FROM api_key_devices akd\n' +
    '       JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '       WHERE ak.user_id = $1\n' +
    '       ORDER BY akd.last_used_at DESC',
  duration: 126,
  rows: 1
}
2025-10-19T16:29:36.950Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 642,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 132,
  rows: 11
}
2025-10-19T16:29:39.531Z - GET /api/auth/me
2025-10-19T16:29:39.557Z - GET /api-keys/list
2025-10-19T16:29:39.558Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 617,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 608,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 629,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 117,
  rows: 1
}
2025-10-19T16:29:40.613Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 616,
  rows: 1
}
2025-10-19T16:33:39.459Z - GET /health
2025-10-19T16:44:12.413Z - GET /favicon.ico
2025-10-19T16:44:28.190Z - GET /favicon.ico
2025-10-19T16:44:29.138Z - GET /.well-known/security.txt
2025-10-19T16:49:09.472Z - GET /health
2025-10-19T16:51:11.504Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:51:11.505Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-19T16:51:11.505Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 728,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 729,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 736,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 11
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 117,
  rows: 3
}
2025-10-19T16:51:20.762Z - POST /api/admin/users/12/device-limit
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 614,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 126,
  rows: 1
}
2025-10-19T16:51:22.026Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 620,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 131,
  rows: 11
}
2025-10-19T16:51:27.467Z - GET /api/auth/me
2025-10-19T16:51:27.468Z - GET /api-keys/usage
2025-10-19T16:51:27.468Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 651,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 671,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 673,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-19T16:51:28.511Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 638,
  rows: 1
}
2025-10-19T16:51:31.217Z - GET /api-keys/usage
2025-10-19T16:51:31.218Z - GET /api-keys/list
2025-10-19T16:51:31.218Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 666,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 666,
  rows: 2
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 676,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-19T16:51:32.082Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 626,
  rows: 2
}
2025-10-19T16:51:50.845Z - GET /api-keys/list
2025-10-19T16:51:50.845Z - GET /api/auth/me
2025-10-19T16:51:50.846Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 618,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 618,
  rows: 2
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 621,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-19T16:51:51.663Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 629,
  rows: 2
}
2025-10-19T16:52:13.910Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 645,
  rows: 1
}
2025-10-19T16:52:15.002Z - GET /api-keys/list
2025-10-19T16:52:15.003Z - GET /api/auth/me
2025-10-19T16:52:15.003Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 132,
  rows: 1
}
2025-10-19T16:52:15.329Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 602,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 654,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 627,
  rows: 2
}
2025-10-19T16:52:35.834Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 12
2025-10-19T16:52:35.835Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 12
2025-10-19T16:52:35.835Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 12
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 12,
  email: 's.moussa@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 610,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 12,
  email: 's.moussa@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 611,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 12,
  email: 's.moussa@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 121,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 128,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 11
}
2025-10-19T17:04:39.459Z - GET /health
2025-10-19T17:20:09.459Z - GET /health
2025-10-19T17:35:39.451Z - GET /health
2025-10-19T17:51:09.463Z - GET /health
2025-10-19T18:06:39.448Z - GET /health
2025-10-19T18:22:09.462Z - GET /health
2025-10-19T18:37:39.456Z - GET /health
2025-10-19T18:53:09.448Z - GET /health
2025-10-19T19:08:39.447Z - GET /health
2025-10-19T19:24:10.097Z - GET /health
2025-10-19T19:39:39.533Z - GET /health
2025-10-19T19:55:10.079Z - GET /health
2025-10-19T20:10:39.424Z - GET /health
2025-10-19T20:26:09.435Z - GET /health
2025-10-19T20:41:39.562Z - GET /health
2025-10-19T20:57:09.552Z - GET /health
2025-10-19T21:12:39.453Z - GET /health
2025-10-19T21:28:09.439Z - GET /health
2025-10-19T21:43:39.430Z - GET /health
2025-10-19T21:59:09.512Z - GET /health
2025-10-19T22:14:39.566Z - GET /health
2025-10-19T22:30:09.434Z - GET /health
2025-10-19T22:45:39.451Z - GET /health
2025-10-19T23:01:09.423Z - GET /health
2025-10-19T23:16:39.417Z - GET /health
2025-10-19T23:32:09.433Z - GET /health
2025-10-19T23:47:39.442Z - GET /health
2025-10-20T00:03:09.435Z - GET /health
2025-10-20T00:18:39.427Z - GET /health
2025-10-20T00:34:09.432Z - GET /health
2025-10-20T00:49:39.414Z - GET /health
2025-10-20T01:05:09.427Z - GET /health
2025-10-20T01:20:39.427Z - GET /health
2025-10-20T01:36:09.424Z - GET /health
2025-10-20T01:51:39.436Z - GET /health
2025-10-20T02:07:09.423Z - GET /health
2025-10-20T02:22:39.423Z - GET /health
2025-10-20T02:38:09.432Z - GET /health
2025-10-20T02:53:39.427Z - GET /health
2025-10-20T03:09:10.028Z - GET /health
2025-10-20T03:24:39.428Z - GET /health
2025-10-20T03:40:09.424Z - GET /health
2025-10-20T03:55:39.430Z - GET /health
2025-10-20T04:11:09.424Z - GET /health
2025-10-20T04:26:39.419Z - GET /health
2025-10-20T04:42:09.427Z - GET /health
2025-10-20T04:57:39.425Z - GET /health
2025-10-20T05:13:09.423Z - GET /health
2025-10-20T05:28:39.427Z - GET /health
2025-10-20T05:44:10.036Z - GET /health
2025-10-20T05:59:39.441Z - GET /health
2025-10-20T06:15:10.015Z - GET /health
2025-10-20T06:30:39.419Z - GET /health
2025-10-20T06:46:09.420Z - GET /health
2025-10-20T07:01:39.465Z - GET /health
2025-10-20T07:16:50.569Z - GET /health
2025-10-20T07:32:10.004Z - GET /health
2025-10-20T07:42:39.669Z - GET /health
2025-10-20T07:58:09.429Z - GET /health
2025-10-20T08:13:39.423Z - GET /health
2025-10-20T08:29:09.431Z - GET /health
2025-10-20T08:44:39.425Z - GET /health
2025-10-20T09:00:09.428Z - GET /health
2025-10-20T09:15:39.411Z - GET /health
2025-10-20T09:31:09.411Z - GET /health
2025-10-20T09:46:39.417Z - GET /health
2025-10-20T09:50:47.248Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 778,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 141,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 139,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 140,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 140,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-20T09:53:21.718Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 613,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-20T10:02:09.572Z - GET /health
2025-10-20T10:09:04.762Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '0b5924045eaf0f43df41' }
Headers: {
  connection: 'Keep-Alive',
  accept: '*/*',
  'accept-encoding': 'gzip',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25',
  'x-original-url': '/api/auth/github/callback?code=0b5924045eaf0f43df41',
  'x-forwarded-for': '184.72.115.35:23629',
  'x-arr-ssl': "3072|128|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '43a29fc4-e0b9-4dc8-b295-5bb81ee9cb9d'
}
2025-10-20T10:13:15.318Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 754,
  rows: 4
}
🔍 Found 4 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-20T10:17:39.432Z - GET /health
2025-10-20T10:30:01.697Z - POST /api/auth/register
Executed query {
  text: 'SELECT id FROM users WHERE email = $1',
  duration: 704,
  rows: 0
}
Executed query {
  text: 'INSERT INTO users (email, password_hash) VALUES ($1, $2) RETURNING id, email, created_at',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO subscriptions (user_id, plan_tier, status) VALUES ($1, $2, $3)',
  duration: 128,
  rows: 1
}
2025-10-20T10:30:03.091Z - GET /api-keys/usage
2025-10-20T10:30:03.092Z - GET /api/auth/me
2025-10-20T10:30:03.092Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 597,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 0
}
2025-10-20T10:30:10.722Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 603,
  rows: 1
}
2025-10-20T10:30:11.745Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 599,
  rows: 1
}
2025-10-20T10:30:12.541Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 609,
  rows: 0
}
2025-10-20T10:30:19.484Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:57:42:98',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-OPS-ESRAA - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:57:42:98',
  name: 'ITO-OPS-ESRAA - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e92cf3d607f2d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 132,
  rows: 1
}
2025-10-20T10:33:09.995Z - GET /health
2025-10-20T10:39:08.095Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'cafc142afe634caea1fe' }
Headers: {
  connection: 'Keep-Alive',
  accept: '*/*',
  'accept-encoding': 'gzip',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25',
  'x-original-url': '/api/auth/github/callback?code=cafc142afe634caea1fe',
  'x-forwarded-for': '184.72.121.156:59823',
  'x-arr-ssl': "3072|128|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'ef103e77-1c3c-41af-bb52-9447d8d2212c'
}
2025-10-20T10:48:39.419Z - GET /health
2025-10-20T11:04:09.417Z - GET /health
2025-10-20T11:19:39.403Z - GET /health
2025-10-20T11:35:09.407Z - GET /health
2025-10-20T11:43:53.206Z - GET /api/api/auth/github
2025-10-20T11:46:59.298Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'b29f079a500a1d8dbfaa' }
Headers: {
  connection: 'Keep-Alive',
  accept: '*/*',
  'accept-encoding': 'gzip',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25',
  'x-original-url': '/api/auth/github/callback?code=b29f079a500a1d8dbfaa',
  'x-forwarded-for': '54.209.60.63:60895',
  'x-arr-ssl': "3072|128|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'bf6103d7-4076-4d5f-95e3-bd5286b18181'
}
2025-10-20T11:50:16.437Z - GET /health
2025-10-20T12:05:39.408Z - GET /health
2025-10-20T12:21:09.400Z - GET /health
2025-10-20T12:36:39.390Z - GET /health
2025-10-20T12:52:09.386Z - GET /health
2025-10-20T13:07:39.383Z - GET /health
2025-10-20T13:23:09.429Z - GET /health
2025-10-20T13:38:39.396Z - GET /health
2025-10-20T13:54:10.000Z - GET /health
2025-10-20T14:09:39.421Z - GET /health
2025-10-20T14:25:09.392Z - GET /health
2025-10-20T14:40:39.396Z - GET /health
2025-10-20T14:56:14.427Z - GET /health
2025-10-20T15:11:39.392Z - GET /health
2025-10-20T15:27:09.401Z - GET /health
2025-10-20T15:42:39.421Z - GET /health
2025-10-20T15:58:09.431Z - GET /health
2025-10-20T16:13:39.394Z - GET /health
2025-10-20T16:29:10.052Z - GET /health
2025-10-20T16:44:39.430Z - GET /health
2025-10-20T17:00:09.399Z - GET /health
2025-10-20T17:15:39.393Z - GET /health
2025-10-20T17:31:09.387Z - GET /health
2025-10-20T17:44:00.564Z - GET /favicon.ico
2025-10-20T17:44:34.610Z - GET /favicon.ico
2025-10-20T17:44:38.064Z - GET /.well-known/security.txt
2025-10-20T17:46:39.399Z - GET /health
2025-10-20T18:02:09.394Z - GET /health
2025-10-20T18:17:39.383Z - GET /health
2025-10-20T18:33:09.379Z - GET /health
2025-10-20T18:48:39.380Z - GET /health
2025-10-20T19:04:10.140Z - GET /health
2025-10-20T19:19:39.377Z - GET /health
2025-10-20T19:35:09.388Z - GET /health
2025-10-20T19:50:39.373Z - GET /health
2025-10-20T20:06:09.384Z - GET /health
2025-10-20T20:21:39.380Z - GET /health
2025-10-20T20:37:10.102Z - GET /health
2025-10-20T20:52:39.504Z - GET /health
2025-10-20T21:08:10.147Z - GET /health
2025-10-20T21:23:39.496Z - GET /health
2025-10-20T21:37:43.300Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: 'f2718d75edb592eb6753' }
Headers: {
  connection: 'Keep-Alive',
  accept: '*/*',
  'accept-encoding': 'gzip',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25',
  'x-original-url': '/api/auth/github/callback?code=f2718d75edb592eb6753',
  'x-forwarded-for': '54.209.60.63:26777',
  'x-arr-ssl': "3072|128|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': 'cd33847e-738b-474c-8653-afa5c436cd04'
}
2025-10-20T21:39:10.385Z - GET /health
2025-10-20T21:54:39.497Z - GET /health
2025-10-20T22:10:09.474Z - GET /health
2025-10-20T22:13:10.782Z - GET /api/auth/github/callback
🔵 GitHub callback route hit!
Query params: [Object: null prototype] { code: '2e4f7a749147ccea1a2d' }
Headers: {
  connection: 'Keep-Alive',
  accept: '*/*',
  'accept-encoding': 'gzip',
  host: 'auxly.tzamun.com',
  'max-forwards': '10',
  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/600.1.25 (KHTML, like Gecko) Version/8.0 Safari/600.1.25',
  'x-original-url': '/api/auth/github/callback?code=2e4f7a749147ccea1a2d',
  'x-forwarded-for': '184.72.115.35:7957',
  'x-arr-ssl': "3072|128|C=US, O=Let's Encrypt, CN=R13|CN=auxly.tzamun.com",
  'x-arr-log-id': '15f75a85-6c8a-470c-a1b1-0f61fd879e3d'
}
2025-10-20T22:25:39.458Z - GET /health
2025-10-20T22:41:09.363Z - GET /health
2025-10-20T22:56:39.355Z - GET /health
2025-10-20T23:12:09.444Z - GET /health
2025-10-20T23:27:39.530Z - GET /health
2025-10-20T23:43:09.532Z - GET /health
2025-10-20T23:58:39.468Z - GET /health
2025-10-21T00:14:09.513Z - GET /health
2025-10-21T00:29:39.465Z - GET /health
2025-10-21T00:45:10.049Z - GET /health
2025-10-21T01:00:39.476Z - GET /health
2025-10-21T01:16:09.364Z - GET /health
2025-10-21T01:31:39.469Z - GET /health
2025-10-21T01:47:10.187Z - GET /health
2025-10-21T02:02:39.455Z - GET /health
2025-10-21T02:18:09.451Z - GET /health
2025-10-21T02:33:39.558Z - GET /health
2025-10-21T02:49:10.183Z - GET /health
2025-10-21T03:04:39.444Z - GET /health
2025-10-21T03:20:10.179Z - GET /health
2025-10-21T03:35:39.443Z - GET /health
2025-10-21T03:51:09.464Z - GET /health
2025-10-21T04:06:39.356Z - GET /health
2025-10-21T04:22:09.481Z - GET /health
2025-10-21T04:37:39.440Z - GET /health
2025-10-21T04:53:09.548Z - GET /health
2025-10-21T05:08:39.467Z - GET /health
2025-10-21T05:24:10.263Z - GET /health
2025-10-21T05:39:39.363Z - GET /health
2025-10-21T05:55:09.380Z - GET /health
2025-10-21T06:10:39.471Z - GET /health
2025-10-21T06:26:09.467Z - GET /health
2025-10-21T06:36:13.384Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 737,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-21T06:41:39.417Z - GET /health
2025-10-21T06:52:05.294Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'PathConnect - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'PathConnect - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 733,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-21T06:57:09.355Z - GET /health
2025-10-21T07:12:39.360Z - GET /health
2025-10-21T07:28:09.961Z - GET /health
2025-10-21T07:43:39.370Z - GET /health
2025-10-21T07:57:05.893Z - GET /api-keys/usage
2025-10-21T07:57:05.894Z - GET /api-keys/list
2025-10-21T07:57:05.895Z - GET /api/auth/me
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 706,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 708,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 712,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
2025-10-21T07:57:07.024Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 614,
  rows: 1
}
2025-10-21T07:59:09.973Z - GET /health
2025-10-21T08:14:41.519Z - GET /health
2025-10-21T08:30:09.359Z - GET /health
2025-10-21T08:45:39.352Z - GET /health
2025-10-21T09:01:09.371Z - GET /health
2025-10-21T09:16:39.423Z - GET /health
2025-10-21T09:31:54.571Z - GET /health
2025-10-21T09:47:09.356Z - GET /health
2025-10-21T10:02:39.393Z - GET /health
2025-10-21T10:18:10.040Z - GET /health
2025-10-21T10:33:13.508Z - GET /health
2025-10-21T10:48:39.372Z - GET /health
2025-10-21T11:04:09.976Z - GET /health
2025-10-21T11:19:39.355Z - GET /health
2025-10-21T11:35:07.194Z - GET /health
2025-10-21T11:50:09.360Z - GET /health
2025-10-21T12:05:39.346Z - GET /health
2025-10-21T12:21:09.353Z - GET /health
2025-10-21T12:36:39.369Z - GET /health
2025-10-21T12:52:09.355Z - GET /health
2025-10-21T13:07:39.355Z - GET /health
2025-10-21T13:23:00.108Z - GET /health
2025-10-21T13:29:53.427Z - GET /api/.env
2025-10-21T13:38:09.345Z - GET /health
2025-10-21T13:53:39.426Z - GET /health
2025-10-21T14:09:09.350Z - GET /health
2025-10-21T14:24:39.430Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (23) from .env -- tip: 🗂️ backup and recover secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  override existing env vars with { override: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-21T14:37:56.973Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
[dotenv@17.2.3] injecting env (23) from .env -- tip: ⚙️  override existing env vars with { override: true }
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-21T14:38:03.071Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-21T14:40:09.442Z - GET /health
2025-10-21T14:40:20.132Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 161,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-21T14:55:28.796Z - GET /health
2025-10-21T15:10:39.329Z - GET /health
2025-10-21T15:26:09.343Z - GET /health
2025-10-21T15:27:02.144Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 778,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 142,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 131,
  rows: 1
}
2025-10-21T15:32:26.398Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 728,
  rows: 1
}
2025-10-21T15:32:27.403Z - GET /api/auth/me
2025-10-21T15:32:27.409Z - GET /api-keys/list
2025-10-21T15:32:27.410Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 649,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 651,
  rows: 4
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-21T15:32:28.254Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 1
}
2025-10-21T15:41:39.326Z - GET /health
2025-10-21T15:43:33.782Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 717,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-21T15:57:09.351Z - GET /health
2025-10-21T16:12:39.345Z - GET /health
2025-10-21T16:23:37.143Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 734,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 145,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 136,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-21T16:28:09.948Z - GET /health
2025-10-21T16:31:12.610Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 790,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 143,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 138,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 142,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-21T16:43:39.338Z - GET /health
2025-10-21T16:59:10.046Z - GET /health
2025-10-21T17:09:14.981Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_028e20ae877bab...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 818,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 224,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 223,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 159,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 139,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-21T17:10:30.576Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 635,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-21T17:14:39.332Z - GET /health
2025-10-21T17:30:09.930Z - GET /health
2025-10-21T17:45:39.320Z - GET /health
2025-10-21T18:01:09.304Z - GET /health
2025-10-21T18:16:44.427Z - GET /health
2025-10-21T18:32:09.434Z - GET /health
2025-10-21T18:47:39.358Z - GET /health
2025-10-21T19:03:09.953Z - GET /health
2025-10-21T19:18:20.065Z - GET /api-keys/list
2025-10-21T19:18:20.066Z - GET /api-keys/usage
2025-10-21T19:18:20.066Z - GET /api/auth/me
2025-10-21T19:18:39.444Z - GET /health
2025-10-21T19:34:09.334Z - GET /health
2025-10-21T19:40:56.500Z - GET /favicon.ico
2025-10-21T19:41:09.274Z - GET /favicon.ico
2025-10-21T19:41:11.108Z - GET /security.txt
2025-10-21T19:49:39.434Z - GET /health
2025-10-21T20:05:09.433Z - GET /health
2025-10-21T20:20:39.398Z - GET /health
2025-10-21T20:36:09.304Z - GET /health
2025-10-21T20:51:39.294Z - GET /health
2025-10-21T21:07:09.364Z - GET /health
2025-10-21T21:22:39.389Z - GET /health
2025-10-21T21:38:09.293Z - GET /health
2025-10-21T21:53:39.389Z - GET /health
2025-10-21T22:09:09.293Z - GET /health
2025-10-21T22:24:39.301Z - GET /health
2025-10-21T22:40:09.283Z - GET /health
2025-10-21T22:55:39.334Z - GET /health
2025-10-21T23:11:09.390Z - GET /health
2025-10-21T23:26:39.281Z - GET /health
2025-10-21T23:42:09.271Z - GET /health
2025-10-21T23:57:39.375Z - GET /health
2025-10-22T00:13:09.389Z - GET /health
2025-10-22T00:28:39.301Z - GET /health
2025-10-22T00:44:10.117Z - GET /health
2025-10-22T00:59:39.366Z - GET /health
2025-10-22T01:15:09.282Z - GET /health
2025-10-22T01:30:39.292Z - GET /health
2025-10-22T01:46:09.411Z - GET /health
2025-10-22T02:01:39.292Z - GET /health
2025-10-22T02:17:09.402Z - GET /health
2025-10-22T02:32:39.390Z - GET /health
2025-10-22T02:48:09.405Z - GET /health
2025-10-22T03:03:39.290Z - GET /health
2025-10-22T03:19:09.994Z - GET /health
2025-10-22T03:34:39.385Z - GET /health
2025-10-22T03:50:09.279Z - GET /health
2025-10-22T04:05:39.263Z - GET /health
2025-10-22T04:21:09.272Z - GET /health
2025-10-22T04:36:39.413Z - GET /health
2025-10-22T04:52:09.292Z - GET /health
2025-10-22T05:07:39.273Z - GET /health
2025-10-22T05:23:09.944Z - GET /health
2025-10-22T05:38:39.266Z - GET /health
2025-10-22T05:54:09.893Z - GET /health
2025-10-22T06:09:39.407Z - GET /health
2025-10-22T06:25:09.368Z - GET /health
2025-10-22T06:27:35.081Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 733,
  rows: 5
}
🔍 Found 5 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T06:40:39.279Z - GET /health
2025-10-22T06:51:33.333Z - POST /device.rsp
2025-10-22T06:51:33.729Z - POST /ws/v1/cluster/apps/new-application
2025-10-22T06:51:34.532Z - POST /device.rsp
2025-10-22T06:51:34.736Z - POST /ws/v1/cluster/apps/new-application
2025-10-22T06:56:09.270Z - GET /health
2025-10-22T07:11:39.278Z - GET /health
2025-10-22T07:27:09.290Z - GET /health
2025-10-22T07:42:39.266Z - GET /health
2025-10-22T07:58:09.293Z - GET /health
2025-10-22T08:13:39.277Z - GET /health
2025-10-22T08:16:18.960Z - GET /api/auth/google
2025-10-22T08:16:28.924Z - GET /api/auth/google/callback
2025-10-22T08:16:32.012Z - GET /api/auth/me
2025-10-22T08:16:32.015Z - GET /api-keys/usage
2025-10-22T08:16:32.016Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 615,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 616,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-22T08:16:34.621Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 625,
  rows: 1
}
2025-10-22T08:16:35.669Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 650,
  rows: 1
}
2025-10-22T08:16:36.515Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 634,
  rows: 0
}
2025-10-22T08:16:43.609Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 632,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 157,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 125,
  rows: 1
}
2025-10-22T08:18:50.119Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 624,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T08:29:09.291Z - GET /health
2025-10-22T08:44:06.869Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 723,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
2025-10-22T08:44:08.311Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 120,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 617,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T08:44:21.755Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 617,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T08:44:39.413Z - GET /health
2025-10-22T08:44:55.066Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 643,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-22T08:53:48.588Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 752,
  rows: 1
}
2025-10-22T08:53:49.780Z - GET /api/auth/me
2025-10-22T08:53:49.780Z - GET /api-keys/list
2025-10-22T08:53:49.782Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 616,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 616,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T08:53:50.595Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 2
}
2025-10-22T08:53:55.565Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 660,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 47 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 133,
  rows: 1
}
2025-10-22T08:53:59.194Z - DELETE /api-keys/47
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 620,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 125,
  rows: 2
}
✅ API Key 47 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-22T08:54:00.138Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 1
}
2025-10-22T08:54:00.950Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 640,
  rows: 0
}
2025-10-22T08:54:06.500Z - DELETE /api-keys/47
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 608,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 0
}
✅ API Key 47 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-22T08:54:07.431Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 604,
  rows: 1
}
2025-10-22T08:54:08.457Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 617,
  rows: 2
}
2025-10-22T08:54:09.268Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 611,
  rows: 0
}
2025-10-22T09:00:09.280Z - GET /health
2025-10-22T09:01:27.305Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 705,
  rows: 1
}
2025-10-22T09:01:33.085Z - GET /api-keys/list
2025-10-22T09:01:33.085Z - GET /api-keys/usage
2025-10-22T09:01:33.086Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 123,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 623,
  rows: 3
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 623,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-22T09:01:35.116Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 612,
  rows: 0
}
2025-10-22T09:01:39.231Z - DELETE /api-keys/50
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 624,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 119,
  rows: 0
}
✅ API Key 50 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-22T09:01:40.167Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 656,
  rows: 1
}
2025-10-22T09:01:41.248Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 616,
  rows: 3
}
2025-10-22T09:01:42.060Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 0
}
2025-10-22T09:02:40.404Z - GET /api-keys/list
2025-10-22T09:02:40.405Z - GET /api-keys/usage
2025-10-22T09:02:40.405Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 616,
  rows: 3
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 649,
  rows: 3
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-22T09:02:41.220Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 623,
  rows: 0
}
2025-10-22T09:15:39.276Z - GET /health
2025-10-22T09:20:59.599Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 712,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
2025-10-22T09:21:01.121Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 118,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ✅ MATCH!
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 593,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-22T09:21:40.115Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 649,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 128,
  rows: 1
}
2025-10-22T09:31:09.271Z - GET /health
2025-10-22T09:46:39.262Z - GET /health
2025-10-22T10:02:09.274Z - GET /health
2025-10-22T10:17:39.304Z - GET /health
2025-10-22T10:24:26.391Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 760,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-22T10:28:28.222Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 619,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-22T10:32:31.930Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 739,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T10:33:09.262Z - GET /health
2025-10-22T10:39:26.896Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 737,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-22T10:48:39.262Z - GET /health
2025-10-22T10:55:47.744Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 704,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T11:02:29.689Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 735,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T11:04:09.394Z - GET /health
2025-10-22T11:13:45.242Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 703,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-22T11:14:46.431Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T11:19:39.285Z - GET /health
2025-10-22T11:26:41.989Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 714,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T11:27:11.524Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 650,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 128,
  rows: 1
}
2025-10-22T11:35:09.362Z - GET /health
2025-10-22T11:38:48.397Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 726,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-22T11:39:18.280Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 647,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-22T11:42:05.783Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 615,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T11:50:39.246Z - GET /health
2025-10-22T11:57:16.740Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T12:06:09.242Z - GET /health
2025-10-22T12:08:25.711Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 717,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T12:14:12.208Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_028e20ae877bab...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 730,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 121,
  rows: 0
}
2025-10-22T12:14:16.818Z - GET /auth/verify
2025-10-22T12:14:38.113Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 123,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 124,
  rows: 1
}
2025-10-22T12:16:21.871Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 657,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-22T12:21:39.246Z - GET /health
2025-10-22T12:23:09.294Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 707,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-22T12:36:31.786Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 744,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-22T12:37:09.246Z - GET /health
2025-10-22T12:49:46.487Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 722,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T12:50:40.178Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T12:52:39.240Z - GET /health
2025-10-22T13:00:16.407Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 706,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-22T13:04:02.842Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 598,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T13:08:09.232Z - GET /health
2025-10-22T13:08:57.003Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 696,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
[dotenv@17.2.3] injecting env (23) from .env -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  override existing env vars with { override: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-22T13:15:26.265Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-22T13:15:25.457Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 125,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-22T13:18:34.221Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 658,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-22T13:23:39.245Z - GET /health
2025-10-22T13:27:34.427Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 722,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T13:39:09.229Z - GET /health
2025-10-22T13:49:24.534Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 752,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T13:54:39.219Z - GET /health
2025-10-22T13:58:45.855Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 724,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-22T14:04:26.449Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 721,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T14:10:09.210Z - GET /health
2025-10-22T14:11:33.704Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 700,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-22T14:23:18.697Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 741,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T14:25:39.229Z - GET /health
2025-10-22T14:41:09.208Z - GET /health
2025-10-22T14:44:02.769Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T14:52:40.705Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 1736,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-22T14:53:27.062Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 600,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T14:56:39.209Z - GET /health
2025-10-22T15:12:09.217Z - GET /health
2025-10-22T15:27:39.225Z - GET /health
2025-10-22T15:38:52.316Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-74:86:e2:03:05:ac',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TITCO-ITOM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-74:86:e2:03:05:ac',
  name: 'TITCO-ITOM - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_db7554e5cbacf4...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 735,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-22T15:43:09.211Z - GET /health
2025-10-22T15:58:39.216Z - GET /health
2025-10-22T16:14:09.932Z - GET /health
2025-10-22T16:29:39.186Z - GET /health
2025-10-22T16:45:09.193Z - GET /health
2025-10-22T17:00:39.212Z - GET /health
2025-10-22T17:16:09.195Z - GET /health
2025-10-22T17:31:39.183Z - GET /health
2025-10-22T17:45:09.050Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 734,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 46 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T17:47:09.192Z - GET /health
2025-10-22T17:53:48.209Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 702,
  rows: 1
}
2025-10-22T17:53:49.390Z - GET /api/auth/me
2025-10-22T17:53:49.406Z - GET /api-keys/list
2025-10-22T17:53:49.419Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 611,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 629,
  rows: 4
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-22T17:53:50.219Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 601,
  rows: 1
}
2025-10-22T17:54:01.369Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 652,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-22T17:55:56.933Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 603,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-22T18:02:39.278Z - GET /health
2025-10-22T18:05:13.918Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 705,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-22T18:13:25.646Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 728,
  rows: 1
}
2025-10-22T18:13:26.638Z - GET /api-keys/usage
2025-10-22T18:13:26.639Z - GET /api-keys/list
2025-10-22T18:13:26.639Z - GET /api/auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 123,
  rows: 5
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 612,
  rows: 1
}
2025-10-22T18:13:27.441Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 1
}
2025-10-22T18:13:35.200Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: npm install -g @vsco...
❌ API Key format invalid
2025-10-22T18:13:45.902Z - DELETE /api-keys/46
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 612,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 124,
  rows: 1
}
✅ API Key 46 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-22T18:13:46.898Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 617,
  rows: 1
}
2025-10-22T18:13:47.938Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 606,
  rows: 2
}
2025-10-22T18:13:48.752Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 613,
  rows: 0
}
2025-10-22T18:13:54.265Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 648,
  rows: 6
}
🔍 Found 6 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 131,
  rows: 1
}
2025-10-22T18:18:09.277Z - GET /health
2025-10-22T18:33:39.273Z - GET /health
2025-10-22T18:49:09.953Z - GET /health
2025-10-22T18:49:44.302Z - GET /api/auth/google
2025-10-22T18:49:56.937Z - GET /api/auth/google/callback
2025-10-22T18:50:00.785Z - GET /api/auth/me
2025-10-22T18:50:00.789Z - GET /api-keys/list
2025-10-22T18:50:00.792Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 615,
  rows: 0
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 644,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-22T18:50:17.877Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 624,
  rows: 1
}
2025-10-22T18:50:19.126Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 620,
  rows: 1
}
2025-10-22T18:50:20.146Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 615,
  rows: 0
}
2025-10-22T18:52:33.473Z - GET /api/auth/google
2025-10-22T18:52:38.108Z - GET /api/auth/google/callback
2025-10-22T18:52:41.205Z - GET /api/auth/me
2025-10-22T18:52:41.210Z - GET /api-keys/usage
2025-10-22T18:52:41.210Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 606,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 612,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T18:52:42.218Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 651,
  rows: 0
}
2025-10-22T18:54:39.879Z - GET /api/auth/google
2025-10-22T18:54:44.102Z - GET /api/auth/google/callback
2025-10-22T18:54:47.077Z - GET /api/auth/me
2025-10-22T18:54:47.082Z - GET /api-keys/usage
2025-10-22T18:54:47.083Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 614,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 123,
  rows: 1
}
2025-10-22T18:54:48.094Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 610,
  rows: 0
}
2025-10-22T18:55:19.598Z - GET /api-keys/usage
2025-10-22T18:55:19.599Z - GET /api/auth/me
2025-10-22T18:55:19.599Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 701,
  rows: 0
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 704,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 714,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-22T18:55:21.077Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 623,
  rows: 0
}
2025-10-22T18:55:24.501Z - GET /api/auth/me
2025-10-22T18:55:24.509Z - GET /api-keys/usage
2025-10-22T18:55:24.509Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 613,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 612,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 654,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 130,
  rows: 1
}
2025-10-22T18:55:25.894Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 642,
  rows: 0
}
2025-10-22T18:55:26.631Z - GET /api/auth/me
2025-10-22T18:55:26.634Z - GET /api-keys/list
2025-10-22T18:55:26.634Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 607,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 615,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 656,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
2025-10-22T18:55:27.640Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 616,
  rows: 0
}
2025-10-22T18:58:24.164Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-22T18:59:29.580Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 658,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 144,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 138,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 129,
  rows: 1
}
2025-10-22T19:00:58.056Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 715,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T19:04:39.153Z - GET /health
2025-10-22T19:20:09.167Z - GET /health
2025-10-22T19:35:39.168Z - GET /health
2025-10-22T19:51:09.173Z - GET /health
2025-10-22T20:06:39.148Z - GET /health
2025-10-22T20:22:09.285Z - GET /health
2025-10-22T20:23:49.317Z - GET /favicon.ico
2025-10-22T20:24:03.836Z - GET /favicon.ico
2025-10-22T20:24:04.661Z - GET /security.txt
2025-10-22T20:33:42.957Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 746,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-22T20:35:08.976Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 616,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T20:37:06.635Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 605,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T20:37:39.150Z - GET /health
2025-10-22T20:38:39.745Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 611,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-22T20:53:09.150Z - GET /health
2025-10-22T21:08:39.140Z - GET /health
2025-10-22T21:24:09.852Z - GET /health
2025-10-22T21:39:39.128Z - GET /health
2025-10-22T21:55:09.262Z - GET /health
2025-10-22T22:10:39.362Z - GET /health
2025-10-22T22:26:10.184Z - GET /health
2025-10-22T22:41:39.256Z - GET /health
2025-10-22T22:57:09.236Z - GET /health
2025-10-22T23:12:39.133Z - GET /health
2025-10-22T23:28:09.256Z - GET /health
2025-10-22T23:43:39.247Z - GET /health
2025-10-22T23:59:10.138Z - GET /health
2025-10-23T00:14:39.226Z - GET /health
2025-10-23T00:30:09.237Z - GET /health
2025-10-23T00:45:39.246Z - GET /health
2025-10-23T01:01:09.812Z - GET /health
2025-10-23T01:13:44.729Z - GET /robots.txt
2025-10-23T01:13:45.455Z - GET /sitemap.xml
2025-10-23T01:13:48.317Z - GET /config.json
2025-10-23T01:16:39.132Z - GET /health
2025-10-23T01:32:09.135Z - GET /health
2025-10-23T01:47:39.230Z - GET /health
2025-10-23T02:03:09.266Z - GET /health
2025-10-23T02:18:39.269Z - GET /health
2025-10-23T02:34:09.957Z - GET /health
2025-10-23T02:49:39.138Z - GET /health
2025-10-23T02:56:36.178Z - GET /favicon.ico
2025-10-23T02:56:47.312Z - GET /security.txt
2025-10-23T02:56:48.967Z - GET /favicon.ico
2025-10-23T03:05:09.946Z - GET /health
2025-10-23T03:20:39.241Z - GET /health
2025-10-23T03:36:09.851Z - GET /health
2025-10-23T03:51:39.233Z - GET /health
2025-10-23T04:07:09.242Z - GET /health
2025-10-23T04:22:39.239Z - GET /health
2025-10-23T04:38:09.795Z - GET /health
2025-10-23T04:53:39.240Z - GET /health
2025-10-23T05:09:09.876Z - GET /health
2025-10-23T05:24:39.128Z - GET /health
2025-10-23T05:40:09.230Z - GET /health
2025-10-23T05:55:39.216Z - GET /health
2025-10-23T06:11:09.307Z - GET /health
2025-10-23T06:26:39.116Z - GET /health
✅ Database pool closed
[dotenv@17.2.3] injecting env (23) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ✅ audit secrets and track compliance: https://dotenvx.com/ops
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-23T06:40:39.704Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-23T06:42:09.994Z - GET /health
2025-10-23T06:57:39.201Z - GET /health
2025-10-23T07:01:37.866Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 142,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 119,
  rows: 0
}
2025-10-23T07:01:39.760Z - GET /auth/verify
2025-10-23T07:01:54.673Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 123,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 124,
  rows: 1
}
2025-10-23T07:08:28.810Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 710,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 51 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-23T07:12:01.176Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 633,
  rows: 1
}
2025-10-23T07:12:02.279Z - GET /api-keys/list
2025-10-23T07:12:02.281Z - GET /api/auth/me
2025-10-23T07:12:02.282Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 127,
  rows: 3
}
2025-10-23T07:12:02.600Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 588,
  rows: 5
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 596,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 605,
  rows: 1
}
2025-10-23T07:12:06.689Z - DELETE /api-keys/51
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 611,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 121,
  rows: 1
}
✅ API Key 51 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-23T07:12:07.618Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 620,
  rows: 1
}
2025-10-23T07:12:08.692Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 589,
  rows: 4
}
2025-10-23T07:12:09.477Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 0
}
2025-10-23T07:13:09.913Z - GET /health
2025-10-23T07:21:10.506Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 689,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-23T07:28:19.565Z - GET /health
2025-10-23T07:37:59.915Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 697,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-23T07:43:39.114Z - GET /health
2025-10-23T07:53:14.302Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 736,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-23T07:58:36.607Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 735,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-23T07:59:09.928Z - GET /health
2025-10-23T08:05:43.457Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 717,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-23T08:09:29.763Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 618,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-23T08:14:39.128Z - GET /health
2025-10-23T08:30:09.797Z - GET /health
2025-10-23T08:30:15.648Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 691,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 113,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-23T08:30:57.103Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-23T08:42:41.926Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 706,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-23T08:45:39.119Z - GET /health
2025-10-23T08:49:00.435Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
2025-10-23T08:56:23.571Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-23T09:01:09.851Z - GET /health
2025-10-23T09:02:13.146Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 706,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 117,
  rows: 0
}
2025-10-23T09:02:15.603Z - GET /auth/verify
2025-10-23T09:02:32.030Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 119,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-23T09:06:31.390Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 613,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-23T09:14:23.123Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 715,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 116,
  rows: 0
}
2025-10-23T09:14:25.553Z - GET /auth/verify
2025-10-23T09:14:43.473Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 118,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 113,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-23T09:16:39.105Z - GET /health
2025-10-23T09:29:52.173Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 681,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 114,
  rows: 1
}
2025-10-23T09:32:09.863Z - GET /health
2025-10-23T09:47:39.113Z - GET /health
2025-10-23T09:57:00.865Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 756,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 54 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-23T10:03:09.829Z - GET /health
2025-10-23T10:18:39.110Z - GET /health
2025-10-23T10:34:09.862Z - GET /health
2025-10-23T10:37:30.392Z - GET /favicon.ico
2025-10-23T10:37:43.476Z - GET /wiki
2025-10-23T10:37:46.590Z - GET /favicon.ico
2025-10-23T10:42:11.689Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 740,
  rows: 1
}
2025-10-23T10:42:12.684Z - GET /api-keys/list
2025-10-23T10:42:12.684Z - GET /api/auth/me
2025-10-23T10:42:12.685Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 131,
  rows: 2
}
2025-10-23T10:42:13.004Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 615,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 630,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 650,
  rows: 2
}
2025-10-23T10:42:15.415Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-23T10:42:15.416Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
2025-10-23T10:42:15.417Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 592,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 119,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 134,
  rows: 14
}
2025-10-23T10:42:51.582Z - GET /api/admin/users/20
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 131,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 159,
  rows: 1
}
2025-10-23T10:43:45.061Z - GET /api/auth/me
2025-10-23T10:43:45.063Z - GET /api-keys/list
2025-10-23T10:43:45.063Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 613,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 621,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 637,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 130,
  rows: 1
}
2025-10-23T10:43:46.049Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 617,
  rows: 2
}
2025-10-23T10:49:39.096Z - GET /health
2025-10-23T10:55:24.389Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 720,
  rows: 1
}
2025-10-23T10:55:25.367Z - GET /api-keys/usage
2025-10-23T10:55:25.367Z - GET /api-keys/list
2025-10-23T10:55:25.368Z - GET /api/auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 123,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 613,
  rows: 2
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 644,
  rows: 1
}
2025-10-23T10:55:26.172Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 2
}
2025-10-23T11:05:09.880Z - GET /health
2025-10-23T11:20:39.154Z - GET /health
2025-10-23T11:26:55.704Z - DELETE /api-keys/54
2025-10-23T11:36:09.826Z - GET /health
[dotenv@17.2.3] injecting env (23) from .env -- tip: 📡 add observability to secrets: https://dotenvx.com/ops
📊 Database config: {
  host: 'rnd.tzamun.com',
  port: 5432,
  database: 'Auxly',
  user: 'wsamoum'
}
[dotenv@17.2.3] injecting env (0) from .env -- tip: ⚙️  enable debug logging with { debug: true }
📁 Serving static files from: C:\Auxly\web\beta
✅ Database connected successfully at: 2025-10-23T11:50:22.864Z
✅ Database connection established
🚀 Auxly Backend API running on port 7000
📍 Health check: http://localhost:7000/health
🔐 Auth endpoints: http://localhost:7000/api/auth
💳 Stripe webhook: http://localhost:7000/stripe/webhook
📊 Subscription: http://localhost:7000/subscription
2025-10-23T11:49:55.508Z - GET /health
2025-10-23T11:50:05.614Z - GET /health
2025-10-23T11:51:39.094Z - GET /health
2025-10-23T11:57:08.787Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 207,
  rows: 1
}
2025-10-23T11:57:09.430Z - GET /api/auth/me
2025-10-23T11:57:09.431Z - GET /api-keys/list
2025-10-23T11:57:09.432Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 155,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 745,
  rows: 4
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 846,
  rows: 5
}
2025-10-23T11:57:10.373Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 627,
  rows: 0
}
2025-10-23T11:57:13.380Z - DELETE /api-keys/54
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 655,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 137,
  rows: 0
}
✅ API Key 54 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-23T11:57:14.361Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 645,
  rows: 1
}
2025-10-23T11:57:15.440Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 624,
  rows: 5
}
2025-10-23T11:57:16.259Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 627,
  rows: 0
}
2025-10-23T12:04:42.852Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ITO-SAMI - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-8c:f8:c5:5e:48:e0',
  name: 'ITO-SAMI - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_bea2023cb21f17...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 706,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 119,
  rows: 0
}
2025-10-23T12:04:45.906Z - GET /auth/verify
2025-10-23T12:07:09.112Z - GET /health
2025-10-23T12:07:10.976Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 118,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-23T12:12:43.094Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 715,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-23T12:16:50.719Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 644,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-23T12:22:39.095Z - GET /health
2025-10-23T12:23:04.106Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 707,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-23T12:25:26.388Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 640,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 427,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 136,
  rows: 1
}
2025-10-23T12:31:38.908Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 697,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 49 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 122,
  rows: 0
}
2025-10-23T12:31:45.050Z - GET /auth/verify
2025-10-23T12:38:09.109Z - GET /health
2025-10-23T12:42:34.408Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 126,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-23T12:50:31.993Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 750,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 133,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 130,
  rows: 1
}
2025-10-23T12:53:39.099Z - GET /health
2025-10-23T12:59:01.012Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 705,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 55 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-23T13:09:09.890Z - GET /health
2025-10-23T13:12:17.982Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 696,
  rows: 1
}
2025-10-23T13:12:19.105Z - GET /api-keys/list
2025-10-23T13:12:19.105Z - GET /api/auth/me
2025-10-23T13:12:19.106Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 120,
  rows: 5
}
2025-10-23T13:12:19.413Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 605,
  rows: 5
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 607,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 600,
  rows: 0
}
2025-10-23T13:14:50.168Z - DELETE /api-keys/55
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 639,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 126,
  rows: 0
}
✅ API Key 55 revoked and ALL 0 user devices removed (fresh 0/2 start)
2025-10-23T13:14:51.128Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 610,
  rows: 1
}
2025-10-23T13:14:52.152Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 593,
  rows: 6
}
2025-10-23T13:14:52.943Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 0
}
2025-10-23T13:18:08.979Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 716,
  rows: 1
}
2025-10-23T13:18:09.962Z - GET /api/auth/me
2025-10-23T13:18:09.962Z - GET /api-keys/list
2025-10-23T13:18:09.964Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 600,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 658,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-23T13:18:10.757Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 615,
  rows: 2
}
2025-10-23T13:18:17.809Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 651,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-23T13:24:39.115Z - GET /health
2025-10-23T13:34:42.533Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_27f6e2f9a058d3...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 711,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 130,
  rows: 1
}
2025-10-23T13:34:57.180Z - GET /api/auth/me
2025-10-23T13:34:57.183Z - GET /api-keys/usage
2025-10-23T13:34:57.183Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 610,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 610,
  rows: 6
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 647,
  rows: 5
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-23T13:34:57.988Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 916,
  rows: 1
}
2025-10-23T13:36:38.118Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:21',
  userAgent: '',
  ipAddress: '10.252.1.6',
  customDeviceName: 'tchub.tzamun.com - VS Code Extension',
  customOsInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:21',
  name: 'tchub.tzamun.com - VS Code Extension',
  osInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  browserInfo: 'VS Code Extension',
  ipAddress: '10.252.1.6'
}
🔑 Validating API Key: auxly_27f6e2f9a058d3...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 119,
  rows: 1
}
2025-10-23T13:37:24.001Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:21',
  userAgent: '',
  ipAddress: '10.252.1.6',
  customDeviceName: 'tchub.tzamun.com - VS Code Extension',
  customOsInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:21',
  name: 'tchub.tzamun.com - VS Code Extension',
  osInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  browserInfo: 'VS Code Extension',
  ipAddress: '10.252.1.6'
}
🔑 Validating API Key: auxly_27f6e2f9a058d3...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-23T13:40:09.094Z - GET /health
2025-10-23T13:55:39.103Z - GET /health
2025-10-23T14:11:09.102Z - GET /health
2025-10-23T14:14:30.276Z - GET /api/auth/google
2025-10-23T14:14:31.216Z - GET /api/auth/google/callback
2025-10-23T14:14:33.752Z - GET /api/auth/me
2025-10-23T14:14:33.765Z - GET /api-keys/usage
2025-10-23T14:14:33.765Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 595,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 637,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-23T14:14:34.598Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 621,
  rows: 1
}
2025-10-23T14:14:40.751Z - DELETE /api-keys/49
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 596,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 118,
  rows: 1
}
✅ API Key 49 revoked and ALL 1 user devices removed (fresh 0/2 start)
2025-10-23T14:14:41.703Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 634,
  rows: 1
}
2025-10-23T14:14:42.772Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 617,
  rows: 2
}
2025-10-23T14:14:43.597Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 644,
  rows: 0
}
2025-10-23T14:14:49.210Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:28',
  userAgent: '',
  ipAddress: '81.208.174.133',
  customDeviceName: 'siem.tzamun.com - VS Code Extension',
  customOsInfo: 'Linux 5.14.0-570.55.1.el9_6.x86_64',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:28',
  name: 'siem.tzamun.com - VS Code Extension',
  osInfo: 'Linux 5.14.0-570.55.1.el9_6.x86_64',
  browserInfo: 'VS Code Extension',
  ipAddress: '81.208.174.133'
}
🔑 Validating API Key: auxly_8182099736d69d...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 604,
  rows: 7
}
🔍 Found 7 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 118,
  rows: 1
}
2025-10-23T14:15:17.700Z - GET /api/auth/me
2025-10-23T14:15:17.701Z - GET /api-keys/list
2025-10-23T14:15:17.703Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 600,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 607,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 606,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-23T14:15:18.637Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 607,
  rows: 1
}
2025-10-23T14:26:39.089Z - GET /health
2025-10-23T14:42:09.091Z - GET /health
2025-10-23T14:57:39.105Z - GET /health
2025-10-23T15:13:09.087Z - GET /health
2025-10-23T15:27:45.744Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 710,
  rows: 1
}
2025-10-23T15:27:46.709Z - GET /api/auth/me
2025-10-23T15:27:46.712Z - GET /api-keys/usage
2025-10-23T15:27:46.712Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 610,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 642,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-23T15:27:47.518Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 2
}
2025-10-23T15:27:50.733Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-23T15:27:50.735Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-23T15:27:50.735Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 588,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 603,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 134,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 142,
  rows: 14
}
2025-10-23T15:28:02.967Z - GET /api/admin/users/20
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 616,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 123,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 137,
  rows: 1
}
2025-10-23T15:28:20.359Z - GET /api/auth/me
2025-10-23T15:28:20.361Z - GET /api-keys/list
2025-10-23T15:28:20.361Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 598,
  rows: 6
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 616,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 641,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-23T15:28:21.358Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 621,
  rows: 2
}
2025-10-23T15:28:39.083Z - GET /health
2025-10-23T15:44:09.082Z - GET /health
2025-10-23T15:59:22.748Z - GET /health
2025-10-23T16:14:39.092Z - GET /health
2025-10-23T16:30:09.838Z - GET /health
2025-10-23T16:45:39.067Z - GET /health
2025-10-23T17:01:09.786Z - GET /health
2025-10-23T17:16:39.060Z - GET /health
2025-10-23T17:32:09.803Z - GET /health
2025-10-23T17:47:39.058Z - GET /health
2025-10-23T18:03:09.821Z - GET /health
2025-10-23T18:18:39.045Z - GET /health
2025-10-23T18:34:09.781Z - GET /health
2025-10-23T18:49:39.044Z - GET /health
2025-10-23T19:05:09.759Z - GET /health
2025-10-23T19:20:39.050Z - GET /health
2025-10-23T19:36:09.814Z - GET /health
2025-10-23T19:51:39.045Z - GET /health
2025-10-23T20:07:09.773Z - GET /health
2025-10-23T20:22:39.042Z - GET /health
2025-10-23T20:38:09.811Z - GET /health
2025-10-23T20:48:04.854Z - GET /api/auth/google
2025-10-23T20:49:53.544Z - GET /api/auth/google/callback
2025-10-23T20:49:56.867Z - GET /api/auth/me
2025-10-23T20:49:56.921Z - GET /api-keys/list
2025-10-23T20:49:56.929Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 597,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 659,
  rows: 0
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 128,
  rows: 1
}
2025-10-23T20:51:42.232Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 598,
  rows: 1
}
2025-10-23T20:51:43.303Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 602,
  rows: 1
}
2025-10-23T20:51:44.235Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 630,
  rows: 0
}
2025-10-23T20:51:53.539Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-04:98:b2:34:32:cb',
  userAgent: 'curl/8.13.0',
  ipAddress: '41.142.31.136',
  customDeviceName: 'DESKTOP-0O6NDP7 - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-04:98:b2:34:32:cb',
  name: 'DESKTOP-0O6NDP7 - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '41.142.31.136'
}
🔑 Validating API Key: auxly_06d31043c4cc79...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 613,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 121,
  rows: 1
}
2025-10-23T20:53:39.044Z - GET /health
2025-10-23T21:09:09.889Z - GET /health
2025-10-23T21:14:12.242Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 740,
  rows: 1
}
2025-10-23T21:14:18.780Z - GET /api-keys/list
2025-10-23T21:14:18.781Z - GET /api-keys/usage
2025-10-23T21:14:18.782Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 128,
  rows: 2
}
2025-10-23T21:14:19.150Z - GET /api-keys/devices/all
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 597,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 613,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 618,
  rows: 2
}
2025-10-23T21:14:23.606Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-23T21:14:23.606Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
2025-10-23T21:14:23.607Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 638,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 681,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 692,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 140,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 132,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 150,
  rows: 15
}
2025-10-23T21:14:33.081Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 603,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 118,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 136,
  rows: 1
}
2025-10-23T21:16:49.268Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 624,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 127,
  rows: 1
}
2025-10-23T21:24:39.045Z - GET /health
2025-10-23T21:42:30.714Z - GET /health
2025-10-23T21:48:03.660Z - GET /api/auth/me
2025-10-23T21:48:03.669Z - GET /api-keys/list
2025-10-23T21:48:03.670Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 699,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 692,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 695,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 113,
  rows: 1
}
2025-10-23T21:48:04.942Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 593,
  rows: 1
}
2025-10-23T21:57:08.264Z - GET /health
2025-10-23T22:12:13.983Z - GET /health
2025-10-23T22:18:04.990Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 797,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 130,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 122,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 139,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 134,
  rows: 1
}
2025-10-23T22:18:28.526Z - GET /api/admin/users/20
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 613,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 125,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 129,
  rows: 1
}
2025-10-23T22:20:20.057Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 636,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 129,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 123,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-23T22:20:28.148Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 116,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 118,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 122,
  rows: 1
}
2025-10-23T22:27:15.065Z - GET /api/admin/users/20
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 745,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 127,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 130,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 129,
  rows: 0
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 132,
  rows: 1
}
2025-10-23T22:27:43.246Z - GET /health
2025-10-23T22:29:37.540Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 131,
  rows: 1
}
2025-10-23T22:43:13.959Z - GET /health
2025-10-23T22:58:43.235Z - GET /health
2025-10-23T23:14:14.048Z - GET /health
2025-10-23T23:17:22.925Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-1c:04:bb:09:ef:13',
  userAgent: 'curl/8.13.0',
  ipAddress: '41.142.44.25',
  customDeviceName: 'DESKTOP-0O6NDP7 - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-1c:04:bb:09:ef:13',
  name: 'DESKTOP-0O6NDP7 - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '41.142.44.25'
}
🔑 Validating API Key: auxly_06d31043c4cc79...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 743,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 125,
  rows: 1
}
2025-10-23T23:29:43.228Z - GET /health
2025-10-23T23:45:13.943Z - GET /health
2025-10-24T00:00:43.218Z - GET /health
2025-10-24T00:16:13.933Z - GET /health
2025-10-24T00:31:43.211Z - GET /health
2025-10-24T00:47:13.213Z - GET /health
2025-10-24T01:02:43.205Z - GET /health
2025-10-24T01:18:13.214Z - GET /health
2025-10-24T01:33:43.214Z - GET /health
2025-10-24T01:49:14.069Z - GET /health
2025-10-24T01:49:30.029Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  userAgent: 'curl/8.13.0',
  ipAddress: '105.71.5.49',
  customDeviceName: 'DESKTOP-0O6NDP7 - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  name: 'DESKTOP-0O6NDP7 - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '105.71.5.49'
}
🔑 Validating API Key: auxly_06d31043c4cc79...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 732,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-24T01:49:38.667Z - GET /auth/verify
2025-10-24T02:04:41.329Z - GET /api/auth/google
2025-10-24T02:04:43.214Z - GET /health
2025-10-24T02:04:46.271Z - GET /api/auth/google/callback
2025-10-24T02:04:48.283Z - GET /api/auth/me
2025-10-24T02:04:48.285Z - GET /api-keys/usage
2025-10-24T02:04:48.285Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 701,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 707,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-24T02:04:49.316Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 2
}
2025-10-24T02:04:59.918Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  userAgent: 'curl/8.13.0',
  ipAddress: '105.71.5.49',
  customDeviceName: 'DESKTOP-0O6NDP7 - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  name: 'DESKTOP-0O6NDP7 - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '105.71.5.49'
}
🔑 Validating API Key: auxly_06d31043c4cc79...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 627,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 136,
  rows: 1
}
2025-10-24T02:20:13.997Z - GET /health
2025-10-24T02:31:42.081Z - GET /api/auth/google
2025-10-24T02:31:46.473Z - GET /api/auth/google
2025-10-24T02:31:50.043Z - GET /api/auth/google/callback
2025-10-24T02:31:53.037Z - GET /api/auth/me
2025-10-24T02:31:53.039Z - GET /api-keys/list
2025-10-24T02:31:53.043Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 734,
  rows: 2
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 751,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-24T02:31:54.040Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 647,
  rows: 2
}
2025-10-24T02:32:14.840Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  userAgent: 'curl/8.13.0',
  ipAddress: '105.71.5.49',
  customDeviceName: 'DESKTOP-0O6NDP7 - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-c0:bf:be:dd:52:82',
  name: 'DESKTOP-0O6NDP7 - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '105.71.5.49'
}
🔑 Validating API Key: auxly_06d31043c4cc79...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-24T02:35:43.202Z - GET /health
2025-10-24T02:51:13.896Z - GET /health
2025-10-24T03:06:43.209Z - GET /health
2025-10-24T03:22:13.925Z - GET /health
2025-10-24T03:37:43.194Z - GET /health
2025-10-24T03:53:13.907Z - GET /health
2025-10-24T04:08:43.196Z - GET /health
2025-10-24T04:24:14.002Z - GET /health
2025-10-24T04:39:43.193Z - GET /health
2025-10-24T04:55:13.927Z - GET /health
2025-10-24T05:10:43.184Z - GET /health
2025-10-24T05:26:13.916Z - GET /health
2025-10-24T05:41:43.296Z - GET /health
2025-10-24T05:57:13.994Z - GET /health
2025-10-24T06:12:43.183Z - GET /health
2025-10-24T06:28:13.881Z - GET /health
2025-10-24T06:43:43.181Z - GET /health
2025-10-24T06:59:14.124Z - GET /health
2025-10-24T07:14:43.182Z - GET /health
2025-10-24T07:30:14.017Z - GET /health
2025-10-24T07:45:43.172Z - GET /health
2025-10-24T08:01:13.912Z - GET /health
2025-10-24T08:16:43.180Z - GET /health
2025-10-24T08:32:13.897Z - GET /health
2025-10-24T08:47:43.172Z - GET /health
2025-10-24T09:03:14.017Z - GET /health
2025-10-24T09:18:43.162Z - GET /health
2025-10-24T09:34:14.195Z - GET /health
2025-10-24T09:49:43.188Z - GET /health
2025-10-24T10:02:58.975Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 137,
  rows: 1
}
2025-10-24T10:02:59.426Z - GET /api-keys/usage
2025-10-24T10:02:59.426Z - GET /api/auth/me
2025-10-24T10:02:59.427Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 134,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 710,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 710,
  rows: 2
}
2025-10-24T10:03:00.549Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 2
}
2025-10-24T10:03:04.395Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-24T10:03:04.396Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
2025-10-24T10:03:04.396Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 595,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 599,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 639,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 119,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 124,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 132,
  rows: 15
}
2025-10-24T10:03:17.550Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 125,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 136,
  rows: 1
}
2025-10-24T10:03:18.939Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 602,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 124,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 132,
  rows: 1
}
2025-10-24T10:05:13.893Z - GET /health
2025-10-24T10:20:43.179Z - GET /health
2025-10-24T10:20:47.378Z - GET /api/auth/me
2025-10-24T10:20:47.379Z - GET /api-keys/usage
2025-10-24T10:20:47.379Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 689,
  rows: 6
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 714,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 729,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 118,
  rows: 1
}
2025-10-24T10:20:48.640Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 605,
  rows: 2
}
2025-10-24T10:22:39.081Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-24T10:22:39.089Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-24T10:22:39.089Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 598,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 601,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 117,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 15
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 126,
  rows: 1
}
2025-10-24T10:22:48.658Z - POST /api/admin/users/21/device-limit
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 605,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT max_devices FROM users WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE users SET max_devices = $1 WHERE id = $2',
  duration: 156,
  rows: 1
}
Executed query {
  text: 'INSERT INTO device_limit_audit_log \n' +
    '       (user_id, admin_id, old_limit, new_limit, reason)\n' +
    '       VALUES ($1, $2, $3, $4, $5)',
  duration: 149,
  rows: 1
}
2025-10-24T10:22:49.996Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 589,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 125,
  rows: 15
}
2025-10-24T10:23:25.561Z - GET /api/admin/users/21
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 604,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 120,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 117,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 125,
  rows: 1
}
2025-10-24T10:23:37.338Z - GET /api/admin/users/14
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE u.id = $1\n' +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        id,\n' +
    '        name,\n' +
    '        revoked,\n' +
    '        last_used,\n' +
    '        created_at,\n' +
    '        expires_at\n' +
    '      FROM api_keys\n' +
    '      WHERE user_id = $1\n' +
    '      ORDER BY created_at DESC\n' +
    '    ',
  duration: 119,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.ip_address,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 122,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        COUNT(DISTINCT t.id) as total_tasks,\n' +
    "        COUNT(DISTINCT CASE WHEN t.status = 'todo' THEN t.id END) as tasks_todo,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'in_progress' THEN t.id END) as tasks_in_progress,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'review' THEN t.id END) as tasks_review,\n" +
    "        COUNT(DISTINCT CASE WHEN t.status = 'done' THEN t.id END) as tasks_done,\n" +
    '        COUNT(DISTINCT ul.id) as total_api_calls,\n' +
    "        COUNT(DISTINCT CASE WHEN ul.timestamp > NOW() - INTERVAL '30 days' THEN ul.id END) as api_calls_last_30_days,\n" +
    '        EXTRACT(DAY FROM NOW() - u.created_at) as account_age_days,\n' +
    '        MAX(ak.last_used) as last_login\n' +
    '      FROM users u\n' +
    '      LEFT JOIN tasks t ON u.id = t.user_id\n' +
    '      LEFT JOIN usage_logs ul ON u.id = ul.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id\n' +
    '      WHERE u.id = $1\n' +
    '      GROUP BY u.id, u.created_at\n' +
    '    ',
  duration: 128,
  rows: 1
}
2025-10-24T10:24:09.476Z - GET /api/auth/me
2025-10-24T10:24:09.483Z - GET /api-keys/usage
2025-10-24T10:24:09.484Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 611,
  rows: 6
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 619,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 642,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-24T10:24:10.651Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 661,
  rows: 2
}
2025-10-24T10:24:17.945Z - GET /api/auth/me
2025-10-24T10:24:17.952Z - GET /api-keys/list
2025-10-24T10:24:17.953Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 601,
  rows: 2
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 609,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 605,
  rows: 6
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-24T10:24:18.789Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 680,
  rows: 2
}
2025-10-24T10:36:13.909Z - GET /health
2025-10-24T10:51:43.156Z - GET /health
2025-10-24T11:07:13.168Z - GET /health
2025-10-24T11:22:43.281Z - GET /health
2025-10-24T11:38:13.879Z - GET /health
2025-10-24T11:44:29.131Z - GET /api-keys/list
2025-10-24T11:44:29.131Z - GET /api/auth/me
2025-10-24T11:44:29.132Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 687,
  rows: 2
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 687,
  rows: 6
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 728,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 119,
  rows: 1
}
2025-10-24T11:44:30.035Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 2
}
2025-10-24T11:53:43.252Z - GET /health
2025-10-24T12:09:13.979Z - GET /health
2025-10-24T12:24:43.282Z - GET /health
2025-10-24T12:40:13.851Z - GET /health
2025-10-24T12:55:43.133Z - GET /health
2025-10-24T13:11:13.847Z - GET /health
2025-10-24T13:26:43.137Z - GET /health
2025-10-24T13:42:14.025Z - GET /health
2025-10-24T13:57:43.293Z - GET /health
2025-10-24T14:13:13.140Z - GET /health
2025-10-24T14:28:43.125Z - GET /health
2025-10-24T14:44:13.839Z - GET /health
2025-10-24T14:59:43.134Z - GET /health
2025-10-24T15:15:13.977Z - GET /health
2025-10-24T15:18:04.273Z - GET /api-keys/usage
2025-10-24T15:18:04.274Z - GET /api/auth/me
2025-10-24T15:18:04.274Z - GET /api-keys/list
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 714,
  rows: 6
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 715,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 731,
  rows: 2
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-24T15:18:05.567Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 2
}
2025-10-24T15:18:35.451Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 619,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-24T15:24:46.926Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 774,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-24T15:25:56.936Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_8c7f988b7015e2...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 633,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 52 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 116,
  rows: 0
}
2025-10-24T15:26:05.803Z - DELETE /api-keys/52
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 120,
  rows: 3
}
✅ API Key 52 revoked and ALL 3 user devices removed (fresh 0/2 start)
2025-10-24T15:26:06.496Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 650,
  rows: 1
}
2025-10-24T15:26:07.585Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 587,
  rows: 3
}
2025-10-24T15:26:08.403Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 584,
  rows: 0
}
2025-10-24T15:26:12.456Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 602,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 137,
  rows: 1
}
2025-10-24T15:26:22.785Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 625,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 123,
  rows: 1
}
2025-10-24T15:26:39.575Z - GET /api-keys/usage
2025-10-24T15:26:39.575Z - GET /api/auth/me
2025-10-24T15:26:39.575Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 602,
  rows: 3
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 603,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 617,
  rows: 7
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 121,
  rows: 1
}
2025-10-24T15:26:40.439Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 616,
  rows: 2
}
2025-10-24T15:30:19.745Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 702,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 138,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
2025-10-24T15:30:21.905Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 654,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-24T15:30:43.109Z - GET /health
2025-10-24T15:39:46.624Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 775,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 177,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-24T15:42:32.382Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 718,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 178,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 142,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-24T15:43:48.334Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 679,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 149,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 130,
  rows: 1
}
2025-10-24T15:46:13.242Z - GET /health
2025-10-24T16:01:43.119Z - GET /health
2025-10-24T16:17:13.951Z - GET /health
2025-10-24T16:32:43.245Z - GET /health
2025-10-24T16:38:34.562Z - GET /security.txt
2025-10-24T16:38:51.179Z - GET /favicon.ico
2025-10-24T16:48:13.966Z - GET /health
2025-10-24T17:03:43.099Z - GET /health
2025-10-24T17:19:14.124Z - GET /health
2025-10-24T17:34:43.104Z - GET /health
2025-10-24T17:50:14.048Z - GET /health
2025-10-24T18:05:43.185Z - GET /health
2025-10-24T18:21:13.221Z - GET /health
2025-10-24T18:36:43.182Z - GET /health
2025-10-24T18:52:13.913Z - GET /health
2025-10-24T19:07:43.091Z - GET /health
2025-10-24T19:23:13.218Z - GET /health
2025-10-24T19:38:43.070Z - GET /health
2025-10-24T19:54:14.248Z - GET /health
2025-10-24T20:09:43.080Z - GET /health
2025-10-24T20:25:13.880Z - GET /health
2025-10-24T20:40:43.079Z - GET /health
2025-10-24T20:56:13.914Z - GET /health
2025-10-24T21:11:43.203Z - GET /health
2025-10-24T21:27:13.938Z - GET /health
2025-10-24T21:42:43.054Z - GET /health
2025-10-24T21:58:13.148Z - GET /health
2025-10-24T22:13:43.049Z - GET /health
2025-10-24T22:26:25.412Z - GET /api/auth/me
2025-10-24T22:26:25.413Z - GET /api-keys/usage
2025-10-24T22:26:25.414Z - GET /api-keys/list
2025-10-24T22:26:27.570Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 706,
  rows: 1
}
2025-10-24T22:26:28.569Z - GET /api/auth/me
2025-10-24T22:26:28.579Z - GET /api-keys/list
2025-10-24T22:26:28.580Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 602,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 636,
  rows: 7
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 124,
  rows: 1
}
2025-10-24T22:26:29.445Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 609,
  rows: 2
}
2025-10-24T22:27:04.345Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  userAgent: 'curl/8.14.1',
  ipAddress: '2.90.250.60',
  customDeviceName: 'wsamoum - VS Code Extension',
  customOsInfo: 'Windows 10.0.26200',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-da:b7:be:05:0b:7f',
  name: 'wsamoum - VS Code Extension',
  osInfo: 'Windows 10.0.26200',
  browserInfo: 'VS Code Extension',
  ipAddress: '2.90.250.60'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 591,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-24T22:29:13.865Z - GET /health
2025-10-24T22:34:25.629Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:25.630Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:25.630Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 711,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 726,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 730,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 121,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 124,
  rows: 15
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 123,
  rows: 3
}
2025-10-24T22:34:36.759Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:36.772Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:36.773Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 609,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 606,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 641,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 126,
  rows: 15
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 121,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 130,
  rows: 1
}
2025-10-24T22:34:40.550Z - GET /api/auth/me
2025-10-24T22:34:40.553Z - GET /api-keys/list
2025-10-24T22:34:40.560Z - GET /api-keys/usage
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 581,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 588,
  rows: 8
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 632,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-24T22:34:41.366Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 2
}
2025-10-24T22:34:43.212Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:43.225Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-24T22:34:43.225Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 585,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 585,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 628,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 120,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 125,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 133,
  rows: 15
}
2025-10-24T22:34:45.424Z - GET /api/auth/me
2025-10-24T22:34:45.429Z - GET /api-keys/list
2025-10-24T22:34:45.440Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 590,
  rows: 8
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 603,
  rows: 3
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 610,
  rows: 1
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 115,
  rows: 1
}
2025-10-24T22:34:46.251Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 583,
  rows: 2
}
2025-10-24T22:44:43.161Z - GET /health
2025-10-24T23:00:13.959Z - GET /health
2025-10-24T23:15:43.136Z - GET /health
2025-10-24T23:31:13.910Z - GET /health
2025-10-24T23:46:43.022Z - GET /health
2025-10-25T00:02:00.708Z - GET /health
2025-10-25T00:16:43.121Z - GET /health
2025-10-25T00:32:13.936Z - GET /health
2025-10-25T00:47:43.149Z - GET /health
2025-10-25T01:03:13.114Z - GET /health
2025-10-25T01:18:43.024Z - GET /health
2025-10-25T01:34:14.048Z - GET /health
2025-10-25T01:49:43.137Z - GET /health
2025-10-25T02:05:13.133Z - GET /health
2025-10-25T02:08:07.050Z - GET /api/.env
2025-10-25T02:08:07.202Z - GET /api/.env.save
2025-10-25T02:08:07.350Z - GET /api/.env.bak
2025-10-25T02:08:07.596Z - GET /api/.env.old
2025-10-25T02:08:26.617Z - GET /api/.env
2025-10-25T02:08:26.765Z - GET /api/.env.save
2025-10-25T02:08:27.011Z - GET /api/.env.bak
2025-10-25T02:08:27.192Z - GET /api/.env.old
2025-10-25T02:20:43.136Z - GET /health
2025-10-25T02:36:13.847Z - GET /health
2025-10-25T02:51:43.119Z - GET /health
2025-10-25T02:54:28.985Z - GET /wiki
2025-10-25T02:54:32.196Z - GET /favicon.ico
2025-10-25T02:54:55.123Z - GET /favicon.ico
2025-10-25T02:55:12.001Z - GET /robots.txt
2025-10-25T02:55:17.472Z - GET /favicon.ico
2025-10-25T03:07:13.022Z - GET /health
2025-10-25T03:22:43.017Z - GET /health
2025-10-25T03:38:13.900Z - GET /health
2025-10-25T03:53:43.123Z - GET /health
2025-10-25T04:09:14.023Z - GET /health
2025-10-25T04:24:43.127Z - GET /health
2025-10-25T04:40:13.841Z - GET /health
2025-10-25T04:55:43.117Z - GET /health
2025-10-25T05:11:13.188Z - GET /health
2025-10-25T05:26:43.103Z - GET /health
2025-10-25T05:42:13.013Z - GET /health
2025-10-25T05:57:43.109Z - GET /health
2025-10-25T06:13:13.948Z - GET /health
2025-10-25T06:28:43.112Z - GET /health
2025-10-25T06:44:13.894Z - GET /health
2025-10-25T06:59:43.002Z - GET /health
2025-10-25T07:15:13.807Z - GET /health
2025-10-25T07:30:42.990Z - GET /health
2025-10-25T07:46:13.788Z - GET /health
2025-10-25T08:01:42.976Z - GET /health
2025-10-25T08:17:13.109Z - GET /health
2025-10-25T08:32:43.113Z - GET /health
2025-10-25T08:35:06.897Z - GET /favicon.ico
2025-10-25T08:35:12.393Z - GET /sitemap.xml
2025-10-25T08:35:14.274Z - GET /favicon.ico
2025-10-25T08:48:13.894Z - GET /health
2025-10-25T09:03:43.094Z - GET /health
2025-10-25T09:10:08.587Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ba5df68af67f99...
2025-10-25T09:10:08.587Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 709,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 119,
  rows: 0
}
2025-10-25T09:10:21.751Z - GET /auth/verify
2025-10-25T09:10:30.492Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 120,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-25T09:19:14.151Z - GET /health
2025-10-25T09:34:25.203Z - POST /api/auth/login
Executed query {
  text: 'SELECT id, email, password_hash, created_at FROM users WHERE email = $1',
  duration: 324,
  rows: 1
}
2025-10-25T09:34:35.665Z - GET /api/auth/me
2025-10-25T09:34:35.673Z - GET /api-keys/list
2025-10-25T09:34:35.674Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 701,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 737,
  rows: 8
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 1009,
  rows: 1
}
2025-10-25T09:34:37.423Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 1216,
  rows: 2
}
2025-10-25T09:34:42.982Z - GET /health
2025-10-25T09:35:04.027Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 1430,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 127,
  rows: 0
}
2025-10-25T09:36:53.359Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 372,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 59 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 126,
  rows: 0
}
2025-10-25T09:37:25.176Z - DELETE /api-keys/59
Executed query {
  text: 'UPDATE api_keys SET revoked = true WHERE id = $1 AND user_id = $2 RETURNING id',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'DELETE FROM api_key_devices \n' +
    '       WHERE api_key_id IN (\n' +
    '         SELECT id FROM api_keys WHERE user_id = $1\n' +
    '       )',
  duration: 129,
  rows: 2
}
✅ API Key 59 revoked and ALL 2 user devices removed (fresh 0/2 start)
2025-10-25T09:37:25.627Z - POST /api-keys/generate
Executed query {
  text: 'INSERT INTO api_keys (user_id, key_hash, name, expires_at) \n' +
    "       VALUES ($1, $2, $3, NOW() + INTERVAL '6 months') \n" +
    '       RETURNING id, name, created_at, expires_at',
  duration: 1558,
  rows: 1
}
2025-10-25T09:37:28.007Z - GET /api-keys/list
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 595,
  rows: 4
}
2025-10-25T09:37:28.796Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 602,
  rows: 0
}
2025-10-25T09:37:41.387Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 588,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 117,
  rows: 1
}
2025-10-25T09:37:50.228Z - GET /api-keys/usage
2025-10-25T09:37:50.228Z - GET /api-keys/list
2025-10-25T09:37:50.229Z - GET /api/auth/me
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 595,
  rows: 4
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 595,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 632,
  rows: 8
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 126,
  rows: 1
}
2025-10-25T09:37:51.012Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 642,
  rows: 1
}
2025-10-25T09:40:40.165Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 949,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T09:40:55.399Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 606,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 121,
  rows: 1
}
2025-10-25T09:42:16.148Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_ab2cd4b532c668...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 388,
  rows: 0
}
2025-10-25T09:42:19.960Z - GET /auth/verify
2025-10-25T09:42:29.839Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 116,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 251,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 503,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 319,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 163,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 298,
  rows: 1
}
2025-10-25T09:42:42.553Z - GET /api/auth/me
2025-10-25T09:42:42.554Z - GET /api-keys/usage
2025-10-25T09:42:42.554Z - GET /api-keys/list
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 587,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 630,
  rows: 4
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 634,
  rows: 8
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T09:42:43.508Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 598,
  rows: 2
}
2025-10-25T09:43:37.102Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_27f6e2f9a058d3...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 814,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 207,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 149,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T09:43:52.667Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 597,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 120,
  rows: 1
}
2025-10-25T09:43:59.420Z - GET /api-keys/usage
2025-10-25T09:43:59.421Z - GET /api-keys/list
2025-10-25T09:43:59.421Z - GET /api/auth/me
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 586,
  rows: 8
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 596,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 597,
  rows: 4
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T09:44:00.311Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 597,
  rows: 3
}
2025-10-25T09:50:13.782Z - GET /health
2025-10-25T09:53:49.817Z - GET /api/settings
🔍 Admin middleware - userId from JWT: 14
2025-10-25T09:53:49.817Z - GET /api/admin/users
🔍 Admin middleware - userId from JWT: 14
2025-10-25T09:53:49.817Z - GET /api/admin/stats
🔍 Admin middleware - userId from JWT: 14
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 762,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 763,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT id, email, is_admin, is_blocked FROM users WHERE id = $1',
  duration: 762,
  rows: 1
}
🔍 Admin middleware - Query result rows: 1
🔍 Admin middleware - User found: {
  id: 14,
  email: 'wsamoum@tzamun.sa',
  is_admin: true,
  is_blocked: false
}
Executed query {
  text: 'SELECT * FROM system_settings ORDER BY setting_key',
  duration: 128,
  rows: 3
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        (SELECT COUNT(*) FROM users) as total_users,\n' +
    '        (SELECT COUNT(*) FROM users WHERE is_blocked = false) as active_users,\n' +
    '        (SELECT COUNT(*) FROM api_keys WHERE revoked = false) as active_api_keys,\n' +
    '        (SELECT COUNT(*) FROM api_key_devices akd \n' +
    '         JOIN api_keys ak ON akd.api_key_id = ak.id \n' +
    '         WHERE ak.revoked = false) as total_devices,\n' +
    "        (SELECT COUNT(*) FROM subscriptions WHERE plan_tier = 'pro') as pro_users\n" +
    '    ',
  duration: 131,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        u.id,\n' +
    '        u.email,\n' +
    '        u.is_admin,\n' +
    '        u.is_blocked,\n' +
    '        u.created_at,\n' +
    '        u.max_devices,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status,\n' +
    '        COUNT(DISTINCT ak.id) as api_key_count,\n' +
    '        COUNT(DISTINCT akd.id) as device_count,\n' +
    '        MAX(ak.last_used) as last_active\n' +
    '      FROM users u\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      LEFT JOIN api_keys ak ON u.id = ak.user_id AND ak.revoked = false\n' +
    '      LEFT JOIN api_key_devices akd ON ak.id = akd.api_key_id\n' +
    '      GROUP BY u.id, u.email, u.is_admin, u.is_blocked, u.created_at, u.max_devices, s.plan_tier, s.status\n' +
    '      ORDER BY u.created_at DESC\n' +
    '    ',
  duration: 135,
  rows: 15
}
2025-10-25T10:05:43.096Z - GET /health
2025-10-25T10:07:04.706Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:21',
  userAgent: '',
  ipAddress: '10.252.1.6',
  customDeviceName: 'tchub.tzamun.com - VS Code Extension',
  customOsInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:21',
  name: 'tchub.tzamun.com - VS Code Extension',
  osInfo: 'Linux 5.14.0-570.12.1.el9_6.x86_64',
  browserInfo: 'VS Code Extension',
  ipAddress: '10.252.1.6'
}
🔑 Validating API Key: auxly_27f6e2f9a058d3...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 720,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T10:11:37.401Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 599,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-25T10:12:34.117Z - GET /api-keys/list
2025-10-25T10:12:34.118Z - GET /api/auth/me
2025-10-25T10:12:34.118Z - GET /api-keys/usage
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 702,
  rows: 1
}
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 703,
  rows: 8
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 745,
  rows: 4
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 120,
  rows: 1
}
2025-10-25T10:12:35.133Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 606,
  rows: 3
}
2025-10-25T10:12:43.575Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 611,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-25T10:21:13.094Z - GET /health
2025-10-25T10:25:27.663Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 719,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-25T10:34:17.304Z - GET /api/auth/me
2025-10-25T10:34:17.304Z - GET /api-keys/list
2025-10-25T10:34:17.304Z - GET /api-keys/usage
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        DATE(timestamp) as date,\n' +
    '        COUNT(*) as requests\n' +
    '      FROM usage_logs\n' +
    '      WHERE user_id = $1\n' +
    "        AND timestamp >= NOW() - INTERVAL '14 days'\n" +
    '      GROUP BY DATE(timestamp)\n' +
    '      ORDER BY DATE(timestamp) ASC\n' +
    '    ',
  duration: 695,
  rows: 8
}
Executed query {
  text: 'SELECT u.id, u.email, u.created_at, u.is_admin, u.is_blocked, u.max_devices,\n' +
    '              s.plan_tier, s.status as subscription_status\n' +
    '       FROM users u\n' +
    '       LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '       WHERE u.id = $1',
  duration: 702,
  rows: 1
}
Executed query {
  text: 'SELECT \n' +
    '        id, \n' +
    '        name, \n' +
    '        last_used, \n' +
    '        revoked, \n' +
    '        created_at,\n' +
    '        expires_at,\n' +
    '        (expires_at <= NOW()) as is_expired\n' +
    '       FROM api_keys \n' +
    '       WHERE user_id = $1 \n' +
    '       ORDER BY created_at DESC',
  duration: 708,
  rows: 4
}
Executed query {
  text: 'SELECT plan_tier FROM subscriptions WHERE user_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T10:34:18.309Z - GET /api-keys/devices/all
Executed query {
  text: '\n' +
    '      SELECT \n' +
    '        akd.id,\n' +
    '        akd.api_key_id,\n' +
    '        akd.device_fingerprint,\n' +
    '        akd.device_name,\n' +
    '        akd.os_info,\n' +
    '        akd.browser_info,\n' +
    '        akd.first_used_at,\n' +
    '        akd.last_used_at,\n' +
    '        ak.name as api_key_name,\n' +
    '        ak.revoked as api_key_revoked\n' +
    '      FROM api_key_devices akd\n' +
    '      JOIN api_keys ak ON akd.api_key_id = ak.id\n' +
    '      WHERE ak.user_id = $1 AND ak.revoked = false\n' +
    '      ORDER BY akd.last_used_at DESC\n' +
    '    ',
  duration: 603,
  rows: 3
}
2025-10-25T10:34:32.732Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 625,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T10:36:43.099Z - GET /health
2025-10-25T10:52:12.992Z - GET /health
2025-10-25T10:54:36.378Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 703,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T11:04:15.702Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 722,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T11:06:19.841Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 596,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
2025-10-25T11:07:42.978Z - GET /health
2025-10-25T11:09:30.717Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 721,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T11:10:48.793Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 658,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T11:11:30.779Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 609,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-25T11:22:50.274Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 731,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-25T11:23:13.672Z - GET /health
2025-10-25T11:32:38.092Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 747,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 127,
  rows: 1
}
2025-10-25T11:38:42.978Z - GET /health
2025-10-25T11:43:08.271Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 745,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-25T11:49:05.508Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 732,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 139,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 141,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 131,
  rows: 1
}
2025-10-25T11:49:20.317Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 617,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-25T11:50:45.214Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 618,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T11:52:33.157Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T11:54:12.992Z - GET /health
2025-10-25T11:55:33.875Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 721,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T11:56:07.344Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 649,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 130,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 128,
  rows: 1
}
2025-10-25T11:59:38.112Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 639,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 132,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T12:01:10.134Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 708,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 120,
  rows: 1
}
2025-10-25T12:09:42.955Z - GET /health
2025-10-25T12:25:13.679Z - GET /health
2025-10-25T12:33:20.073Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 704,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T12:40:42.945Z - GET /health
2025-10-25T12:48:29.325Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 717,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-25T12:49:02.367Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T12:49:18.401Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 610,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T12:50:25.049Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 595,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T12:50:55.719Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 608,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T12:51:43.103Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 602,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 119,
  rows: 1
}
2025-10-25T12:56:13.688Z - GET /health
2025-10-25T13:11:42.954Z - GET /health
2025-10-25T13:18:04.497Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 716,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 117,
  rows: 1
}
2025-10-25T13:19:54.512Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 621,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-25T13:27:12.956Z - GET /health
2025-10-25T13:33:04.182Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 762,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 135,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T13:34:37.703Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_16c3077b87d9d6...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 607,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 0
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO api_key_devices \n' +
    '       (api_key_id, device_fingerprint, device_name, os_info, browser_info, ip_address)\n' +
    '       VALUES ($1, $2, $3, $4, $5, $6)',
  duration: 118,
  rows: 1
}
2025-10-25T13:37:54.868Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 610,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-25T13:42:42.944Z - GET /health
2025-10-25T13:49:10.921Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 769,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T13:58:13.765Z - GET /health
2025-10-25T14:02:21.717Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 758,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 124,
  rows: 1
}
2025-10-25T14:02:47.196Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 640,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 134,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 131,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 129,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T14:03:42.649Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 633,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 123,
  rows: 1
}
2025-10-25T14:13:42.925Z - GET /health
2025-10-25T14:18:16.075Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 680,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 126,
  rows: 1
}
2025-10-25T14:29:13.781Z - GET /health
2025-10-25T14:44:42.952Z - GET /health
2025-10-25T14:49:39.822Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 698,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T14:51:31.848Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 587,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 123,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T14:54:42.081Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 697,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-25T14:57:38.760Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 617,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 139,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T15:00:13.630Z - GET /health
2025-10-25T15:11:01.928Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_c799e8cf68b697...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 766,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 48 (User: i.almehdhar@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 57 (User: a.fouad152@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 53 (User: megg62110@gmail.com)
  ❌ No match
🔐 Comparing with API Key ID: 58 (User: said.benlyazid@gmail.com)
  ❌ No match
Executed query {
  text: 'SELECT ak.id, ak.key_hash, ak.expires_at \n' +
    '       FROM api_keys ak\n' +
    '       WHERE ak.revoked = false \n' +
    '       AND ak.expires_at <= NOW()',
  duration: 128,
  rows: 0
}
2025-10-25T15:11:04.684Z - GET /auth/verify
2025-10-25T15:11:16.947Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 126,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 128,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 125,
  rows: 1
}
2025-10-25T15:15:42.943Z - GET /health
2025-10-25T15:24:42.536Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  userAgent: 'curl/8.13.0',
  ipAddress: '127.0.0.1',
  customDeviceName: 'TZAMUN - VS Code Extension',
  customOsInfo: 'Windows 10.0.20348',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:1b',
  name: 'TZAMUN - VS Code Extension',
  osInfo: 'Windows 10.0.20348',
  browserInfo: 'VS Code Extension',
  ipAddress: '127.0.0.1'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 686,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 122,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 113,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 121,
  rows: 1
}
2025-10-25T15:27:37.742Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 602,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 114,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 116,
  rows: 1
}
2025-10-25T15:31:12.931Z - GET /health
2025-10-25T15:32:33.621Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
❌ API Key format invalid
2025-10-25T15:32:40.442Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 698,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
2025-10-25T15:34:10.159Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-00:15:5d:01:fe:14',
  userAgent: 'curl/8.13.0',
  ipAddress: '176.224.149.182',
  customDeviceName: 'ATCORP-VPS-WS - VS Code Extension',
  customOsInfo: 'Windows 10.0.19045',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-00:15:5d:01:fe:14',
  name: 'ATCORP-VPS-WS - VS Code Extension',
  osInfo: 'Windows 10.0.19045',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 633,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 124,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 126,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 127,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 125,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 122,
  rows: 1
}
2025-10-25T15:42:46.822Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 706,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 116,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 118,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 115,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 115,
  rows: 1
}
2025-10-25T15:42:59.835Z - GET /api-keys/verify
🔍 Device Tracking Debug: {
  hasFingerprint: true,
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  userAgent: 'curl/8.14.1',
  ipAddress: '176.224.149.182',
  customDeviceName: 'WSAMOUM - VS Code Extension',
  customOsInfo: 'Windows 10.0.26100',
  customBrowserInfo: 'VS Code Extension'
}
📱 Device Info: PRESENT {
  fingerprint: 'mac-e0:8f:4c:56:ca:89',
  name: 'WSAMOUM - VS Code Extension',
  osInfo: 'Windows 10.0.26100',
  browserInfo: 'VS Code Extension',
  ipAddress: '176.224.149.182'
}
🔑 Validating API Key: auxly_9e94f3d1ca5b12...
Executed query {
  text: 'SELECT \n' +
    '        ak.id, \n' +
    '        ak.user_id, \n' +
    '        ak.key_hash, \n' +
    '        ak.revoked,\n' +
    '        ak.expires_at,\n' +
    '        u.email,\n' +
    '        s.plan_tier,\n' +
    '        s.status as subscription_status\n' +
    '      FROM api_keys ak\n' +
    '      JOIN users u ON ak.user_id = u.id\n' +
    '      LEFT JOIN subscriptions s ON u.id = s.user_id\n' +
    '      WHERE ak.revoked = false \n' +
    '      AND ak.expires_at > NOW()',
  duration: 625,
  rows: 8
}
🔍 Found 8 valid API keys to check
🔐 Comparing with API Key ID: 1 (User: test@auxly.com)
  ❌ No match
🔐 Comparing with API Key ID: 29 (User: aasamoum@yahoo.com)
  ❌ No match
🔐 Comparing with API Key ID: 56 (User: s.moussa@tzamun.sa)
  ❌ No match
🔐 Comparing with API Key ID: 60 (User: wsamoum@tzamun.sa)
  ✅ MATCH!
Executed query {
  text: 'UPDATE api_keys SET last_used = NOW() WHERE id = $1',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'INSERT INTO usage_logs (api_key_id, user_id, action_type, metadata) VALUES ($1, $2, $3, $4)',
  duration: 120,
  rows: 1
}
Executed query {
  text: 'SELECT u.max_devices \n' +
    '       FROM api_keys ak\n' +
    '       JOIN users u ON ak.user_id = u.id\n' +
    '       WHERE ak.id = $1',
  duration: 119,
  rows: 1
}
Executed query {
  text: 'SELECT id FROM api_key_devices WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 121,
  rows: 1
}
Executed query {
  text: 'UPDATE api_key_devices \n' +
    '         SET last_used_at = NOW(), ip_address = $3\n' +
    '         WHERE api_key_id = $1 AND device_fingerprint = $2',
  duration: 117,
  rows: 1
}
Executed query {
  text: 'SELECT COUNT(*) as count FROM api_key_devices WHERE api_key_id = $1',
  duration: 118,
  rows: 1
}
